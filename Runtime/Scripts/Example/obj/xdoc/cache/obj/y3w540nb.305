id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: IVLab.Plotting
  commentId: N:IVLab.Plotting
  language: CSharp
  name:
    CSharp: IVLab.Plotting
    VB: IVLab.Plotting
  nameWithType:
    CSharp: IVLab.Plotting
    VB: IVLab.Plotting
  qualifiedName:
    CSharp: IVLab.Plotting
    VB: IVLab.Plotting
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: IVLab.Plotting.LinkedDataExample
    commentId: T:IVLab.Plotting.LinkedDataExample
    language: CSharp
    name:
      CSharp: LinkedDataExample
      VB: LinkedDataExample
    nameWithType:
      CSharp: LinkedDataExample
      VB: LinkedDataExample
    qualifiedName:
      CSharp: IVLab.Plotting.LinkedDataExample
      VB: IVLab.Plotting.LinkedDataExample
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: LinkedDataExample
      path: ''
      startLine: 9
    summary: "\nAn example class for how one might implement <xref href=\"IVLab.Plotting.LinkedData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LinkedDataExample : LinkedData'
        VB: >-
          Public Class LinkedDataExample

              Inherits LinkedData
    inheritance:
    - System.Object
    - IVLab.Plotting.LinkedData
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVLab.Plotting.LinkedDataExample.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      commentId: M:IVLab.Plotting.LinkedDataExample.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      language: CSharp
      name:
        CSharp: UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
        VB: UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
      nameWithType:
        CSharp: LinkedDataExample.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
        VB: LinkedDataExample.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
      qualifiedName:
        CSharp: IVLab.Plotting.LinkedDataExample.UpdateDataPoint(System.Int32, IVLab.Plotting.LinkedIndices.LinkedAttributes)
        VB: IVLab.Plotting.LinkedDataExample.UpdateDataPoint(System.Int32, IVLab.Plotting.LinkedIndices.LinkedAttributes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: UpdateDataPoint
        path: ''
        startLine: 25
      syntax:
        content:
          CSharp: public override void UpdateDataPoint(int index, LinkedIndices.LinkedAttributes linkedAttributes)
          VB: Public Overrides Sub UpdateDataPoint(index As Integer, linkedAttributes As LinkedIndices.LinkedAttributes)
        parameters:
        - id: index
          type: System.Int32
        - id: linkedAttributes
          type: IVLab.Plotting.LinkedIndices.LinkedAttributes
      overload: IVLab.Plotting.LinkedDataExample.UpdateDataPoint*
      overridden: IVLab.Plotting.LinkedData.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    references:
      IVLab.Plotting.LinkedData: 
  - id: IVLab.Plotting.LinkedData
    commentId: T:IVLab.Plotting.LinkedData
    language: CSharp
    name:
      CSharp: LinkedData
      VB: LinkedData
    nameWithType:
      CSharp: LinkedData
      VB: LinkedData
    qualifiedName:
      CSharp: IVLab.Plotting.LinkedData
      VB: IVLab.Plotting.LinkedData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: LinkedData
      path: ''
      startLine: 54
    summary: "\nProvides an interface for any script that wants to be able to update data\nin sync with the data plots.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class LinkedData : MonoBehaviour'
        VB: >-
          Public MustInherit Class LinkedData

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: IVLab.Plotting.LinkedData.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      commentId: M:IVLab.Plotting.LinkedData.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      language: CSharp
      name:
        CSharp: UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
        VB: UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
      nameWithType:
        CSharp: LinkedData.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
        VB: LinkedData.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
      qualifiedName:
        CSharp: IVLab.Plotting.LinkedData.UpdateDataPoint(System.Int32, IVLab.Plotting.LinkedIndices.LinkedAttributes)
        VB: IVLab.Plotting.LinkedData.UpdateDataPoint(System.Int32, IVLab.Plotting.LinkedIndices.LinkedAttributes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: UpdateDataPoint
        path: ''
        startLine: 56
      syntax:
        content:
          CSharp: public abstract void UpdateDataPoint(int index, LinkedIndices.LinkedAttributes linkedAttributes)
          VB: Public MustOverride Sub UpdateDataPoint(index As Integer, linkedAttributes As LinkedIndices.LinkedAttributes)
        parameters:
        - id: index
          type: System.Int32
        - id: linkedAttributes
          type: IVLab.Plotting.LinkedIndices.LinkedAttributes
      overload: IVLab.Plotting.LinkedData.UpdateDataPoint*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: IVLab.Plotting.LinkedIndices
    commentId: T:IVLab.Plotting.LinkedIndices
    language: CSharp
    name:
      CSharp: LinkedIndices
      VB: LinkedIndices
    nameWithType:
      CSharp: LinkedIndices
      VB: LinkedIndices
    qualifiedName:
      CSharp: IVLab.Plotting.LinkedIndices
      VB: IVLab.Plotting.LinkedIndices
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: LinkedIndices
      path: ''
      startLine: 67
    summary: "\nThis class provides an &quot;index space&quot; where each index has additional attributes/data attached to it.\n"
    example: []
    syntax:
      content:
        CSharp: public class LinkedIndices
        VB: Public Class LinkedIndices
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVLab.Plotting.LinkedIndices.#ctor(System.Int32)
      commentId: M:IVLab.Plotting.LinkedIndices.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: LinkedIndices(Int32)
        VB: LinkedIndices(Int32)
      nameWithType:
        CSharp: LinkedIndices.LinkedIndices(Int32)
        VB: LinkedIndices.LinkedIndices(Int32)
      qualifiedName:
        CSharp: IVLab.Plotting.LinkedIndices.LinkedIndices(System.Int32)
        VB: IVLab.Plotting.LinkedIndices.LinkedIndices(System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: .ctor
        path: ''
        startLine: 80
      summary: "\nConstructor to initialize linked attributes array.\n"
      example: []
      syntax:
        content:
          CSharp: public LinkedIndices(int size)
          VB: Public Sub New(size As Integer)
        parameters:
        - id: size
          type: System.Int32
          description: Number of indices.
      overload: IVLab.Plotting.LinkedIndices.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.LinkedIndices.Size
      commentId: P:IVLab.Plotting.LinkedIndices.Size
      language: CSharp
      name:
        CSharp: Size
        VB: Size
      nameWithType:
        CSharp: LinkedIndices.Size
        VB: LinkedIndices.Size
      qualifiedName:
        CSharp: IVLab.Plotting.LinkedIndices.Size
        VB: IVLab.Plotting.LinkedIndices.Size
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Size
        path: ''
        startLine: 92
      summary: 'Gets <xref href="IVLab.Plotting.LinkedIndices._size" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: public int Size { get; }
          VB: Public ReadOnly Property Size As Integer
        parameters: []
        return:
          type: System.Int32
      overload: IVLab.Plotting.LinkedIndices.Size*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        IVLab.Plotting.LinkedIndices._size: 
    - id: IVLab.Plotting.LinkedIndices.LinkedAttributesChanged
      commentId: P:IVLab.Plotting.LinkedIndices.LinkedAttributesChanged
      language: CSharp
      name:
        CSharp: LinkedAttributesChanged
        VB: LinkedAttributesChanged
      nameWithType:
        CSharp: LinkedIndices.LinkedAttributesChanged
        VB: LinkedIndices.LinkedAttributesChanged
      qualifiedName:
        CSharp: IVLab.Plotting.LinkedIndices.LinkedAttributesChanged
        VB: IVLab.Plotting.LinkedIndices.LinkedAttributesChanged
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: LinkedAttributesChanged
        path: ''
        startLine: 97
      summary: 'Gets and sets <xref href="IVLab.Plotting.LinkedIndices._linkedAttributesChanged" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: public bool LinkedAttributesChanged { get; set; }
          VB: Public Property LinkedAttributesChanged As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IVLab.Plotting.LinkedIndices.LinkedAttributesChanged*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
      references:
        IVLab.Plotting.LinkedIndices._linkedAttributesChanged: 
    - id: IVLab.Plotting.LinkedIndices.Item(System.Int32)
      commentId: P:IVLab.Plotting.LinkedIndices.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: LinkedIndices.Item[Int32]
        VB: LinkedIndices.Item(Int32)
      qualifiedName:
        CSharp: IVLab.Plotting.LinkedIndices.Item[System.Int32]
        VB: IVLab.Plotting.LinkedIndices.Item(System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: this[]
        path: ''
        startLine: 106
      summary: "\nAllows attributes to be accesed with classic array accesor, e.g. linkedIndices[i].\n"
      example: []
      syntax:
        content:
          CSharp: public LinkedIndices.LinkedAttributes this[int index] { get; }
          VB: Public ReadOnly Property Item(index As Integer) As LinkedIndices.LinkedAttributes
        parameters:
        - id: index
          type: System.Int32
        return:
          type: IVLab.Plotting.LinkedIndices.LinkedAttributes
      overload: IVLab.Plotting.LinkedIndices.Item*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: IVLab.Plotting.LinkedIndices.LinkedAttributes
    commentId: T:IVLab.Plotting.LinkedIndices.LinkedAttributes
    language: CSharp
    name:
      CSharp: LinkedIndices.LinkedAttributes
      VB: LinkedIndices.LinkedAttributes
    nameWithType:
      CSharp: LinkedIndices.LinkedAttributes
      VB: LinkedIndices.LinkedAttributes
    qualifiedName:
      CSharp: IVLab.Plotting.LinkedIndices.LinkedAttributes
      VB: IVLab.Plotting.LinkedIndices.LinkedAttributes
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: LinkedAttributes
      path: ''
      startLine: 114
    summary: "\nThis class acts as a container for attributes attached to an individual index.\n"
    example: []
    syntax:
      content:
        CSharp: public class LinkedAttributes
        VB: Public Class LinkedAttributes
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVLab.Plotting.LinkedIndices.LinkedAttributes.#ctor(IVLab.Plotting.LinkedIndices)
      commentId: M:IVLab.Plotting.LinkedIndices.LinkedAttributes.#ctor(IVLab.Plotting.LinkedIndices)
      language: CSharp
      name:
        CSharp: LinkedAttributes(LinkedIndices)
        VB: LinkedAttributes(LinkedIndices)
      nameWithType:
        CSharp: LinkedIndices.LinkedAttributes.LinkedAttributes(LinkedIndices)
        VB: LinkedIndices.LinkedAttributes.LinkedAttributes(LinkedIndices)
      qualifiedName:
        CSharp: IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributes(IVLab.Plotting.LinkedIndices)
        VB: IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributes(IVLab.Plotting.LinkedIndices)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: .ctor
        path: ''
        startLine: 129
      summary: "\nConstructor takes a reference to the LinkedIndices object that holds \nthe array of which this LinkedAtrribute is a part of.\n"
      example: []
      syntax:
        content:
          CSharp: public LinkedAttributes(LinkedIndices linkedIndices)
          VB: Public Sub New(linkedIndices As LinkedIndices)
        parameters:
        - id: linkedIndices
          type: IVLab.Plotting.LinkedIndices
      overload: IVLab.Plotting.LinkedIndices.LinkedAttributes.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.LinkedIndices.LinkedAttributes.Highlighted
      commentId: P:IVLab.Plotting.LinkedIndices.LinkedAttributes.Highlighted
      language: CSharp
      name:
        CSharp: Highlighted
        VB: Highlighted
      nameWithType:
        CSharp: LinkedIndices.LinkedAttributes.Highlighted
        VB: LinkedIndices.LinkedAttributes.Highlighted
      qualifiedName:
        CSharp: IVLab.Plotting.LinkedIndices.LinkedAttributes.Highlighted
        VB: IVLab.Plotting.LinkedIndices.LinkedAttributes.Highlighted
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Highlighted
        path: ''
        startLine: 141
      summary: "Gets and sets <xref href=\"IVLab.Plotting.LinkedIndices.LinkedAttributes._highlighted\" data-throw-if-not-resolved=\"false\"></xref>, \nautomatically toggling <xref href=\"IVLab.Plotting.LinkedIndices.LinkedAttributes._linkedAttributeChanged\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"IVLab.Plotting.LinkedIndices._linkedAttributesChanged\" data-throw-if-not-resolved=\"false\"></xref> to true if the value\nis changed. "
      example: []
      syntax:
        content:
          CSharp: public bool Highlighted { get; set; }
          VB: Public Property Highlighted As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IVLab.Plotting.LinkedIndices.LinkedAttributes.Highlighted*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
      references:
        IVLab.Plotting.LinkedIndices.LinkedAttributes._highlighted: 
        IVLab.Plotting.LinkedIndices.LinkedAttributes._linkedAttributeChanged: 
        IVLab.Plotting.LinkedIndices._linkedAttributesChanged: 
    - id: IVLab.Plotting.LinkedIndices.LinkedAttributes.Masked
      commentId: P:IVLab.Plotting.LinkedIndices.LinkedAttributes.Masked
      language: CSharp
      name:
        CSharp: Masked
        VB: Masked
      nameWithType:
        CSharp: LinkedIndices.LinkedAttributes.Masked
        VB: LinkedIndices.LinkedAttributes.Masked
      qualifiedName:
        CSharp: IVLab.Plotting.LinkedIndices.LinkedAttributes.Masked
        VB: IVLab.Plotting.LinkedIndices.LinkedAttributes.Masked
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Masked
        path: ''
        startLine: 160
      summary: "Gets and sets <xref href=\"IVLab.Plotting.LinkedIndices.LinkedAttributes._masked\" data-throw-if-not-resolved=\"false\"></xref>, \nautomatically toggling <xref href=\"IVLab.Plotting.LinkedIndices.LinkedAttributes._linkedAttributeChanged\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"IVLab.Plotting.LinkedIndices._linkedAttributesChanged\" data-throw-if-not-resolved=\"false\"></xref> to true if the value\nis changed. "
      example: []
      syntax:
        content:
          CSharp: public bool Masked { get; set; }
          VB: Public Property Masked As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IVLab.Plotting.LinkedIndices.LinkedAttributes.Masked*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
      references:
        IVLab.Plotting.LinkedIndices.LinkedAttributes._masked: 
        IVLab.Plotting.LinkedIndices.LinkedAttributes._linkedAttributeChanged: 
        IVLab.Plotting.LinkedIndices._linkedAttributesChanged: 
    - id: IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributeChanged
      commentId: P:IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributeChanged
      language: CSharp
      name:
        CSharp: LinkedAttributeChanged
        VB: LinkedAttributeChanged
      nameWithType:
        CSharp: LinkedIndices.LinkedAttributes.LinkedAttributeChanged
        VB: LinkedIndices.LinkedAttributes.LinkedAttributeChanged
      qualifiedName:
        CSharp: IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributeChanged
        VB: IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributeChanged
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: LinkedAttributeChanged
        path: ''
        startLine: 176
      summary: 'Gets and sets <xref href="IVLab.Plotting.LinkedIndices.LinkedAttributes._linkedAttributeChanged" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: public bool LinkedAttributeChanged { get; set; }
          VB: Public Property LinkedAttributeChanged As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributeChanged*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
      references:
        IVLab.Plotting.LinkedIndices.LinkedAttributes._linkedAttributeChanged: 
  - id: IVLab.Plotting.SplitViewController
    commentId: T:IVLab.Plotting.SplitViewController
    language: CSharp
    name:
      CSharp: SplitViewController
      VB: SplitViewController
    nameWithType:
      CSharp: SplitViewController
      VB: SplitViewController
    qualifiedName:
      CSharp: IVLab.Plotting.SplitViewController
      VB: IVLab.Plotting.SplitViewController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: SplitViewController
      path: ''
      startLine: 194
    summary: "\nBasic control over the 2D/3D split camera view.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SplitViewController : MonoBehaviour'
        VB: >-
          Public Class SplitViewController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: IVLab.Plotting.ClusterPlot
    commentId: T:IVLab.Plotting.ClusterPlot
    language: CSharp
    name:
      CSharp: ClusterPlot
      VB: ClusterPlot
    nameWithType:
      CSharp: ClusterPlot
      VB: ClusterPlot
    qualifiedName:
      CSharp: IVLab.Plotting.ClusterPlot
      VB: IVLab.Plotting.ClusterPlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: ClusterPlot
      path: ''
      startLine: 216
    syntax:
      content:
        CSharp: 'public class ClusterPlot : ScatterPlot'
        VB: >-
          Public Class ClusterPlot

              Inherits ScatterPlot
    inheritance:
    - System.Object
    - IVLab.Plotting.DataPlot
    - IVLab.Plotting.ScatterPlot
    inheritedMembers:
    - IVLab.Plotting.ScatterPlot.pointSize
    - IVLab.Plotting.ScatterPlot.scaleToOrigin
    - IVLab.Plotting.ScatterPlot.plotParticleSystemPrefab
    - IVLab.Plotting.ScatterPlot.axisLabelPrefab
    - IVLab.Plotting.ScatterPlot.xDropdown
    - IVLab.Plotting.ScatterPlot.yDropdown
    - IVLab.Plotting.ScatterPlot.dropdownCanvas
    - IVLab.Plotting.ScatterPlot.plotParticlesParent
    - IVLab.Plotting.ScatterPlot.axisLabelsParent
    - IVLab.Plotting.ScatterPlot.xAxisLabel
    - IVLab.Plotting.ScatterPlot.yAxisLabel
    - IVLab.Plotting.ScatterPlot.xColumnIdx
    - IVLab.Plotting.ScatterPlot.yColumnIdx
    - IVLab.Plotting.ScatterPlot.pointPositions
    - IVLab.Plotting.ScatterPlot.plotParticleSystem
    - IVLab.Plotting.ScatterPlot.pointParticles
    - IVLab.Plotting.ScatterPlot.clickedPointIdx
    - IVLab.Plotting.ScatterPlot.SetPlotSize
    - IVLab.Plotting.ScatterPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
    - IVLab.Plotting.ScatterPlot.RefreshPlotGraphics
    - IVLab.Plotting.ScatterPlot.Plot
    - IVLab.Plotting.ScatterPlot.RectSelection(RectTransform)
    - IVLab.Plotting.DataPlot.outerBounds
    - IVLab.Plotting.DataPlot.innerBounds
    - IVLab.Plotting.DataPlot.padding
    - IVLab.Plotting.DataPlot.defaultColor
    - IVLab.Plotting.DataPlot.highlightedColor
    - IVLab.Plotting.DataPlot.maskedColor
    - IVLab.Plotting.DataPlot.selectionPadding
    - IVLab.Plotting.DataPlot.clickSelectionRadius
    - IVLab.Plotting.DataPlot.brushSelectionRadius
    - IVLab.Plotting.DataPlot.plotMask
    - IVLab.Plotting.DataPlot.plotOuterRect
    - IVLab.Plotting.DataPlot.plotInnerRect
    - IVLab.Plotting.DataPlot.plotSelectionRect
    - IVLab.Plotting.DataPlot.deleteButton
    - IVLab.Plotting.DataPlot.dataTable
    - IVLab.Plotting.DataPlot.linkedIndices
    - IVLab.Plotting.DataPlot.plotsCanvas
    - IVLab.Plotting.DataPlot.selectedIndexDictionary
    - IVLab.Plotting.DataPlot.selectedDataPointIndices
    - IVLab.Plotting.DataPlot.selectedDataPointMins
    - IVLab.Plotting.DataPlot.selectedDataPointMaxes
    - IVLab.Plotting.DataPlot.PlotMask
    - IVLab.Plotting.DataPlot.PlotOuterRect
    - IVLab.Plotting.DataPlot.PlotSelectionRect
    - IVLab.Plotting.DataPlot.BrushRadius
    - IVLab.Plotting.DataPlot.ResizePlot(Vector2)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVLab.Plotting.ClusterPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
      commentId: M:IVLab.Plotting.ClusterPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
      language: CSharp
      name:
        CSharp: Init(DataPlotManager, Vector2, Int32[])
        VB: Init(DataPlotManager, Vector2, Int32())
      nameWithType:
        CSharp: ClusterPlot.Init(DataPlotManager, Vector2, Int32[])
        VB: ClusterPlot.Init(DataPlotManager, Vector2, Int32())
      qualifiedName:
        CSharp: IVLab.Plotting.ClusterPlot.Init(IVLab.Plotting.DataPlotManager, Vector2, System.Int32[])
        VB: IVLab.Plotting.ClusterPlot.Init(IVLab.Plotting.DataPlotManager, Vector2, System.Int32())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Init
        path: ''
        startLine: 223
      syntax:
        content:
          CSharp: public override void Init(DataPlotManager dataPlotManager, Vector2 outerBounds, int[] selectedDataPointIndices = null)
          VB: Public Overrides Sub Init(dataPlotManager As DataPlotManager, outerBounds As Vector2, selectedDataPointIndices As Integer() = Nothing)
        parameters:
        - id: dataPlotManager
          type: IVLab.Plotting.DataPlotManager
        - id: outerBounds
          type: Global.Vector2
        - id: selectedDataPointIndices
          type: System.Int32[]
      overload: IVLab.Plotting.ClusterPlot.Init*
      overridden: IVLab.Plotting.ScatterPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ClusterPlot.xDropdownUpdated
      commentId: M:IVLab.Plotting.ClusterPlot.xDropdownUpdated
      language: CSharp
      name:
        CSharp: xDropdownUpdated()
        VB: xDropdownUpdated()
      nameWithType:
        CSharp: ClusterPlot.xDropdownUpdated()
        VB: ClusterPlot.xDropdownUpdated()
      qualifiedName:
        CSharp: IVLab.Plotting.ClusterPlot.xDropdownUpdated()
        VB: IVLab.Plotting.ClusterPlot.xDropdownUpdated()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: xDropdownUpdated
        path: ''
        startLine: 246
      syntax:
        content:
          CSharp: protected override void xDropdownUpdated()
          VB: Protected Overrides Sub xDropdownUpdated
      overload: IVLab.Plotting.ClusterPlot.xDropdownUpdated*
      overridden: IVLab.Plotting.ScatterPlot.xDropdownUpdated
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: IVLab.Plotting.ClusterPlot.yDropdownUpdated
      commentId: M:IVLab.Plotting.ClusterPlot.yDropdownUpdated
      language: CSharp
      name:
        CSharp: yDropdownUpdated()
        VB: yDropdownUpdated()
      nameWithType:
        CSharp: ClusterPlot.yDropdownUpdated()
        VB: ClusterPlot.yDropdownUpdated()
      qualifiedName:
        CSharp: IVLab.Plotting.ClusterPlot.yDropdownUpdated()
        VB: IVLab.Plotting.ClusterPlot.yDropdownUpdated()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: yDropdownUpdated
        path: ''
        startLine: 247
      syntax:
        content:
          CSharp: protected override void yDropdownUpdated()
          VB: Protected Overrides Sub yDropdownUpdated
      overload: IVLab.Plotting.ClusterPlot.yDropdownUpdated*
      overridden: IVLab.Plotting.ScatterPlot.yDropdownUpdated
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: IVLab.Plotting.ClusterPlot.DropdownSetColumnNames(System.String[])
      commentId: M:IVLab.Plotting.ClusterPlot.DropdownSetColumnNames(System.String[])
      language: CSharp
      name:
        CSharp: DropdownSetColumnNames(String[])
        VB: DropdownSetColumnNames(String())
      nameWithType:
        CSharp: ClusterPlot.DropdownSetColumnNames(String[])
        VB: ClusterPlot.DropdownSetColumnNames(String())
      qualifiedName:
        CSharp: IVLab.Plotting.ClusterPlot.DropdownSetColumnNames(System.String[])
        VB: IVLab.Plotting.ClusterPlot.DropdownSetColumnNames(System.String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: DropdownSetColumnNames
        path: ''
        startLine: 250
      syntax:
        content:
          CSharp: protected override void DropdownSetColumnNames(string[] columnNames)
          VB: Protected Overrides Sub DropdownSetColumnNames(columnNames As String())
        parameters:
        - id: columnNames
          type: System.String[]
      overload: IVLab.Plotting.ClusterPlot.DropdownSetColumnNames*
      overridden: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames(System.String[])
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: IVLab.Plotting.ClusterPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
      commentId: M:IVLab.Plotting.ClusterPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
      language: CSharp
      name:
        CSharp: ClickSelection(Vector2, SelectionMode.State)
        VB: ClickSelection(Vector2, SelectionMode.State)
      nameWithType:
        CSharp: ClusterPlot.ClickSelection(Vector2, SelectionMode.State)
        VB: ClusterPlot.ClickSelection(Vector2, SelectionMode.State)
      qualifiedName:
        CSharp: IVLab.Plotting.ClusterPlot.ClickSelection(Vector2, IVLab.Plotting.SelectionMode.State)
        VB: IVLab.Plotting.ClusterPlot.ClickSelection(Vector2, IVLab.Plotting.SelectionMode.State)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: ClickSelection
        path: ''
        startLine: 272
      syntax:
        content:
          CSharp: public override void ClickSelection(Vector2 selectionPosition, SelectionMode.State selectionState)
          VB: Public Overrides Sub ClickSelection(selectionPosition As Vector2, selectionState As SelectionMode.State)
        parameters:
        - id: selectionPosition
          type: Global.Vector2
        - id: selectionState
          type: IVLab.Plotting.SelectionMode.State
      overload: IVLab.Plotting.ClusterPlot.ClickSelection*
      overridden: IVLab.Plotting.ScatterPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ClusterPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
      commentId: M:IVLab.Plotting.ClusterPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
      language: CSharp
      name:
        CSharp: BrushSelection(Vector2, Vector2, SelectionMode.State)
        VB: BrushSelection(Vector2, Vector2, SelectionMode.State)
      nameWithType:
        CSharp: ClusterPlot.BrushSelection(Vector2, Vector2, SelectionMode.State)
        VB: ClusterPlot.BrushSelection(Vector2, Vector2, SelectionMode.State)
      qualifiedName:
        CSharp: IVLab.Plotting.ClusterPlot.BrushSelection(Vector2, Vector2, IVLab.Plotting.SelectionMode.State)
        VB: IVLab.Plotting.ClusterPlot.BrushSelection(Vector2, Vector2, IVLab.Plotting.SelectionMode.State)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: BrushSelection
        path: ''
        startLine: 452
      syntax:
        content:
          CSharp: public override void BrushSelection(Vector2 prevBrushPosition, Vector2 brushDelta, SelectionMode.State selectionState)
          VB: Public Overrides Sub BrushSelection(prevBrushPosition As Vector2, brushDelta As Vector2, selectionState As SelectionMode.State)
        parameters:
        - id: prevBrushPosition
          type: Global.Vector2
        - id: brushDelta
          type: Global.Vector2
        - id: selectionState
          type: IVLab.Plotting.SelectionMode.State
      overload: IVLab.Plotting.ClusterPlot.BrushSelection*
      overridden: IVLab.Plotting.ScatterPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: IVLab.Plotting.DataPlot
    commentId: T:IVLab.Plotting.DataPlot
    language: CSharp
    name:
      CSharp: DataPlot
      VB: DataPlot
    nameWithType:
      CSharp: DataPlot
      VB: DataPlot
    qualifiedName:
      CSharp: IVLab.Plotting.DataPlot
      VB: IVLab.Plotting.DataPlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: DataPlot
      path: ''
      startLine: 587
    summary: "\nAn abstract class that declares (and defines) variables and methods that are ubiquitous to all \ndata plot implementations, such as plotting, updating, resizing and selection functionalities.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class DataPlot : MonoBehaviour'
        VB: >-
          Public MustInherit Class DataPlot

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: IVLab.Plotting.DataPlot.outerBounds
      commentId: F:IVLab.Plotting.DataPlot.outerBounds
      language: CSharp
      name:
        CSharp: outerBounds
        VB: outerBounds
      nameWithType:
        CSharp: DataPlot.outerBounds
        VB: DataPlot.outerBounds
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.outerBounds
        VB: IVLab.Plotting.DataPlot.outerBounds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: outerBounds
        path: ''
        startLine: 605
      syntax:
        content:
          CSharp: protected Vector2 outerBounds
          VB: Protected outerBounds As Vector2
        return:
          type: Global.Vector2
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.innerBounds
      commentId: F:IVLab.Plotting.DataPlot.innerBounds
      language: CSharp
      name:
        CSharp: innerBounds
        VB: innerBounds
      nameWithType:
        CSharp: DataPlot.innerBounds
        VB: DataPlot.innerBounds
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.innerBounds
        VB: IVLab.Plotting.DataPlot.innerBounds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: innerBounds
        path: ''
        startLine: 607
      summary: 'Dimensions of the plot&apos;s inner bounding rect (i.e. the dimensions of the plot itself). '
      example: []
      syntax:
        content:
          CSharp: protected Vector2 innerBounds
          VB: Protected innerBounds As Vector2
        return:
          type: Global.Vector2
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.padding
      commentId: F:IVLab.Plotting.DataPlot.padding
      language: CSharp
      name:
        CSharp: padding
        VB: padding
      nameWithType:
        CSharp: DataPlot.padding
        VB: DataPlot.padding
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.padding
        VB: IVLab.Plotting.DataPlot.padding
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: padding
        path: ''
        startLine: 609
      summary: 'Padding between the outer bounding rect and the inner bounding rect. '
      example: []
      syntax:
        content:
          CSharp: protected Vector2 padding
          VB: Protected padding As Vector2
        return:
          type: Global.Vector2
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.defaultColor
      commentId: F:IVLab.Plotting.DataPlot.defaultColor
      language: CSharp
      name:
        CSharp: defaultColor
        VB: defaultColor
      nameWithType:
        CSharp: DataPlot.defaultColor
        VB: DataPlot.defaultColor
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.defaultColor
        VB: IVLab.Plotting.DataPlot.defaultColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: defaultColor
        path: ''
        startLine: 611
      summary: 'The default color of data points in the plot. '
      example: []
      syntax:
        content:
          CSharp: protected Color32 defaultColor
          VB: Protected defaultColor As Color32
        return:
          type: Global.Color32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.highlightedColor
      commentId: F:IVLab.Plotting.DataPlot.highlightedColor
      language: CSharp
      name:
        CSharp: highlightedColor
        VB: highlightedColor
      nameWithType:
        CSharp: DataPlot.highlightedColor
        VB: DataPlot.highlightedColor
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.highlightedColor
        VB: IVLab.Plotting.DataPlot.highlightedColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: highlightedColor
        path: ''
        startLine: 613
      summary: 'The color of highlighted data points in the plot. '
      example: []
      syntax:
        content:
          CSharp: protected Color32 highlightedColor
          VB: Protected highlightedColor As Color32
        return:
          type: Global.Color32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.maskedColor
      commentId: F:IVLab.Plotting.DataPlot.maskedColor
      language: CSharp
      name:
        CSharp: maskedColor
        VB: maskedColor
      nameWithType:
        CSharp: DataPlot.maskedColor
        VB: DataPlot.maskedColor
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.maskedColor
        VB: IVLab.Plotting.DataPlot.maskedColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: maskedColor
        path: ''
        startLine: 615
      summary: 'The color of maksed data points in the plot. '
      example: []
      syntax:
        content:
          CSharp: protected Color32 maskedColor
          VB: Protected maskedColor As Color32
        return:
          type: Global.Color32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.selectionPadding
      commentId: F:IVLab.Plotting.DataPlot.selectionPadding
      language: CSharp
      name:
        CSharp: selectionPadding
        VB: selectionPadding
      nameWithType:
        CSharp: DataPlot.selectionPadding
        VB: DataPlot.selectionPadding
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.selectionPadding
        VB: IVLab.Plotting.DataPlot.selectionPadding
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: selectionPadding
        path: ''
        startLine: 619
      summary: "Padding between the inner bounding rect and the selection rect. Allows\nthe selection rect to be slightly larger than the plot itself, allowing for more forgiving\nselection interactions. "
      example: []
      syntax:
        content:
          CSharp: protected float selectionPadding
          VB: Protected selectionPadding As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.clickSelectionRadius
      commentId: F:IVLab.Plotting.DataPlot.clickSelectionRadius
      language: CSharp
      name:
        CSharp: clickSelectionRadius
        VB: clickSelectionRadius
      nameWithType:
        CSharp: DataPlot.clickSelectionRadius
        VB: DataPlot.clickSelectionRadius
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.clickSelectionRadius
        VB: IVLab.Plotting.DataPlot.clickSelectionRadius
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: clickSelectionRadius
        path: ''
        startLine: 621
      summary: 'Radius at which the plot&apos;s data points can be selected when in <xref href="IVLab.Plotting.ClickSelectionMode" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: protected float clickSelectionRadius
          VB: Protected clickSelectionRadius As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
      references:
        IVLab.Plotting.ClickSelectionMode: 
    - id: IVLab.Plotting.DataPlot.brushSelectionRadius
      commentId: F:IVLab.Plotting.DataPlot.brushSelectionRadius
      language: CSharp
      name:
        CSharp: brushSelectionRadius
        VB: brushSelectionRadius
      nameWithType:
        CSharp: DataPlot.brushSelectionRadius
        VB: DataPlot.brushSelectionRadius
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.brushSelectionRadius
        VB: IVLab.Plotting.DataPlot.brushSelectionRadius
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: brushSelectionRadius
        path: ''
        startLine: 623
      summary: 'Radius of the <xref href="IVLab.Plotting.BrushSelectionMode" data-throw-if-not-resolved="false"></xref> brush for the plot. '
      example: []
      syntax:
        content:
          CSharp: protected float brushSelectionRadius
          VB: Protected brushSelectionRadius As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
      references:
        IVLab.Plotting.BrushSelectionMode: 
    - id: IVLab.Plotting.DataPlot.plotMask
      commentId: F:IVLab.Plotting.DataPlot.plotMask
      language: CSharp
      name:
        CSharp: plotMask
        VB: plotMask
      nameWithType:
        CSharp: DataPlot.plotMask
        VB: DataPlot.plotMask
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.plotMask
        VB: IVLab.Plotting.DataPlot.plotMask
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: plotMask
        path: ''
        startLine: 627
      syntax:
        content:
          CSharp: protected RectTransform plotMask
          VB: Protected plotMask As RectTransform
        return:
          type: Global.RectTransform
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.plotOuterRect
      commentId: F:IVLab.Plotting.DataPlot.plotOuterRect
      language: CSharp
      name:
        CSharp: plotOuterRect
        VB: plotOuterRect
      nameWithType:
        CSharp: DataPlot.plotOuterRect
        VB: DataPlot.plotOuterRect
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.plotOuterRect
        VB: IVLab.Plotting.DataPlot.plotOuterRect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: plotOuterRect
        path: ''
        startLine: 629
      summary: 'Rect transform that visually makes up the plot&apos;s outer bounds. '
      example: []
      syntax:
        content:
          CSharp: protected RectTransform plotOuterRect
          VB: Protected plotOuterRect As RectTransform
        return:
          type: Global.RectTransform
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.plotInnerRect
      commentId: F:IVLab.Plotting.DataPlot.plotInnerRect
      language: CSharp
      name:
        CSharp: plotInnerRect
        VB: plotInnerRect
      nameWithType:
        CSharp: DataPlot.plotInnerRect
        VB: DataPlot.plotInnerRect
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.plotInnerRect
        VB: IVLab.Plotting.DataPlot.plotInnerRect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: plotInnerRect
        path: ''
        startLine: 631
      summary: 'Rect transform that visually makes up the plot&apos;s inner bounds. '
      example: []
      syntax:
        content:
          CSharp: protected RectTransform plotInnerRect
          VB: Protected plotInnerRect As RectTransform
        return:
          type: Global.RectTransform
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.plotSelectionRect
      commentId: F:IVLab.Plotting.DataPlot.plotSelectionRect
      language: CSharp
      name:
        CSharp: plotSelectionRect
        VB: plotSelectionRect
      nameWithType:
        CSharp: DataPlot.plotSelectionRect
        VB: DataPlot.plotSelectionRect
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.plotSelectionRect
        VB: IVLab.Plotting.DataPlot.plotSelectionRect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: plotSelectionRect
        path: ''
        startLine: 634
      summary: "Slightly enlarged version of the inner bounding rect that makes up the valid selection area of the plot. \nGenerated by taking <code>innerBounds + Vector2.One * selectionPadding</code>."
      example: []
      syntax:
        content:
          CSharp: protected RectTransform plotSelectionRect
          VB: Protected plotSelectionRect As RectTransform
        return:
          type: Global.RectTransform
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.deleteButton
      commentId: F:IVLab.Plotting.DataPlot.deleteButton
      language: CSharp
      name:
        CSharp: deleteButton
        VB: deleteButton
      nameWithType:
        CSharp: DataPlot.deleteButton
        VB: DataPlot.deleteButton
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.deleteButton
        VB: IVLab.Plotting.DataPlot.deleteButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: deleteButton
        path: ''
        startLine: 636
      summary: 'Button used to delete the plot. '
      example: []
      syntax:
        content:
          CSharp: protected GameObject deleteButton
          VB: Protected deleteButton As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.dataTable
      commentId: F:IVLab.Plotting.DataPlot.dataTable
      language: CSharp
      name:
        CSharp: dataTable
        VB: dataTable
      nameWithType:
        CSharp: DataPlot.dataTable
        VB: DataPlot.dataTable
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.dataTable
        VB: IVLab.Plotting.DataPlot.dataTable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: dataTable
        path: ''
        startLine: 638
      summary: 'Reference to the data table that the plot plots data from. '
      example: []
      syntax:
        content:
          CSharp: protected DataTable dataTable
          VB: Protected dataTable As DataTable
        return:
          type: IVLab.Plotting.DataTable
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.linkedIndices
      commentId: F:IVLab.Plotting.DataPlot.linkedIndices
      language: CSharp
      name:
        CSharp: linkedIndices
        VB: linkedIndices
      nameWithType:
        CSharp: DataPlot.linkedIndices
        VB: DataPlot.linkedIndices
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.linkedIndices
        VB: IVLab.Plotting.DataPlot.linkedIndices
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: linkedIndices
        path: ''
        startLine: 640
      summary: 'Reference to the linked indices data structure that contains the current state of all of the data points. '
      example: []
      syntax:
        content:
          CSharp: protected LinkedIndices linkedIndices
          VB: Protected linkedIndices As LinkedIndices
        return:
          type: IVLab.Plotting.LinkedIndices
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.plotsCanvas
      commentId: F:IVLab.Plotting.DataPlot.plotsCanvas
      language: CSharp
      name:
        CSharp: plotsCanvas
        VB: plotsCanvas
      nameWithType:
        CSharp: DataPlot.plotsCanvas
        VB: DataPlot.plotsCanvas
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.plotsCanvas
        VB: IVLab.Plotting.DataPlot.plotsCanvas
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: plotsCanvas
        path: ''
        startLine: 642
      summary: 'The canvas that all plots are children of. '
      example: []
      syntax:
        content:
          CSharp: protected Canvas plotsCanvas
          VB: Protected plotsCanvas As Canvas
        return:
          type: Global.Canvas
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.selectedIndexDictionary
      commentId: F:IVLab.Plotting.DataPlot.selectedIndexDictionary
      language: CSharp
      name:
        CSharp: selectedIndexDictionary
        VB: selectedIndexDictionary
      nameWithType:
        CSharp: DataPlot.selectedIndexDictionary
        VB: DataPlot.selectedIndexDictionary
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.selectedIndexDictionary
        VB: IVLab.Plotting.DataPlot.selectedIndexDictionary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: selectedIndexDictionary
        path: ''
        startLine: 655
      summary: "Maps indices from the complete data point index space (i.e. linked index space) into \nthe local &quot;selected&quot; index space of the plot (i.e. the subset of the linked indices that the plot plots). "
      remarks: 'For inverse see <xref href="IVLab.Plotting.DataPlot.selectedDataPointIndices" data-throw-if-not-resolved="false"></xref>. '
      example:
      - "\nFor example, if <code>index</code> was an index from data point space, we could convert it to local space as follows:\n<pre><code>if (selectedIndexDictionary.ContainsKey(index))\n{\n    int localIndex = selectedIndexDictionary[index];\n}</code></pre>\n"
      syntax:
        content:
          CSharp: protected Dictionary<int, int> selectedIndexDictionary
          VB: Protected selectedIndexDictionary As Dictionary(Of Integer, Integer)
        return:
          type: System.Collections.Generic.Dictionary{System.Int32,System.Int32}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
      references:
        IVLab.Plotting.DataPlot.selectedDataPointIndices: 
    - id: IVLab.Plotting.DataPlot.selectedDataPointIndices
      commentId: F:IVLab.Plotting.DataPlot.selectedDataPointIndices
      language: CSharp
      name:
        CSharp: selectedDataPointIndices
        VB: selectedDataPointIndices
      nameWithType:
        CSharp: DataPlot.selectedDataPointIndices
        VB: DataPlot.selectedDataPointIndices
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.selectedDataPointIndices
        VB: IVLab.Plotting.DataPlot.selectedDataPointIndices
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: selectedDataPointIndices
        path: ''
        startLine: 664
      syntax:
        content:
          CSharp: protected int[] selectedDataPointIndices
          VB: Protected selectedDataPointIndices As Integer()
        return:
          type: System.Int32[]
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.selectedDataPointMins
      commentId: F:IVLab.Plotting.DataPlot.selectedDataPointMins
      language: CSharp
      name:
        CSharp: selectedDataPointMins
        VB: selectedDataPointMins
      nameWithType:
        CSharp: DataPlot.selectedDataPointMins
        VB: DataPlot.selectedDataPointMins
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.selectedDataPointMins
        VB: IVLab.Plotting.DataPlot.selectedDataPointMins
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: selectedDataPointMins
        path: ''
        startLine: 666
      summary: 'Minimum value in each column of the data table for only the selected data points the plot plots. '
      example: []
      syntax:
        content:
          CSharp: protected float[] selectedDataPointMins
          VB: Protected selectedDataPointMins As Single()
        return:
          type: System.Single[]
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.selectedDataPointMaxes
      commentId: F:IVLab.Plotting.DataPlot.selectedDataPointMaxes
      language: CSharp
      name:
        CSharp: selectedDataPointMaxes
        VB: selectedDataPointMaxes
      nameWithType:
        CSharp: DataPlot.selectedDataPointMaxes
        VB: DataPlot.selectedDataPointMaxes
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.selectedDataPointMaxes
        VB: IVLab.Plotting.DataPlot.selectedDataPointMaxes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: selectedDataPointMaxes
        path: ''
        startLine: 668
      summary: 'Maximum value in each column of the data table for only the selected data points the plot plots. '
      example: []
      syntax:
        content:
          CSharp: protected float[] selectedDataPointMaxes
          VB: Protected selectedDataPointMaxes As Single()
        return:
          type: System.Single[]
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.DataPlot.PlotMask
      commentId: P:IVLab.Plotting.DataPlot.PlotMask
      language: CSharp
      name:
        CSharp: PlotMask
        VB: PlotMask
      nameWithType:
        CSharp: DataPlot.PlotMask
        VB: DataPlot.PlotMask
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.PlotMask
        VB: IVLab.Plotting.DataPlot.PlotMask
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: PlotMask
        path: ''
        startLine: 672
      summary: 'Gets <xref href="IVLab.Plotting.DataPlot.plotMask" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: public RectTransform PlotMask { get; }
          VB: Public ReadOnly Property PlotMask As RectTransform
        parameters: []
        return:
          type: Global.RectTransform
      overload: IVLab.Plotting.DataPlot.PlotMask*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        IVLab.Plotting.DataPlot.plotMask: 
    - id: IVLab.Plotting.DataPlot.PlotOuterRect
      commentId: P:IVLab.Plotting.DataPlot.PlotOuterRect
      language: CSharp
      name:
        CSharp: PlotOuterRect
        VB: PlotOuterRect
      nameWithType:
        CSharp: DataPlot.PlotOuterRect
        VB: DataPlot.PlotOuterRect
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.PlotOuterRect
        VB: IVLab.Plotting.DataPlot.PlotOuterRect
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: PlotOuterRect
        path: ''
        startLine: 674
      summary: 'Gets <xref href="IVLab.Plotting.DataPlot.plotOuterRect" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: public RectTransform PlotOuterRect { get; }
          VB: Public ReadOnly Property PlotOuterRect As RectTransform
        parameters: []
        return:
          type: Global.RectTransform
      overload: IVLab.Plotting.DataPlot.PlotOuterRect*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        IVLab.Plotting.DataPlot.plotOuterRect: 
    - id: IVLab.Plotting.DataPlot.PlotSelectionRect
      commentId: P:IVLab.Plotting.DataPlot.PlotSelectionRect
      language: CSharp
      name:
        CSharp: PlotSelectionRect
        VB: PlotSelectionRect
      nameWithType:
        CSharp: DataPlot.PlotSelectionRect
        VB: DataPlot.PlotSelectionRect
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.PlotSelectionRect
        VB: IVLab.Plotting.DataPlot.PlotSelectionRect
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: PlotSelectionRect
        path: ''
        startLine: 676
      summary: 'Gets <xref href="IVLab.Plotting.DataPlot.plotSelectionRect" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: public RectTransform PlotSelectionRect { get; }
          VB: Public ReadOnly Property PlotSelectionRect As RectTransform
        parameters: []
        return:
          type: Global.RectTransform
      overload: IVLab.Plotting.DataPlot.PlotSelectionRect*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        IVLab.Plotting.DataPlot.plotSelectionRect: 
    - id: IVLab.Plotting.DataPlot.BrushRadius
      commentId: P:IVLab.Plotting.DataPlot.BrushRadius
      language: CSharp
      name:
        CSharp: BrushRadius
        VB: BrushRadius
      nameWithType:
        CSharp: DataPlot.BrushRadius
        VB: DataPlot.BrushRadius
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.BrushRadius
        VB: IVLab.Plotting.DataPlot.BrushRadius
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: BrushRadius
        path: ''
        startLine: 678
      summary: 'Gets <xref href="IVLab.Plotting.DataPlot.brushSelectionRadius" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: public float BrushRadius { get; }
          VB: Public ReadOnly Property BrushRadius As Single
        parameters: []
        return:
          type: System.Single
      overload: IVLab.Plotting.DataPlot.BrushRadius*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        IVLab.Plotting.DataPlot.brushSelectionRadius: 
    - id: IVLab.Plotting.DataPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
      commentId: M:IVLab.Plotting.DataPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
      language: CSharp
      name:
        CSharp: Init(DataPlotManager, Vector2, Int32[])
        VB: Init(DataPlotManager, Vector2, Int32())
      nameWithType:
        CSharp: DataPlot.Init(DataPlotManager, Vector2, Int32[])
        VB: DataPlot.Init(DataPlotManager, Vector2, Int32())
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.Init(IVLab.Plotting.DataPlotManager, Vector2, System.Int32[])
        VB: IVLab.Plotting.DataPlot.Init(IVLab.Plotting.DataPlotManager, Vector2, System.Int32())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Init
        path: ''
        startLine: 689
      summary: "\nInitializes the plot. Ideally called immediately after the plot has been instantiated and before\nanything else.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Init(DataPlotManager dataPlotManager, Vector2 outerBounds, int[] selectedDataPointIndices = null)
          VB: Public Overridable Sub Init(dataPlotManager As DataPlotManager, outerBounds As Vector2, selectedDataPointIndices As Integer() = Nothing)
        parameters:
        - id: dataPlotManager
          type: IVLab.Plotting.DataPlotManager
          description: "Manager of the plot: contains references to the <xref href=\"IVLab.Plotting.DataTable\" data-throw-if-not-resolved=\"false\"></xref> and \n<xref href=\"IVLab.Plotting.LinkedIndices\" data-throw-if-not-resolved=\"false\"></xref> that the plot works from. "
        - id: outerBounds
          type: Global.Vector2
          description: 'Size to set the outer bounds of the plot. '
        - id: selectedDataPointIndices
          type: System.Int32[]
          description: "Array of data point indices the plot should display.\nIf <code>null</code>, all data points will be displayed by default. "
      overload: IVLab.Plotting.DataPlot.Init*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
      references:
        IVLab.Plotting.DataTable: 
        IVLab.Plotting.LinkedIndices: 
    - id: IVLab.Plotting.DataPlot.ResizePlot(Vector2)
      commentId: M:IVLab.Plotting.DataPlot.ResizePlot(Vector2)
      language: CSharp
      name:
        CSharp: ResizePlot(Vector2)
        VB: ResizePlot(Vector2)
      nameWithType:
        CSharp: DataPlot.ResizePlot(Vector2)
        VB: DataPlot.ResizePlot(Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.ResizePlot(Vector2)
        VB: IVLab.Plotting.DataPlot.ResizePlot(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: ResizePlot
        path: ''
        startLine: 741
      summary: 'Resizes the plot and sets its new size. '
      example: []
      syntax:
        content:
          CSharp: public void ResizePlot(Vector2 outerBounds)
          VB: Public Sub ResizePlot(outerBounds As Vector2)
        parameters:
        - id: outerBounds
          type: Global.Vector2
      overload: IVLab.Plotting.DataPlot.ResizePlot*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataPlot.SetPlotSize
      commentId: M:IVLab.Plotting.DataPlot.SetPlotSize
      language: CSharp
      name:
        CSharp: SetPlotSize()
        VB: SetPlotSize()
      nameWithType:
        CSharp: DataPlot.SetPlotSize()
        VB: DataPlot.SetPlotSize()
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.SetPlotSize()
        VB: IVLab.Plotting.DataPlot.SetPlotSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: SetPlotSize
        path: ''
        startLine: 749
      summary: "Sets the size of the inner, outer, and selection bounds of the plot, \nalong with the plot mask. "
      example: []
      syntax:
        content:
          CSharp: protected virtual void SetPlotSize()
          VB: Protected Overridable Sub SetPlotSize
      overload: IVLab.Plotting.DataPlot.SetPlotSize*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: IVLab.Plotting.DataPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      commentId: M:IVLab.Plotting.DataPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      language: CSharp
      name:
        CSharp: UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
        VB: UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
      nameWithType:
        CSharp: DataPlot.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
        VB: DataPlot.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.UpdateDataPoint(System.Int32, IVLab.Plotting.LinkedIndices.LinkedAttributes)
        VB: IVLab.Plotting.DataPlot.UpdateDataPoint(System.Int32, IVLab.Plotting.LinkedIndices.LinkedAttributes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: UpdateDataPoint
        path: ''
        startLine: 762
      summary: 'Updates a specific data point according to that data point&apos;s current linked index attributes. '
      example: []
      syntax:
        content:
          CSharp: public abstract void UpdateDataPoint(int index, LinkedIndices.LinkedAttributes indexAttributes)
          VB: Public MustOverride Sub UpdateDataPoint(index As Integer, indexAttributes As LinkedIndices.LinkedAttributes)
        parameters:
        - id: index
          type: System.Int32
          description: Index of data point that needs to be updated.
        - id: indexAttributes
          type: IVLab.Plotting.LinkedIndices.LinkedAttributes
          description: Current attributes of the data point.
      overload: IVLab.Plotting.DataPlot.UpdateDataPoint*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IVLab.Plotting.DataPlot.RefreshPlotGraphics
      commentId: M:IVLab.Plotting.DataPlot.RefreshPlotGraphics
      language: CSharp
      name:
        CSharp: RefreshPlotGraphics()
        VB: RefreshPlotGraphics()
      nameWithType:
        CSharp: DataPlot.RefreshPlotGraphics()
        VB: DataPlot.RefreshPlotGraphics()
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.RefreshPlotGraphics()
        VB: IVLab.Plotting.DataPlot.RefreshPlotGraphics()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: RefreshPlotGraphics
        path: ''
        startLine: 766
      summary: 'Refreshes the plot graphics to reflect most recent changes to plot data points. '
      remarks: 'Often called after a series of UpdateDataPoint() calls. '
      example: []
      syntax:
        content:
          CSharp: public abstract void RefreshPlotGraphics()
          VB: Public MustOverride Sub RefreshPlotGraphics
      overload: IVLab.Plotting.DataPlot.RefreshPlotGraphics*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IVLab.Plotting.DataPlot.Plot
      commentId: M:IVLab.Plotting.DataPlot.Plot
      language: CSharp
      name:
        CSharp: Plot()
        VB: Plot()
      nameWithType:
        CSharp: DataPlot.Plot()
        VB: DataPlot.Plot()
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.Plot()
        VB: IVLab.Plotting.DataPlot.Plot()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Plot
        path: ''
        startLine: 769
      summary: 'Plots the selected data points and refreshes the plot graphics to match. '
      example: []
      syntax:
        content:
          CSharp: public abstract void Plot()
          VB: Public MustOverride Sub Plot
      overload: IVLab.Plotting.DataPlot.Plot*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IVLab.Plotting.DataPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
      commentId: M:IVLab.Plotting.DataPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
      language: CSharp
      name:
        CSharp: ClickSelection(Vector2, SelectionMode.State)
        VB: ClickSelection(Vector2, SelectionMode.State)
      nameWithType:
        CSharp: DataPlot.ClickSelection(Vector2, SelectionMode.State)
        VB: DataPlot.ClickSelection(Vector2, SelectionMode.State)
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.ClickSelection(Vector2, IVLab.Plotting.SelectionMode.State)
        VB: IVLab.Plotting.DataPlot.ClickSelection(Vector2, IVLab.Plotting.SelectionMode.State)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: ClickSelection
        path: ''
        startLine: 774
      summary: 'Controls the plot&apos;s reaction to the <xref href="IVLab.Plotting.ClickSelectionMode" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: public abstract void ClickSelection(Vector2 selectionPosition, SelectionMode.State selectionState)
          VB: Public MustOverride Sub ClickSelection(selectionPosition As Vector2, selectionState As SelectionMode.State)
        parameters:
        - id: selectionPosition
          type: Global.Vector2
          description: 'Current mouse/selector position in Canvas space. '
        - id: selectionState
          type: IVLab.Plotting.SelectionMode.State
          description: 'Current <xref href="IVLab.Plotting.SelectionMode.State" data-throw-if-not-resolved="false"></xref> of the selection. '
      overload: IVLab.Plotting.DataPlot.ClickSelection*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
      references:
        IVLab.Plotting.ClickSelectionMode: 
        IVLab.Plotting.SelectionMode.State: 
    - id: IVLab.Plotting.DataPlot.RectSelection(RectTransform)
      commentId: M:IVLab.Plotting.DataPlot.RectSelection(RectTransform)
      language: CSharp
      name:
        CSharp: RectSelection(RectTransform)
        VB: RectSelection(RectTransform)
      nameWithType:
        CSharp: DataPlot.RectSelection(RectTransform)
        VB: DataPlot.RectSelection(RectTransform)
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.RectSelection(RectTransform)
        VB: IVLab.Plotting.DataPlot.RectSelection(RectTransform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: RectSelection
        path: ''
        startLine: 778
      summary: 'Controls the plot&apos;s reaction to the <xref href="IVLab.Plotting.RectSelectionMode" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: public abstract void RectSelection(RectTransform selectionRect)
          VB: Public MustOverride Sub RectSelection(selectionRect As RectTransform)
        parameters:
        - id: selectionRect
          type: Global.RectTransform
          description: 'Current rect transform of the selection rect. '
      overload: IVLab.Plotting.DataPlot.RectSelection*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
      references:
        IVLab.Plotting.RectSelectionMode: 
    - id: IVLab.Plotting.DataPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
      commentId: M:IVLab.Plotting.DataPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
      language: CSharp
      name:
        CSharp: BrushSelection(Vector2, Vector2, SelectionMode.State)
        VB: BrushSelection(Vector2, Vector2, SelectionMode.State)
      nameWithType:
        CSharp: DataPlot.BrushSelection(Vector2, Vector2, SelectionMode.State)
        VB: DataPlot.BrushSelection(Vector2, Vector2, SelectionMode.State)
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlot.BrushSelection(Vector2, Vector2, IVLab.Plotting.SelectionMode.State)
        VB: IVLab.Plotting.DataPlot.BrushSelection(Vector2, Vector2, IVLab.Plotting.SelectionMode.State)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: BrushSelection
        path: ''
        startLine: 784
      summary: 'Controls the plot&apos;s reaction to the <xref href="IVLab.Plotting.BrushSelectionMode" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: public abstract void BrushSelection(Vector2 prevBrushPosition, Vector2 brushDelta, SelectionMode.State selectionState)
          VB: Public MustOverride Sub BrushSelection(prevBrushPosition As Vector2, brushDelta As Vector2, selectionState As SelectionMode.State)
        parameters:
        - id: prevBrushPosition
          type: Global.Vector2
          description: 'Previous position of the brush in Canvas space. '
        - id: brushDelta
          type: Global.Vector2
          description: 'Change in position from the brush&apos; previous position to its current. '
        - id: selectionState
          type: IVLab.Plotting.SelectionMode.State
          description: 'Current <xref href="IVLab.Plotting.SelectionMode.State" data-throw-if-not-resolved="false"></xref> of the selection. '
      overload: IVLab.Plotting.DataPlot.BrushSelection*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
      references:
        IVLab.Plotting.BrushSelectionMode: 
        IVLab.Plotting.SelectionMode.State: 
  - id: IVLab.Plotting.DataPlotManager
    commentId: T:IVLab.Plotting.DataPlotManager
    language: CSharp
    name:
      CSharp: DataPlotManager
      VB: DataPlotManager
    nameWithType:
      CSharp: DataPlotManager
      VB: DataPlotManager
    qualifiedName:
      CSharp: IVLab.Plotting.DataPlotManager
      VB: IVLab.Plotting.DataPlotManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: DataPlotManager
      path: ''
      startLine: 798
    summary: "\nManages the visualization and control of multiple <xref href=\"IVLab.Plotting.DataPlot\" data-throw-if-not-resolved=\"false\"></xref> objects simultaneously.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DataPlotManager : MonoBehaviour'
        VB: >-
          Public Class DataPlotManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVLab.Plotting.DataPlotManager.DataTable
      commentId: P:IVLab.Plotting.DataPlotManager.DataTable
      language: CSharp
      name:
        CSharp: DataTable
        VB: DataTable
      nameWithType:
        CSharp: DataPlotManager.DataTable
        VB: DataPlotManager.DataTable
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlotManager.DataTable
        VB: IVLab.Plotting.DataPlotManager.DataTable
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: DataTable
        path: ''
        startLine: 837
      syntax:
        content:
          CSharp: public DataTable DataTable { get; }
          VB: Public ReadOnly Property DataTable As DataTable
        parameters: []
        return:
          type: IVLab.Plotting.DataTable
      overload: IVLab.Plotting.DataPlotManager.DataTable*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVLab.Plotting.DataPlotManager.LinkedIndices
      commentId: P:IVLab.Plotting.DataPlotManager.LinkedIndices
      language: CSharp
      name:
        CSharp: LinkedIndices
        VB: LinkedIndices
      nameWithType:
        CSharp: DataPlotManager.LinkedIndices
        VB: DataPlotManager.LinkedIndices
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlotManager.LinkedIndices
        VB: IVLab.Plotting.DataPlotManager.LinkedIndices
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: LinkedIndices
        path: ''
        startLine: 838
      syntax:
        content:
          CSharp: public LinkedIndices LinkedIndices { get; }
          VB: Public ReadOnly Property LinkedIndices As LinkedIndices
        parameters: []
        return:
          type: IVLab.Plotting.LinkedIndices
      overload: IVLab.Plotting.DataPlotManager.LinkedIndices*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVLab.Plotting.DataPlotManager.DataPlots
      commentId: P:IVLab.Plotting.DataPlotManager.DataPlots
      language: CSharp
      name:
        CSharp: DataPlots
        VB: DataPlots
      nameWithType:
        CSharp: DataPlotManager.DataPlots
        VB: DataPlotManager.DataPlots
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlotManager.DataPlots
        VB: IVLab.Plotting.DataPlotManager.DataPlots
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: DataPlots
        path: ''
        startLine: 839
      syntax:
        content:
          CSharp: public List<DataPlot> DataPlots { get; }
          VB: Public ReadOnly Property DataPlots As List(Of DataPlot)
        parameters: []
        return:
          type: System.Collections.Generic.List{IVLab.Plotting.DataPlot}
      overload: IVLab.Plotting.DataPlotManager.DataPlots*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVLab.Plotting.DataPlotManager.SetCurrentSelectionMode(IVLab.Plotting.SelectionMode)
      commentId: M:IVLab.Plotting.DataPlotManager.SetCurrentSelectionMode(IVLab.Plotting.SelectionMode)
      language: CSharp
      name:
        CSharp: SetCurrentSelectionMode(SelectionMode)
        VB: SetCurrentSelectionMode(SelectionMode)
      nameWithType:
        CSharp: DataPlotManager.SetCurrentSelectionMode(SelectionMode)
        VB: DataPlotManager.SetCurrentSelectionMode(SelectionMode)
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlotManager.SetCurrentSelectionMode(IVLab.Plotting.SelectionMode)
        VB: IVLab.Plotting.DataPlotManager.SetCurrentSelectionMode(IVLab.Plotting.SelectionMode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: SetCurrentSelectionMode
        path: ''
        startLine: 929
      summary: "\nSets the current selection mode used by this plot manager.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetCurrentSelectionMode(SelectionMode selectionMode)
          VB: Public Sub SetCurrentSelectionMode(selectionMode As SelectionMode)
        parameters:
        - id: selectionMode
          type: IVLab.Plotting.SelectionMode
      overload: IVLab.Plotting.DataPlotManager.SetCurrentSelectionMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataPlotManager.EnableSelection
      commentId: M:IVLab.Plotting.DataPlotManager.EnableSelection
      language: CSharp
      name:
        CSharp: EnableSelection()
        VB: EnableSelection()
      nameWithType:
        CSharp: DataPlotManager.EnableSelection()
        VB: DataPlotManager.EnableSelection()
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlotManager.EnableSelection()
        VB: IVLab.Plotting.DataPlotManager.EnableSelection()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: EnableSelection
        path: ''
        startLine: 933
      summary: "\nEnables selection so that clicking the mouse once again starts a selection.\n"
      example: []
      syntax:
        content:
          CSharp: public void EnableSelection()
          VB: Public Sub EnableSelection
      overload: IVLab.Plotting.DataPlotManager.EnableSelection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataPlotManager.DisableSelection
      commentId: M:IVLab.Plotting.DataPlotManager.DisableSelection
      language: CSharp
      name:
        CSharp: DisableSelection()
        VB: DisableSelection()
      nameWithType:
        CSharp: DataPlotManager.DisableSelection()
        VB: DataPlotManager.DisableSelection()
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlotManager.DisableSelection()
        VB: IVLab.Plotting.DataPlotManager.DisableSelection()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: DisableSelection
        path: ''
        startLine: 937
      summary: "\nDisables selection so that clickling the mouse has no effect.\n"
      example: []
      syntax:
        content:
          CSharp: public void DisableSelection()
          VB: Public Sub DisableSelection
      overload: IVLab.Plotting.DataPlotManager.DisableSelection*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataPlotManager.AddPlotFromSelected(GameObject)
      commentId: M:IVLab.Plotting.DataPlotManager.AddPlotFromSelected(GameObject)
      language: CSharp
      name:
        CSharp: AddPlotFromSelected(GameObject)
        VB: AddPlotFromSelected(GameObject)
      nameWithType:
        CSharp: DataPlotManager.AddPlotFromSelected(GameObject)
        VB: DataPlotManager.AddPlotFromSelected(GameObject)
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlotManager.AddPlotFromSelected(GameObject)
        VB: IVLab.Plotting.DataPlotManager.AddPlotFromSelected(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: AddPlotFromSelected
        path: ''
        startLine: 1016
      summary: "\nAdds a new plot using only the currently selected data points.\n"
      example: []
      syntax:
        content:
          CSharp: public void AddPlotFromSelected(GameObject dataPlotPrefab)
          VB: Public Sub AddPlotFromSelected(dataPlotPrefab As GameObject)
        parameters:
        - id: dataPlotPrefab
          type: Global.GameObject
          description: Prefab GameObject containing the data plot.
      overload: IVLab.Plotting.DataPlotManager.AddPlotFromSelected*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataPlotManager.AddPlot(GameObject)
      commentId: M:IVLab.Plotting.DataPlotManager.AddPlot(GameObject)
      language: CSharp
      name:
        CSharp: AddPlot(GameObject)
        VB: AddPlot(GameObject)
      nameWithType:
        CSharp: DataPlotManager.AddPlot(GameObject)
        VB: DataPlotManager.AddPlot(GameObject)
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlotManager.AddPlot(GameObject)
        VB: IVLab.Plotting.DataPlotManager.AddPlot(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: AddPlot
        path: ''
        startLine: 1049
      summary: "\nAdds a new plot.\n"
      example: []
      syntax:
        content:
          CSharp: public void AddPlot(GameObject dataPlotPrefab)
          VB: Public Sub AddPlot(dataPlotPrefab As GameObject)
        parameters:
        - id: dataPlotPrefab
          type: Global.GameObject
          description: Prefab GameObject containing the data plot.
      overload: IVLab.Plotting.DataPlotManager.AddPlot*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataPlotManager.RemovePlot(IVLab.Plotting.DataPlot)
      commentId: M:IVLab.Plotting.DataPlotManager.RemovePlot(IVLab.Plotting.DataPlot)
      language: CSharp
      name:
        CSharp: RemovePlot(DataPlot)
        VB: RemovePlot(DataPlot)
      nameWithType:
        CSharp: DataPlotManager.RemovePlot(DataPlot)
        VB: DataPlotManager.RemovePlot(DataPlot)
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlotManager.RemovePlot(IVLab.Plotting.DataPlot)
        VB: IVLab.Plotting.DataPlotManager.RemovePlot(IVLab.Plotting.DataPlot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: RemovePlot
        path: ''
        startLine: 1072
      summary: "\nRemoves and destroys the specified plot, if it is being managed by this class.\n"
      example: []
      syntax:
        content:
          CSharp: public void RemovePlot(DataPlot dataPlot)
          VB: Public Sub RemovePlot(dataPlot As DataPlot)
        parameters:
        - id: dataPlot
          type: IVLab.Plotting.DataPlot
          description: Script attached to the data plot GameObject that we wish to remove.
      overload: IVLab.Plotting.DataPlotManager.RemovePlot*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataPlotManager.ToggleMasking
      commentId: M:IVLab.Plotting.DataPlotManager.ToggleMasking
      language: CSharp
      name:
        CSharp: ToggleMasking()
        VB: ToggleMasking()
      nameWithType:
        CSharp: DataPlotManager.ToggleMasking()
        VB: DataPlotManager.ToggleMasking()
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlotManager.ToggleMasking()
        VB: IVLab.Plotting.DataPlotManager.ToggleMasking()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: ToggleMasking
        path: ''
        startLine: 1085
      summary: "\nToggles masking.\n"
      example: []
      syntax:
        content:
          CSharp: public void ToggleMasking()
          VB: Public Sub ToggleMasking
      overload: IVLab.Plotting.DataPlotManager.ToggleMasking*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataPlotManager.UpdatePlots
      commentId: M:IVLab.Plotting.DataPlotManager.UpdatePlots
      language: CSharp
      name:
        CSharp: UpdatePlots()
        VB: UpdatePlots()
      nameWithType:
        CSharp: DataPlotManager.UpdatePlots()
        VB: DataPlotManager.UpdatePlots()
      qualifiedName:
        CSharp: IVLab.Plotting.DataPlotManager.UpdatePlots()
        VB: IVLab.Plotting.DataPlotManager.UpdatePlots()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: UpdatePlots
        path: ''
        startLine: 1125
      summary: "\nUpdates the plots to match the most recent selection, highlighting, and filtering.\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdatePlots()
          VB: Public Sub UpdatePlots
      overload: IVLab.Plotting.DataPlotManager.UpdatePlots*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      IVLab.Plotting.DataPlot: 
  - id: IVLab.Plotting.DataTable
    commentId: T:IVLab.Plotting.DataTable
    language: CSharp
    name:
      CSharp: DataTable
      VB: DataTable
    nameWithType:
      CSharp: DataTable
      VB: DataTable
    qualifiedName:
      CSharp: IVLab.Plotting.DataTable
      VB: IVLab.Plotting.DataTable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: DataTable
      path: ''
      startLine: 1187
    summary: "\nColumn-major data table that can be initialized from a basic CSV.\n"
    example: []
    syntax:
      content:
        CSharp: public class DataTable
        VB: Public Class DataTable
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVLab.Plotting.DataTable.Height
      commentId: P:IVLab.Plotting.DataTable.Height
      language: CSharp
      name:
        CSharp: Height
        VB: Height
      nameWithType:
        CSharp: DataTable.Height
        VB: DataTable.Height
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.Height
        VB: IVLab.Plotting.DataTable.Height
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Height
        path: ''
        startLine: 1199
      syntax:
        content:
          CSharp: public int Height { get; }
          VB: Public ReadOnly Property Height As Integer
        parameters: []
        return:
          type: System.Int32
      overload: IVLab.Plotting.DataTable.Height*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVLab.Plotting.DataTable.Width
      commentId: P:IVLab.Plotting.DataTable.Width
      language: CSharp
      name:
        CSharp: Width
        VB: Width
      nameWithType:
        CSharp: DataTable.Width
        VB: DataTable.Width
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.Width
        VB: IVLab.Plotting.DataTable.Width
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Width
        path: ''
        startLine: 1200
      syntax:
        content:
          CSharp: public int Width { get; }
          VB: Public ReadOnly Property Width As Integer
        parameters: []
        return:
          type: System.Int32
      overload: IVLab.Plotting.DataTable.Width*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVLab.Plotting.DataTable.Data
      commentId: P:IVLab.Plotting.DataTable.Data
      language: CSharp
      name:
        CSharp: Data
        VB: Data
      nameWithType:
        CSharp: DataTable.Data
        VB: DataTable.Data
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.Data
        VB: IVLab.Plotting.DataTable.Data
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Data
        path: ''
        startLine: 1201
      syntax:
        content:
          CSharp: public float[][] Data { get; }
          VB: Public ReadOnly Property Data As Single()()
        parameters: []
        return:
          type: System.Single[][]
      overload: IVLab.Plotting.DataTable.Data*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVLab.Plotting.DataTable.RowIDs
      commentId: P:IVLab.Plotting.DataTable.RowIDs
      language: CSharp
      name:
        CSharp: RowIDs
        VB: RowIDs
      nameWithType:
        CSharp: DataTable.RowIDs
        VB: DataTable.RowIDs
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.RowIDs
        VB: IVLab.Plotting.DataTable.RowIDs
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: RowIDs
        path: ''
        startLine: 1202
      syntax:
        content:
          CSharp: public string[] RowIDs { get; }
          VB: Public ReadOnly Property RowIDs As String()
        parameters: []
        return:
          type: System.String[]
      overload: IVLab.Plotting.DataTable.RowIDs*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVLab.Plotting.DataTable.ColumnNames
      commentId: P:IVLab.Plotting.DataTable.ColumnNames
      language: CSharp
      name:
        CSharp: ColumnNames
        VB: ColumnNames
      nameWithType:
        CSharp: DataTable.ColumnNames
        VB: DataTable.ColumnNames
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.ColumnNames
        VB: IVLab.Plotting.DataTable.ColumnNames
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: ColumnNames
        path: ''
        startLine: 1203
      syntax:
        content:
          CSharp: public string[] ColumnNames { get; }
          VB: Public ReadOnly Property ColumnNames As String()
        parameters: []
        return:
          type: System.String[]
      overload: IVLab.Plotting.DataTable.ColumnNames*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVLab.Plotting.DataTable.ColumnMins
      commentId: P:IVLab.Plotting.DataTable.ColumnMins
      language: CSharp
      name:
        CSharp: ColumnMins
        VB: ColumnMins
      nameWithType:
        CSharp: DataTable.ColumnMins
        VB: DataTable.ColumnMins
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.ColumnMins
        VB: IVLab.Plotting.DataTable.ColumnMins
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: ColumnMins
        path: ''
        startLine: 1204
      syntax:
        content:
          CSharp: public float[] ColumnMins { get; }
          VB: Public ReadOnly Property ColumnMins As Single()
        parameters: []
        return:
          type: System.Single[]
      overload: IVLab.Plotting.DataTable.ColumnMins*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVLab.Plotting.DataTable.ColumnMaxes
      commentId: P:IVLab.Plotting.DataTable.ColumnMaxes
      language: CSharp
      name:
        CSharp: ColumnMaxes
        VB: ColumnMaxes
      nameWithType:
        CSharp: DataTable.ColumnMaxes
        VB: DataTable.ColumnMaxes
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.ColumnMaxes
        VB: IVLab.Plotting.DataTable.ColumnMaxes
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: ColumnMaxes
        path: ''
        startLine: 1205
      syntax:
        content:
          CSharp: public float[] ColumnMaxes { get; }
          VB: Public ReadOnly Property ColumnMaxes As Single()
        parameters: []
        return:
          type: System.Single[]
      overload: IVLab.Plotting.DataTable.ColumnMaxes*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVLab.Plotting.DataTable.#ctor
      commentId: M:IVLab.Plotting.DataTable.#ctor
      language: CSharp
      name:
        CSharp: DataTable()
        VB: DataTable()
      nameWithType:
        CSharp: DataTable.DataTable()
        VB: DataTable.DataTable()
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.DataTable()
        VB: IVLab.Plotting.DataTable.DataTable()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: .ctor
        path: ''
        startLine: 1214
      summary: 'Default constructor initializes random table with 10,000 datapoints. '
      example: []
      syntax:
        content:
          CSharp: public DataTable()
          VB: Public Sub New
      overload: IVLab.Plotting.DataTable.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataTable.#ctor(System.Int32)
      commentId: M:IVLab.Plotting.DataTable.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: DataTable(Int32)
        VB: DataTable(Int32)
      nameWithType:
        CSharp: DataTable.DataTable(Int32)
        VB: DataTable.DataTable(Int32)
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.DataTable(System.Int32)
        VB: IVLab.Plotting.DataTable.DataTable(System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: .ctor
        path: ''
        startLine: 1219
      summary: 'Initializes a random table with a specified number of datapoints. '
      example: []
      syntax:
        content:
          CSharp: public DataTable(int numDataPoints)
          VB: Public Sub New(numDataPoints As Integer)
        parameters:
        - id: numDataPoints
          type: System.Int32
      overload: IVLab.Plotting.DataTable.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataTable.#ctor(System.String)
      commentId: M:IVLab.Plotting.DataTable.#ctor(System.String)
      language: CSharp
      name:
        CSharp: DataTable(String)
        VB: DataTable(String)
      nameWithType:
        CSharp: DataTable.DataTable(String)
        VB: DataTable.DataTable(String)
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.DataTable(System.String)
        VB: IVLab.Plotting.DataTable.DataTable(System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: .ctor
        path: ''
        startLine: 1225
      summary: 'Filename constructor that attempts to initialize a table from the given csv filename. '
      example: []
      syntax:
        content:
          CSharp: public DataTable(string filename)
          VB: Public Sub New(filename As String)
        parameters:
        - id: filename
          type: System.String
          description: Name of the csv file, excluding .csv.
      overload: IVLab.Plotting.DataTable.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataTable.InitializeRandomTable(System.Int32)
      commentId: M:IVLab.Plotting.DataTable.InitializeRandomTable(System.Int32)
      language: CSharp
      name:
        CSharp: InitializeRandomTable(Int32)
        VB: InitializeRandomTable(Int32)
      nameWithType:
        CSharp: DataTable.InitializeRandomTable(Int32)
        VB: DataTable.InitializeRandomTable(Int32)
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.InitializeRandomTable(System.Int32)
        VB: IVLab.Plotting.DataTable.InitializeRandomTable(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: InitializeRandomTable
        path: ''
        startLine: 1242
      summary: "\nInitializes a data table of random size populated with random numeric data.\n"
      example: []
      syntax:
        content:
          CSharp: public void InitializeRandomTable(int dataPointsCount = 10000)
          VB: Public Sub InitializeRandomTable(dataPointsCount As Integer = 10000)
        parameters:
        - id: dataPointsCount
          type: System.Int32
          description: Number of data points to add to the random table.
      overload: IVLab.Plotting.DataTable.InitializeRandomTable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataTable.InitializeTableFromCSV(System.String)
      commentId: M:IVLab.Plotting.DataTable.InitializeTableFromCSV(System.String)
      language: CSharp
      name:
        CSharp: InitializeTableFromCSV(String)
        VB: InitializeTableFromCSV(String)
      nameWithType:
        CSharp: DataTable.InitializeTableFromCSV(String)
        VB: DataTable.InitializeTableFromCSV(String)
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.InitializeTableFromCSV(System.String)
        VB: IVLab.Plotting.DataTable.InitializeTableFromCSV(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: InitializeTableFromCSV
        path: ''
        startLine: 1287
      summary: "\nReads a csv file and loads it into corresponding data table arrays.\n"
      remarks: "\nThis is a modified version of the CSVReader written here: https://bravenewmethod.com/2014/09/13/lightweight-csv-reader-for-unity/.\n"
      example: []
      syntax:
        content:
          CSharp: public void InitializeTableFromCSV(string filename)
          VB: Public Sub InitializeTableFromCSV(filename As String)
        parameters:
        - id: filename
          type: System.String
      overload: IVLab.Plotting.DataTable.InitializeTableFromCSV*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataTable.ColumnDataMinMax(System.Int32)
      commentId: M:IVLab.Plotting.DataTable.ColumnDataMinMax(System.Int32)
      language: CSharp
      name:
        CSharp: ColumnDataMinMax(Int32)
        VB: ColumnDataMinMax(Int32)
      nameWithType:
        CSharp: DataTable.ColumnDataMinMax(Int32)
        VB: DataTable.ColumnDataMinMax(Int32)
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.ColumnDataMinMax(System.Int32)
        VB: IVLab.Plotting.DataTable.ColumnDataMinMax(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: ColumnDataMinMax
        path: ''
        startLine: 1348
      summary: "\nReturns the min and max of a specified column.\n"
      example: []
      syntax:
        content:
          CSharp: public (float, float) ColumnDataMinMax(int j)
          VB: Public Function ColumnDataMinMax(j As Integer) As(Single, Single)(Of Single , Single)
        parameters:
        - id: j
          type: System.Int32
          description: Index of the specified column.
        return:
          type: System.ValueTuple{System.Single,System.Single}
      overload: IVLab.Plotting.DataTable.ColumnDataMinMax*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.DataTable.Empty
      commentId: M:IVLab.Plotting.DataTable.Empty
      language: CSharp
      name:
        CSharp: Empty()
        VB: Empty()
      nameWithType:
        CSharp: DataTable.Empty()
        VB: DataTable.Empty()
      qualifiedName:
        CSharp: IVLab.Plotting.DataTable.Empty()
        VB: IVLab.Plotting.DataTable.Empty()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Empty
        path: ''
        startLine: 1356
      summary: "\nWhether or not the table is empty.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Empty()
          VB: Public Function Empty As Boolean
        return:
          type: System.Boolean
      overload: IVLab.Plotting.DataTable.Empty*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IVLab.Plotting.NiceAxisLabel
    commentId: T:IVLab.Plotting.NiceAxisLabel
    language: CSharp
    name:
      CSharp: NiceAxisLabel
      VB: NiceAxisLabel
    nameWithType:
      CSharp: NiceAxisLabel
      VB: NiceAxisLabel
    qualifiedName:
      CSharp: IVLab.Plotting.NiceAxisLabel
      VB: IVLab.Plotting.NiceAxisLabel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: NiceAxisLabel
      path: ''
      startLine: 1375
    summary: "\nCreates &quot;nice&quot; axis labels by taking the min and max values that the axis needs\nto display and altering them to create an even tick spacing.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NiceAxisLabel : MonoBehaviour'
        VB: >-
          Public Class NiceAxisLabel

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVLab.Plotting.NiceAxisLabel.Inverted
      commentId: P:IVLab.Plotting.NiceAxisLabel.Inverted
      language: CSharp
      name:
        CSharp: Inverted
        VB: Inverted
      nameWithType:
        CSharp: NiceAxisLabel.Inverted
        VB: NiceAxisLabel.Inverted
      qualifiedName:
        CSharp: IVLab.Plotting.NiceAxisLabel.Inverted
        VB: IVLab.Plotting.NiceAxisLabel.Inverted
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Inverted
        path: ''
        startLine: 1414
      syntax:
        content:
          CSharp: public bool Inverted { get; set; }
          VB: Public Property Inverted As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: IVLab.Plotting.NiceAxisLabel.Inverted*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: IVLab.Plotting.NiceAxisLabel.NiceMin
      commentId: P:IVLab.Plotting.NiceAxisLabel.NiceMin
      language: CSharp
      name:
        CSharp: NiceMin
        VB: NiceMin
      nameWithType:
        CSharp: NiceAxisLabel.NiceMin
        VB: NiceAxisLabel.NiceMin
      qualifiedName:
        CSharp: IVLab.Plotting.NiceAxisLabel.NiceMin
        VB: IVLab.Plotting.NiceAxisLabel.NiceMin
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: NiceMin
        path: ''
        startLine: 1419
      syntax:
        content:
          CSharp: public float NiceMin { get; }
          VB: Public ReadOnly Property NiceMin As Single
        parameters: []
        return:
          type: System.Single
      overload: IVLab.Plotting.NiceAxisLabel.NiceMin*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVLab.Plotting.NiceAxisLabel.NiceMax
      commentId: P:IVLab.Plotting.NiceAxisLabel.NiceMax
      language: CSharp
      name:
        CSharp: NiceMax
        VB: NiceMax
      nameWithType:
        CSharp: NiceAxisLabel.NiceMax
        VB: NiceAxisLabel.NiceMax
      qualifiedName:
        CSharp: IVLab.Plotting.NiceAxisLabel.NiceMax
        VB: IVLab.Plotting.NiceAxisLabel.NiceMax
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: NiceMax
        path: ''
        startLine: 1423
      syntax:
        content:
          CSharp: public float NiceMax { get; }
          VB: Public ReadOnly Property NiceMax As Single
        parameters: []
        return:
          type: System.Single
      overload: IVLab.Plotting.NiceAxisLabel.NiceMax*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: IVLab.Plotting.NiceAxisLabel.GenerateNiceMinMax(System.Single,System.Single)
      commentId: M:IVLab.Plotting.NiceAxisLabel.GenerateNiceMinMax(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: GenerateNiceMinMax(Single, Single)
        VB: GenerateNiceMinMax(Single, Single)
      nameWithType:
        CSharp: NiceAxisLabel.GenerateNiceMinMax(Single, Single)
        VB: NiceAxisLabel.GenerateNiceMinMax(Single, Single)
      qualifiedName:
        CSharp: IVLab.Plotting.NiceAxisLabel.GenerateNiceMinMax(System.Single, System.Single)
        VB: IVLab.Plotting.NiceAxisLabel.GenerateNiceMinMax(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: GenerateNiceMinMax
        path: ''
        startLine: 1551
      syntax:
        content:
          CSharp: public (float, float) GenerateNiceMinMax(float min, float max)
          VB: Public Function GenerateNiceMinMax(min As Single, max As Single) As(Single, Single)(Of Single , Single)
        parameters:
        - id: min
          type: System.Single
        - id: max
          type: System.Single
        return:
          type: System.ValueTuple{System.Single,System.Single}
      overload: IVLab.Plotting.NiceAxisLabel.GenerateNiceMinMax*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.NiceAxisLabel.GenerateXAxisLabel(Vector2,Vector2,System.Boolean)
      commentId: M:IVLab.Plotting.NiceAxisLabel.GenerateXAxisLabel(Vector2,Vector2,System.Boolean)
      language: CSharp
      name:
        CSharp: GenerateXAxisLabel(Vector2, Vector2, Boolean)
        VB: GenerateXAxisLabel(Vector2, Vector2, Boolean)
      nameWithType:
        CSharp: NiceAxisLabel.GenerateXAxisLabel(Vector2, Vector2, Boolean)
        VB: NiceAxisLabel.GenerateXAxisLabel(Vector2, Vector2, Boolean)
      qualifiedName:
        CSharp: IVLab.Plotting.NiceAxisLabel.GenerateXAxisLabel(Vector2, Vector2, System.Boolean)
        VB: IVLab.Plotting.NiceAxisLabel.GenerateXAxisLabel(Vector2, Vector2, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: GenerateXAxisLabel
        path: ''
        startLine: 1566
      syntax:
        content:
          CSharp: public void GenerateXAxisLabel(Vector2 sourcePos, Vector2 bounds, bool drawGridlines = false)
          VB: Public Sub GenerateXAxisLabel(sourcePos As Vector2, bounds As Vector2, drawGridlines As Boolean = False)
        parameters:
        - id: sourcePos
          type: Global.Vector2
        - id: bounds
          type: Global.Vector2
        - id: drawGridlines
          type: System.Boolean
      overload: IVLab.Plotting.NiceAxisLabel.GenerateXAxisLabel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.NiceAxisLabel.GenerateYAxisLabel(Vector2,Vector2,System.Boolean)
      commentId: M:IVLab.Plotting.NiceAxisLabel.GenerateYAxisLabel(Vector2,Vector2,System.Boolean)
      language: CSharp
      name:
        CSharp: GenerateYAxisLabel(Vector2, Vector2, Boolean)
        VB: GenerateYAxisLabel(Vector2, Vector2, Boolean)
      nameWithType:
        CSharp: NiceAxisLabel.GenerateYAxisLabel(Vector2, Vector2, Boolean)
        VB: NiceAxisLabel.GenerateYAxisLabel(Vector2, Vector2, Boolean)
      qualifiedName:
        CSharp: IVLab.Plotting.NiceAxisLabel.GenerateYAxisLabel(Vector2, Vector2, System.Boolean)
        VB: IVLab.Plotting.NiceAxisLabel.GenerateYAxisLabel(Vector2, Vector2, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: GenerateYAxisLabel
        path: ''
        startLine: 1596
      syntax:
        content:
          CSharp: public void GenerateYAxisLabel(Vector2 sourcePos, Vector2 bounds, bool drawGridlines = false)
          VB: Public Sub GenerateYAxisLabel(sourcePos As Vector2, bounds As Vector2, drawGridlines As Boolean = False)
        parameters:
        - id: sourcePos
          type: Global.Vector2
        - id: bounds
          type: Global.Vector2
        - id: drawGridlines
          type: System.Boolean
      overload: IVLab.Plotting.NiceAxisLabel.GenerateYAxisLabel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: IVLab.Plotting.ParallelCoordsPlot
    commentId: T:IVLab.Plotting.ParallelCoordsPlot
    language: CSharp
    name:
      CSharp: ParallelCoordsPlot
      VB: ParallelCoordsPlot
    nameWithType:
      CSharp: ParallelCoordsPlot
      VB: ParallelCoordsPlot
    qualifiedName:
      CSharp: IVLab.Plotting.ParallelCoordsPlot
      VB: IVLab.Plotting.ParallelCoordsPlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: ParallelCoordsPlot
      path: ''
      startLine: 1713
    summary: "\nParallel Coordinates Plot \n"
    example: []
    syntax:
      content:
        CSharp: 'public class ParallelCoordsPlot : DataPlot'
        VB: >-
          Public Class ParallelCoordsPlot

              Inherits DataPlot
    inheritance:
    - System.Object
    - IVLab.Plotting.DataPlot
    inheritedMembers:
    - IVLab.Plotting.DataPlot.outerBounds
    - IVLab.Plotting.DataPlot.innerBounds
    - IVLab.Plotting.DataPlot.padding
    - IVLab.Plotting.DataPlot.defaultColor
    - IVLab.Plotting.DataPlot.highlightedColor
    - IVLab.Plotting.DataPlot.maskedColor
    - IVLab.Plotting.DataPlot.selectionPadding
    - IVLab.Plotting.DataPlot.clickSelectionRadius
    - IVLab.Plotting.DataPlot.brushSelectionRadius
    - IVLab.Plotting.DataPlot.plotMask
    - IVLab.Plotting.DataPlot.plotOuterRect
    - IVLab.Plotting.DataPlot.plotInnerRect
    - IVLab.Plotting.DataPlot.plotSelectionRect
    - IVLab.Plotting.DataPlot.deleteButton
    - IVLab.Plotting.DataPlot.dataTable
    - IVLab.Plotting.DataPlot.linkedIndices
    - IVLab.Plotting.DataPlot.plotsCanvas
    - IVLab.Plotting.DataPlot.selectedIndexDictionary
    - IVLab.Plotting.DataPlot.selectedDataPointIndices
    - IVLab.Plotting.DataPlot.selectedDataPointMins
    - IVLab.Plotting.DataPlot.selectedDataPointMaxes
    - IVLab.Plotting.DataPlot.PlotMask
    - IVLab.Plotting.DataPlot.PlotOuterRect
    - IVLab.Plotting.DataPlot.PlotSelectionRect
    - IVLab.Plotting.DataPlot.BrushRadius
    - IVLab.Plotting.DataPlot.ResizePlot(Vector2)
    - IVLab.Plotting.DataPlot.SetPlotSize
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVLab.Plotting.ParallelCoordsPlot.defaultLineColor
      commentId: F:IVLab.Plotting.ParallelCoordsPlot.defaultLineColor
      language: CSharp
      name:
        CSharp: defaultLineColor
        VB: defaultLineColor
      nameWithType:
        CSharp: ParallelCoordsPlot.defaultLineColor
        VB: ParallelCoordsPlot.defaultLineColor
      qualifiedName:
        CSharp: IVLab.Plotting.ParallelCoordsPlot.defaultLineColor
        VB: IVLab.Plotting.ParallelCoordsPlot.defaultLineColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: defaultLineColor
        path: ''
        startLine: 1721
      syntax:
        content:
          CSharp: protected Color32 defaultLineColor
          VB: Protected defaultLineColor As Color32
        return:
          type: Global.Color32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ParallelCoordsPlot.highlightedLineColor
      commentId: F:IVLab.Plotting.ParallelCoordsPlot.highlightedLineColor
      language: CSharp
      name:
        CSharp: highlightedLineColor
        VB: highlightedLineColor
      nameWithType:
        CSharp: ParallelCoordsPlot.highlightedLineColor
        VB: ParallelCoordsPlot.highlightedLineColor
      qualifiedName:
        CSharp: IVLab.Plotting.ParallelCoordsPlot.highlightedLineColor
        VB: IVLab.Plotting.ParallelCoordsPlot.highlightedLineColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: highlightedLineColor
        path: ''
        startLine: 1721
      syntax:
        content:
          CSharp: protected Color32 highlightedLineColor
          VB: Protected highlightedLineColor As Color32
        return:
          type: Global.Color32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ParallelCoordsPlot.maskedLineColor
      commentId: F:IVLab.Plotting.ParallelCoordsPlot.maskedLineColor
      language: CSharp
      name:
        CSharp: maskedLineColor
        VB: maskedLineColor
      nameWithType:
        CSharp: ParallelCoordsPlot.maskedLineColor
        VB: ParallelCoordsPlot.maskedLineColor
      qualifiedName:
        CSharp: IVLab.Plotting.ParallelCoordsPlot.maskedLineColor
        VB: IVLab.Plotting.ParallelCoordsPlot.maskedLineColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: maskedLineColor
        path: ''
        startLine: 1721
      syntax:
        content:
          CSharp: protected Color32 maskedLineColor
          VB: Protected maskedLineColor As Color32
        return:
          type: Global.Color32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ParallelCoordsPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
      commentId: M:IVLab.Plotting.ParallelCoordsPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
      language: CSharp
      name:
        CSharp: Init(DataPlotManager, Vector2, Int32[])
        VB: Init(DataPlotManager, Vector2, Int32())
      nameWithType:
        CSharp: ParallelCoordsPlot.Init(DataPlotManager, Vector2, Int32[])
        VB: ParallelCoordsPlot.Init(DataPlotManager, Vector2, Int32())
      qualifiedName:
        CSharp: IVLab.Plotting.ParallelCoordsPlot.Init(IVLab.Plotting.DataPlotManager, Vector2, System.Int32[])
        VB: IVLab.Plotting.ParallelCoordsPlot.Init(IVLab.Plotting.DataPlotManager, Vector2, System.Int32())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Init
        path: ''
        startLine: 1755
      syntax:
        content:
          CSharp: public override void Init(DataPlotManager dataPlotManager, Vector2 outerBounds, int[] selectedDataPointIndices = null)
          VB: Public Overrides Sub Init(dataPlotManager As DataPlotManager, outerBounds As Vector2, selectedDataPointIndices As Integer() = Nothing)
        parameters:
        - id: dataPlotManager
          type: IVLab.Plotting.DataPlotManager
        - id: outerBounds
          type: Global.Vector2
        - id: selectedDataPointIndices
          type: System.Int32[]
      overload: IVLab.Plotting.ParallelCoordsPlot.Init*
      overridden: IVLab.Plotting.DataPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ParallelCoordsPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      commentId: M:IVLab.Plotting.ParallelCoordsPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      language: CSharp
      name:
        CSharp: UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
        VB: UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
      nameWithType:
        CSharp: ParallelCoordsPlot.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
        VB: ParallelCoordsPlot.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
      qualifiedName:
        CSharp: IVLab.Plotting.ParallelCoordsPlot.UpdateDataPoint(System.Int32, IVLab.Plotting.LinkedIndices.LinkedAttributes)
        VB: IVLab.Plotting.ParallelCoordsPlot.UpdateDataPoint(System.Int32, IVLab.Plotting.LinkedIndices.LinkedAttributes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: UpdateDataPoint
        path: ''
        startLine: 1859
      syntax:
        content:
          CSharp: public override void UpdateDataPoint(int index, LinkedIndices.LinkedAttributes indexAttributes)
          VB: Public Overrides Sub UpdateDataPoint(index As Integer, indexAttributes As LinkedIndices.LinkedAttributes)
        parameters:
        - id: index
          type: System.Int32
        - id: indexAttributes
          type: IVLab.Plotting.LinkedIndices.LinkedAttributes
      overload: IVLab.Plotting.ParallelCoordsPlot.UpdateDataPoint*
      overridden: IVLab.Plotting.DataPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ParallelCoordsPlot.RefreshPlotGraphics
      commentId: M:IVLab.Plotting.ParallelCoordsPlot.RefreshPlotGraphics
      language: CSharp
      name:
        CSharp: RefreshPlotGraphics()
        VB: RefreshPlotGraphics()
      nameWithType:
        CSharp: ParallelCoordsPlot.RefreshPlotGraphics()
        VB: ParallelCoordsPlot.RefreshPlotGraphics()
      qualifiedName:
        CSharp: IVLab.Plotting.ParallelCoordsPlot.RefreshPlotGraphics()
        VB: IVLab.Plotting.ParallelCoordsPlot.RefreshPlotGraphics()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: RefreshPlotGraphics
        path: ''
        startLine: 1903
      syntax:
        content:
          CSharp: public override void RefreshPlotGraphics()
          VB: Public Overrides Sub RefreshPlotGraphics
      overload: IVLab.Plotting.ParallelCoordsPlot.RefreshPlotGraphics*
      overridden: IVLab.Plotting.DataPlot.RefreshPlotGraphics
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ParallelCoordsPlot.FlipAxis(System.Int32)
      commentId: M:IVLab.Plotting.ParallelCoordsPlot.FlipAxis(System.Int32)
      language: CSharp
      name:
        CSharp: FlipAxis(Int32)
        VB: FlipAxis(Int32)
      nameWithType:
        CSharp: ParallelCoordsPlot.FlipAxis(Int32)
        VB: ParallelCoordsPlot.FlipAxis(Int32)
      qualifiedName:
        CSharp: IVLab.Plotting.ParallelCoordsPlot.FlipAxis(System.Int32)
        VB: IVLab.Plotting.ParallelCoordsPlot.FlipAxis(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: FlipAxis
        path: ''
        startLine: 1912
      syntax:
        content:
          CSharp: public void FlipAxis(int j)
          VB: Public Sub FlipAxis(j As Integer)
        parameters:
        - id: j
          type: System.Int32
      overload: IVLab.Plotting.ParallelCoordsPlot.FlipAxis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: IVLab.Plotting.ParallelCoordsPlot.Plot
      commentId: M:IVLab.Plotting.ParallelCoordsPlot.Plot
      language: CSharp
      name:
        CSharp: Plot()
        VB: Plot()
      nameWithType:
        CSharp: ParallelCoordsPlot.Plot()
        VB: ParallelCoordsPlot.Plot()
      qualifiedName:
        CSharp: IVLab.Plotting.ParallelCoordsPlot.Plot()
        VB: IVLab.Plotting.ParallelCoordsPlot.Plot()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Plot
        path: ''
        startLine: 1962
      syntax:
        content:
          CSharp: public override void Plot()
          VB: Public Overrides Sub Plot
      overload: IVLab.Plotting.ParallelCoordsPlot.Plot*
      overridden: IVLab.Plotting.DataPlot.Plot
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ParallelCoordsPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
      commentId: M:IVLab.Plotting.ParallelCoordsPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
      language: CSharp
      name:
        CSharp: ClickSelection(Vector2, SelectionMode.State)
        VB: ClickSelection(Vector2, SelectionMode.State)
      nameWithType:
        CSharp: ParallelCoordsPlot.ClickSelection(Vector2, SelectionMode.State)
        VB: ParallelCoordsPlot.ClickSelection(Vector2, SelectionMode.State)
      qualifiedName:
        CSharp: IVLab.Plotting.ParallelCoordsPlot.ClickSelection(Vector2, IVLab.Plotting.SelectionMode.State)
        VB: IVLab.Plotting.ParallelCoordsPlot.ClickSelection(Vector2, IVLab.Plotting.SelectionMode.State)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: ClickSelection
        path: ''
        startLine: 2043
      syntax:
        content:
          CSharp: public override void ClickSelection(Vector2 selectionPosition, SelectionMode.State selectionState)
          VB: Public Overrides Sub ClickSelection(selectionPosition As Vector2, selectionState As SelectionMode.State)
        parameters:
        - id: selectionPosition
          type: Global.Vector2
        - id: selectionState
          type: IVLab.Plotting.SelectionMode.State
      overload: IVLab.Plotting.ParallelCoordsPlot.ClickSelection*
      overridden: IVLab.Plotting.DataPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ParallelCoordsPlot.RectSelection(RectTransform)
      commentId: M:IVLab.Plotting.ParallelCoordsPlot.RectSelection(RectTransform)
      language: CSharp
      name:
        CSharp: RectSelection(RectTransform)
        VB: RectSelection(RectTransform)
      nameWithType:
        CSharp: ParallelCoordsPlot.RectSelection(RectTransform)
        VB: ParallelCoordsPlot.RectSelection(RectTransform)
      qualifiedName:
        CSharp: IVLab.Plotting.ParallelCoordsPlot.RectSelection(RectTransform)
        VB: IVLab.Plotting.ParallelCoordsPlot.RectSelection(RectTransform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: RectSelection
        path: ''
        startLine: 2119
      syntax:
        content:
          CSharp: public override void RectSelection(RectTransform selectionRect)
          VB: Public Overrides Sub RectSelection(selectionRect As RectTransform)
        parameters:
        - id: selectionRect
          type: Global.RectTransform
      overload: IVLab.Plotting.ParallelCoordsPlot.RectSelection*
      overridden: IVLab.Plotting.DataPlot.RectSelection(RectTransform)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ParallelCoordsPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
      commentId: M:IVLab.Plotting.ParallelCoordsPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
      language: CSharp
      name:
        CSharp: BrushSelection(Vector2, Vector2, SelectionMode.State)
        VB: BrushSelection(Vector2, Vector2, SelectionMode.State)
      nameWithType:
        CSharp: ParallelCoordsPlot.BrushSelection(Vector2, Vector2, SelectionMode.State)
        VB: ParallelCoordsPlot.BrushSelection(Vector2, Vector2, SelectionMode.State)
      qualifiedName:
        CSharp: IVLab.Plotting.ParallelCoordsPlot.BrushSelection(Vector2, Vector2, IVLab.Plotting.SelectionMode.State)
        VB: IVLab.Plotting.ParallelCoordsPlot.BrushSelection(Vector2, Vector2, IVLab.Plotting.SelectionMode.State)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: BrushSelection
        path: ''
        startLine: 2157
      syntax:
        content:
          CSharp: public override void BrushSelection(Vector2 prevBrushPosition, Vector2 brushDelta, SelectionMode.State selectionState)
          VB: Public Overrides Sub BrushSelection(prevBrushPosition As Vector2, brushDelta As Vector2, selectionState As SelectionMode.State)
        parameters:
        - id: prevBrushPosition
          type: Global.Vector2
        - id: brushDelta
          type: Global.Vector2
        - id: selectionState
          type: IVLab.Plotting.SelectionMode.State
      overload: IVLab.Plotting.ParallelCoordsPlot.BrushSelection*
      overridden: IVLab.Plotting.DataPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: IVLab.Plotting.ScatterPlot
    commentId: T:IVLab.Plotting.ScatterPlot
    language: CSharp
    name:
      CSharp: ScatterPlot
      VB: ScatterPlot
    nameWithType:
      CSharp: ScatterPlot
      VB: ScatterPlot
    qualifiedName:
      CSharp: IVLab.Plotting.ScatterPlot
      VB: IVLab.Plotting.ScatterPlot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: ScatterPlot
      path: ''
      startLine: 2239
    summary: "\nScatter plot <xref href=\"IVLab.Plotting.DataPlot\" data-throw-if-not-resolved=\"false\"></xref> implementation that uses Unity&apos;s particle system to efficiently\nrender many data points at once.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ScatterPlot : DataPlot'
        VB: >-
          Public Class ScatterPlot

              Inherits DataPlot
    inheritance:
    - System.Object
    - IVLab.Plotting.DataPlot
    inheritedMembers:
    - IVLab.Plotting.DataPlot.outerBounds
    - IVLab.Plotting.DataPlot.innerBounds
    - IVLab.Plotting.DataPlot.padding
    - IVLab.Plotting.DataPlot.defaultColor
    - IVLab.Plotting.DataPlot.highlightedColor
    - IVLab.Plotting.DataPlot.maskedColor
    - IVLab.Plotting.DataPlot.selectionPadding
    - IVLab.Plotting.DataPlot.clickSelectionRadius
    - IVLab.Plotting.DataPlot.brushSelectionRadius
    - IVLab.Plotting.DataPlot.plotMask
    - IVLab.Plotting.DataPlot.plotOuterRect
    - IVLab.Plotting.DataPlot.plotInnerRect
    - IVLab.Plotting.DataPlot.plotSelectionRect
    - IVLab.Plotting.DataPlot.deleteButton
    - IVLab.Plotting.DataPlot.dataTable
    - IVLab.Plotting.DataPlot.linkedIndices
    - IVLab.Plotting.DataPlot.plotsCanvas
    - IVLab.Plotting.DataPlot.selectedIndexDictionary
    - IVLab.Plotting.DataPlot.selectedDataPointIndices
    - IVLab.Plotting.DataPlot.selectedDataPointMins
    - IVLab.Plotting.DataPlot.selectedDataPointMaxes
    - IVLab.Plotting.DataPlot.PlotMask
    - IVLab.Plotting.DataPlot.PlotOuterRect
    - IVLab.Plotting.DataPlot.PlotSelectionRect
    - IVLab.Plotting.DataPlot.BrushRadius
    - IVLab.Plotting.DataPlot.ResizePlot(Vector2)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVLab.Plotting.ScatterPlot.pointSize
      commentId: F:IVLab.Plotting.ScatterPlot.pointSize
      language: CSharp
      name:
        CSharp: pointSize
        VB: pointSize
      nameWithType:
        CSharp: ScatterPlot.pointSize
        VB: ScatterPlot.pointSize
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.pointSize
        VB: IVLab.Plotting.ScatterPlot.pointSize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: pointSize
        path: ''
        startLine: 2243
      syntax:
        content:
          CSharp: protected float pointSize
          VB: Protected pointSize As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.scaleToOrigin
      commentId: F:IVLab.Plotting.ScatterPlot.scaleToOrigin
      language: CSharp
      name:
        CSharp: scaleToOrigin
        VB: scaleToOrigin
      nameWithType:
        CSharp: ScatterPlot.scaleToOrigin
        VB: ScatterPlot.scaleToOrigin
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.scaleToOrigin
        VB: IVLab.Plotting.ScatterPlot.scaleToOrigin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: scaleToOrigin
        path: ''
        startLine: 2245
      summary: 'Controls whether or not the plot is scaled so that the point (0, 0) is visible. '
      example: []
      syntax:
        content:
          CSharp: protected bool scaleToOrigin
          VB: Protected scaleToOrigin As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.plotParticleSystemPrefab
      commentId: F:IVLab.Plotting.ScatterPlot.plotParticleSystemPrefab
      language: CSharp
      name:
        CSharp: plotParticleSystemPrefab
        VB: plotParticleSystemPrefab
      nameWithType:
        CSharp: ScatterPlot.plotParticleSystemPrefab
        VB: ScatterPlot.plotParticleSystemPrefab
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.plotParticleSystemPrefab
        VB: IVLab.Plotting.ScatterPlot.plotParticleSystemPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: plotParticleSystemPrefab
        path: ''
        startLine: 2249
      syntax:
        content:
          CSharp: protected GameObject plotParticleSystemPrefab
          VB: Protected plotParticleSystemPrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.axisLabelPrefab
      commentId: F:IVLab.Plotting.ScatterPlot.axisLabelPrefab
      language: CSharp
      name:
        CSharp: axisLabelPrefab
        VB: axisLabelPrefab
      nameWithType:
        CSharp: ScatterPlot.axisLabelPrefab
        VB: ScatterPlot.axisLabelPrefab
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.axisLabelPrefab
        VB: IVLab.Plotting.ScatterPlot.axisLabelPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: axisLabelPrefab
        path: ''
        startLine: 2251
      summary: 'Prefab from which axis labels can be instantiated. '
      example: []
      syntax:
        content:
          CSharp: protected GameObject axisLabelPrefab
          VB: Protected axisLabelPrefab As GameObject
        return:
          type: Global.GameObject
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.xDropdown
      commentId: F:IVLab.Plotting.ScatterPlot.xDropdown
      language: CSharp
      name:
        CSharp: xDropdown
        VB: xDropdown
      nameWithType:
        CSharp: ScatterPlot.xDropdown
        VB: ScatterPlot.xDropdown
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.xDropdown
        VB: IVLab.Plotting.ScatterPlot.xDropdown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: xDropdown
        path: ''
        startLine: 2253
      summary: 'Dropdowns used to select which columns should be compared '
      example: []
      syntax:
        content:
          CSharp: protected TMP_Dropdown xDropdown
          VB: Protected xDropdown As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.yDropdown
      commentId: F:IVLab.Plotting.ScatterPlot.yDropdown
      language: CSharp
      name:
        CSharp: yDropdown
        VB: yDropdown
      nameWithType:
        CSharp: ScatterPlot.yDropdown
        VB: ScatterPlot.yDropdown
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.yDropdown
        VB: IVLab.Plotting.ScatterPlot.yDropdown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: yDropdown
        path: ''
        startLine: 2253
      summary: 'Dropdowns used to select which columns should be compared '
      example: []
      syntax:
        content:
          CSharp: protected TMP_Dropdown yDropdown
          VB: Protected yDropdown As TMP_Dropdown
        return:
          type: Global.TMP_Dropdown
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.dropdownCanvas
      commentId: F:IVLab.Plotting.ScatterPlot.dropdownCanvas
      language: CSharp
      name:
        CSharp: dropdownCanvas
        VB: dropdownCanvas
      nameWithType:
        CSharp: ScatterPlot.dropdownCanvas
        VB: ScatterPlot.dropdownCanvas
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.dropdownCanvas
        VB: IVLab.Plotting.ScatterPlot.dropdownCanvas
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: dropdownCanvas
        path: ''
        startLine: 2254
      syntax:
        content:
          CSharp: protected Canvas dropdownCanvas
          VB: Protected dropdownCanvas As Canvas
        return:
          type: Global.Canvas
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.plotParticlesParent
      commentId: F:IVLab.Plotting.ScatterPlot.plotParticlesParent
      language: CSharp
      name:
        CSharp: plotParticlesParent
        VB: plotParticlesParent
      nameWithType:
        CSharp: ScatterPlot.plotParticlesParent
        VB: ScatterPlot.plotParticlesParent
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.plotParticlesParent
        VB: IVLab.Plotting.ScatterPlot.plotParticlesParent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: plotParticlesParent
        path: ''
        startLine: 2255
      syntax:
        content:
          CSharp: protected Transform plotParticlesParent
          VB: Protected plotParticlesParent As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.axisLabelsParent
      commentId: F:IVLab.Plotting.ScatterPlot.axisLabelsParent
      language: CSharp
      name:
        CSharp: axisLabelsParent
        VB: axisLabelsParent
      nameWithType:
        CSharp: ScatterPlot.axisLabelsParent
        VB: ScatterPlot.axisLabelsParent
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.axisLabelsParent
        VB: IVLab.Plotting.ScatterPlot.axisLabelsParent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: axisLabelsParent
        path: ''
        startLine: 2257
      summary: 'Parent used to store axes labels in the scene hierarchy. '
      example: []
      syntax:
        content:
          CSharp: protected Transform axisLabelsParent
          VB: Protected axisLabelsParent As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.xAxisLabel
      commentId: F:IVLab.Plotting.ScatterPlot.xAxisLabel
      language: CSharp
      name:
        CSharp: xAxisLabel
        VB: xAxisLabel
      nameWithType:
        CSharp: ScatterPlot.xAxisLabel
        VB: ScatterPlot.xAxisLabel
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.xAxisLabel
        VB: IVLab.Plotting.ScatterPlot.xAxisLabel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: xAxisLabel
        path: ''
        startLine: 2259
      summary: 'Axis label generating scripts. '
      example: []
      syntax:
        content:
          CSharp: protected NiceAxisLabel xAxisLabel
          VB: Protected xAxisLabel As NiceAxisLabel
        return:
          type: IVLab.Plotting.NiceAxisLabel
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.yAxisLabel
      commentId: F:IVLab.Plotting.ScatterPlot.yAxisLabel
      language: CSharp
      name:
        CSharp: yAxisLabel
        VB: yAxisLabel
      nameWithType:
        CSharp: ScatterPlot.yAxisLabel
        VB: ScatterPlot.yAxisLabel
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.yAxisLabel
        VB: IVLab.Plotting.ScatterPlot.yAxisLabel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: yAxisLabel
        path: ''
        startLine: 2259
      summary: 'Axis label generating scripts. '
      example: []
      syntax:
        content:
          CSharp: protected NiceAxisLabel yAxisLabel
          VB: Protected yAxisLabel As NiceAxisLabel
        return:
          type: IVLab.Plotting.NiceAxisLabel
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.xColumnIdx
      commentId: F:IVLab.Plotting.ScatterPlot.xColumnIdx
      language: CSharp
      name:
        CSharp: xColumnIdx
        VB: xColumnIdx
      nameWithType:
        CSharp: ScatterPlot.xColumnIdx
        VB: ScatterPlot.xColumnIdx
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.xColumnIdx
        VB: IVLab.Plotting.ScatterPlot.xColumnIdx
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: xColumnIdx
        path: ''
        startLine: 2261
      summary: 'Indices into data table of currently selected columns that are being compared. '
      example: []
      syntax:
        content:
          CSharp: protected int xColumnIdx
          VB: Protected xColumnIdx As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.yColumnIdx
      commentId: F:IVLab.Plotting.ScatterPlot.yColumnIdx
      language: CSharp
      name:
        CSharp: yColumnIdx
        VB: yColumnIdx
      nameWithType:
        CSharp: ScatterPlot.yColumnIdx
        VB: ScatterPlot.yColumnIdx
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.yColumnIdx
        VB: IVLab.Plotting.ScatterPlot.yColumnIdx
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: yColumnIdx
        path: ''
        startLine: 2261
      summary: 'Indices into data table of currently selected columns that are being compared. '
      example: []
      syntax:
        content:
          CSharp: protected int yColumnIdx
          VB: Protected yColumnIdx As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.pointPositions
      commentId: F:IVLab.Plotting.ScatterPlot.pointPositions
      language: CSharp
      name:
        CSharp: pointPositions
        VB: pointPositions
      nameWithType:
        CSharp: ScatterPlot.pointPositions
        VB: ScatterPlot.pointPositions
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.pointPositions
        VB: IVLab.Plotting.ScatterPlot.pointPositions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: pointPositions
        path: ''
        startLine: 2263
      summary: 'Array of positions of all the points on the plot. '
      example: []
      syntax:
        content:
          CSharp: protected Vector2[] pointPositions
          VB: Protected pointPositions As Vector2()
        return:
          type: Global.Vector2[]
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.plotParticleSystem
      commentId: F:IVLab.Plotting.ScatterPlot.plotParticleSystem
      language: CSharp
      name:
        CSharp: plotParticleSystem
        VB: plotParticleSystem
      nameWithType:
        CSharp: ScatterPlot.plotParticleSystem
        VB: ScatterPlot.plotParticleSystem
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.plotParticleSystem
        VB: IVLab.Plotting.ScatterPlot.plotParticleSystem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: plotParticleSystem
        path: ''
        startLine: 2265
      summary: 'Particle system instance used to render data points. '
      example: []
      syntax:
        content:
          CSharp: protected ParticleSystem plotParticleSystem
          VB: Protected plotParticleSystem As ParticleSystem
        return:
          type: Global.ParticleSystem
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.pointParticles
      commentId: F:IVLab.Plotting.ScatterPlot.pointParticles
      language: CSharp
      name:
        CSharp: pointParticles
        VB: pointParticles
      nameWithType:
        CSharp: ScatterPlot.pointParticles
        VB: ScatterPlot.pointParticles
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.pointParticles
        VB: IVLab.Plotting.ScatterPlot.pointParticles
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: pointParticles
        path: ''
        startLine: 2267
      summary: 'Array of particles representing all the points on the plot. '
      example: []
      syntax:
        content:
          CSharp: protected ParticleSystem.Particle[] pointParticles
          VB: Protected pointParticles As ParticleSystem.Particle()
        return:
          type: Global.ParticleSystem.Particle[]
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.clickedPointIdx
      commentId: F:IVLab.Plotting.ScatterPlot.clickedPointIdx
      language: CSharp
      name:
        CSharp: clickedPointIdx
        VB: clickedPointIdx
      nameWithType:
        CSharp: ScatterPlot.clickedPointIdx
        VB: ScatterPlot.clickedPointIdx
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.clickedPointIdx
        VB: IVLab.Plotting.ScatterPlot.clickedPointIdx
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: clickedPointIdx
        path: ''
        startLine: 2269
      summary: 'Index into pointPositions array of the point currently selected by the click selection mode. '
      example: []
      syntax:
        content:
          CSharp: protected int clickedPointIdx
          VB: Protected clickedPointIdx As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.ScatterPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
      commentId: M:IVLab.Plotting.ScatterPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
      language: CSharp
      name:
        CSharp: Init(DataPlotManager, Vector2, Int32[])
        VB: Init(DataPlotManager, Vector2, Int32())
      nameWithType:
        CSharp: ScatterPlot.Init(DataPlotManager, Vector2, Int32[])
        VB: ScatterPlot.Init(DataPlotManager, Vector2, Int32())
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.Init(IVLab.Plotting.DataPlotManager, Vector2, System.Int32[])
        VB: IVLab.Plotting.ScatterPlot.Init(IVLab.Plotting.DataPlotManager, Vector2, System.Int32())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Init
        path: ''
        startLine: 2284
      syntax:
        content:
          CSharp: public override void Init(DataPlotManager dataPlotManager, Vector2 outerBounds, int[] selectedDataPointIndices = null)
          VB: Public Overrides Sub Init(dataPlotManager As DataPlotManager, outerBounds As Vector2, selectedDataPointIndices As Integer() = Nothing)
        parameters:
        - id: dataPlotManager
          type: IVLab.Plotting.DataPlotManager
        - id: outerBounds
          type: Global.Vector2
        - id: selectedDataPointIndices
          type: System.Int32[]
      overload: IVLab.Plotting.ScatterPlot.Init*
      overridden: IVLab.Plotting.DataPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ScatterPlot.SetPlotSize
      commentId: M:IVLab.Plotting.ScatterPlot.SetPlotSize
      language: CSharp
      name:
        CSharp: SetPlotSize()
        VB: SetPlotSize()
      nameWithType:
        CSharp: ScatterPlot.SetPlotSize()
        VB: ScatterPlot.SetPlotSize()
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.SetPlotSize()
        VB: IVLab.Plotting.ScatterPlot.SetPlotSize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: SetPlotSize
        path: ''
        startLine: 2366
      syntax:
        content:
          CSharp: protected override void SetPlotSize()
          VB: Protected Overrides Sub SetPlotSize
      overload: IVLab.Plotting.ScatterPlot.SetPlotSize*
      overridden: IVLab.Plotting.DataPlot.SetPlotSize
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: IVLab.Plotting.ScatterPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      commentId: M:IVLab.Plotting.ScatterPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      language: CSharp
      name:
        CSharp: UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
        VB: UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
      nameWithType:
        CSharp: ScatterPlot.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
        VB: ScatterPlot.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes)
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.UpdateDataPoint(System.Int32, IVLab.Plotting.LinkedIndices.LinkedAttributes)
        VB: IVLab.Plotting.ScatterPlot.UpdateDataPoint(System.Int32, IVLab.Plotting.LinkedIndices.LinkedAttributes)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: UpdateDataPoint
        path: ''
        startLine: 2375
      syntax:
        content:
          CSharp: public override void UpdateDataPoint(int index, LinkedIndices.LinkedAttributes indexAttributes)
          VB: Public Overrides Sub UpdateDataPoint(index As Integer, indexAttributes As LinkedIndices.LinkedAttributes)
        parameters:
        - id: index
          type: System.Int32
        - id: indexAttributes
          type: IVLab.Plotting.LinkedIndices.LinkedAttributes
      overload: IVLab.Plotting.ScatterPlot.UpdateDataPoint*
      overridden: IVLab.Plotting.DataPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ScatterPlot.RefreshPlotGraphics
      commentId: M:IVLab.Plotting.ScatterPlot.RefreshPlotGraphics
      language: CSharp
      name:
        CSharp: RefreshPlotGraphics()
        VB: RefreshPlotGraphics()
      nameWithType:
        CSharp: ScatterPlot.RefreshPlotGraphics()
        VB: ScatterPlot.RefreshPlotGraphics()
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.RefreshPlotGraphics()
        VB: IVLab.Plotting.ScatterPlot.RefreshPlotGraphics()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: RefreshPlotGraphics
        path: ''
        startLine: 2401
      syntax:
        content:
          CSharp: public override void RefreshPlotGraphics()
          VB: Public Overrides Sub RefreshPlotGraphics
      overload: IVLab.Plotting.ScatterPlot.RefreshPlotGraphics*
      overridden: IVLab.Plotting.DataPlot.RefreshPlotGraphics
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ScatterPlot.Plot
      commentId: M:IVLab.Plotting.ScatterPlot.Plot
      language: CSharp
      name:
        CSharp: Plot()
        VB: Plot()
      nameWithType:
        CSharp: ScatterPlot.Plot()
        VB: ScatterPlot.Plot()
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.Plot()
        VB: IVLab.Plotting.ScatterPlot.Plot()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Plot
        path: ''
        startLine: 2407
      syntax:
        content:
          CSharp: public override void Plot()
          VB: Public Overrides Sub Plot
      overload: IVLab.Plotting.ScatterPlot.Plot*
      overridden: IVLab.Plotting.DataPlot.Plot
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ScatterPlot.xDropdownUpdated
      commentId: M:IVLab.Plotting.ScatterPlot.xDropdownUpdated
      language: CSharp
      name:
        CSharp: xDropdownUpdated()
        VB: xDropdownUpdated()
      nameWithType:
        CSharp: ScatterPlot.xDropdownUpdated()
        VB: ScatterPlot.xDropdownUpdated()
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.xDropdownUpdated()
        VB: IVLab.Plotting.ScatterPlot.xDropdownUpdated()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: xDropdownUpdated
        path: ''
        startLine: 2455
      syntax:
        content:
          CSharp: protected virtual void xDropdownUpdated()
          VB: Protected Overridable Sub xDropdownUpdated
      overload: IVLab.Plotting.ScatterPlot.xDropdownUpdated*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: IVLab.Plotting.ScatterPlot.yDropdownUpdated
      commentId: M:IVLab.Plotting.ScatterPlot.yDropdownUpdated
      language: CSharp
      name:
        CSharp: yDropdownUpdated()
        VB: yDropdownUpdated()
      nameWithType:
        CSharp: ScatterPlot.yDropdownUpdated()
        VB: ScatterPlot.yDropdownUpdated()
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.yDropdownUpdated()
        VB: IVLab.Plotting.ScatterPlot.yDropdownUpdated()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: yDropdownUpdated
        path: ''
        startLine: 2456
      syntax:
        content:
          CSharp: protected virtual void yDropdownUpdated()
          VB: Protected Overridable Sub yDropdownUpdated
      overload: IVLab.Plotting.ScatterPlot.yDropdownUpdated*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames(System.String[])
      commentId: M:IVLab.Plotting.ScatterPlot.DropdownSetColumnNames(System.String[])
      language: CSharp
      name:
        CSharp: DropdownSetColumnNames(String[])
        VB: DropdownSetColumnNames(String())
      nameWithType:
        CSharp: ScatterPlot.DropdownSetColumnNames(String[])
        VB: ScatterPlot.DropdownSetColumnNames(String())
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames(System.String[])
        VB: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames(System.String())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: DropdownSetColumnNames
        path: ''
        startLine: 2459
      syntax:
        content:
          CSharp: protected virtual void DropdownSetColumnNames(string[] columnNames)
          VB: Protected Overridable Sub DropdownSetColumnNames(columnNames As String())
        parameters:
        - id: columnNames
          type: System.String[]
      overload: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: IVLab.Plotting.ScatterPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
      commentId: M:IVLab.Plotting.ScatterPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
      language: CSharp
      name:
        CSharp: ClickSelection(Vector2, SelectionMode.State)
        VB: ClickSelection(Vector2, SelectionMode.State)
      nameWithType:
        CSharp: ScatterPlot.ClickSelection(Vector2, SelectionMode.State)
        VB: ScatterPlot.ClickSelection(Vector2, SelectionMode.State)
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.ClickSelection(Vector2, IVLab.Plotting.SelectionMode.State)
        VB: IVLab.Plotting.ScatterPlot.ClickSelection(Vector2, IVLab.Plotting.SelectionMode.State)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: ClickSelection
        path: ''
        startLine: 2479
      syntax:
        content:
          CSharp: public override void ClickSelection(Vector2 selectionPosition, SelectionMode.State selectionState)
          VB: Public Overrides Sub ClickSelection(selectionPosition As Vector2, selectionState As SelectionMode.State)
        parameters:
        - id: selectionPosition
          type: Global.Vector2
        - id: selectionState
          type: IVLab.Plotting.SelectionMode.State
      overload: IVLab.Plotting.ScatterPlot.ClickSelection*
      overridden: IVLab.Plotting.DataPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ScatterPlot.RectSelection(RectTransform)
      commentId: M:IVLab.Plotting.ScatterPlot.RectSelection(RectTransform)
      language: CSharp
      name:
        CSharp: RectSelection(RectTransform)
        VB: RectSelection(RectTransform)
      nameWithType:
        CSharp: ScatterPlot.RectSelection(RectTransform)
        VB: ScatterPlot.RectSelection(RectTransform)
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.RectSelection(RectTransform)
        VB: IVLab.Plotting.ScatterPlot.RectSelection(RectTransform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: RectSelection
        path: ''
        startLine: 2542
      syntax:
        content:
          CSharp: public override void RectSelection(RectTransform selectionRect)
          VB: Public Overrides Sub RectSelection(selectionRect As RectTransform)
        parameters:
        - id: selectionRect
          type: Global.RectTransform
      overload: IVLab.Plotting.ScatterPlot.RectSelection*
      overridden: IVLab.Plotting.DataPlot.RectSelection(RectTransform)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ScatterPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
      commentId: M:IVLab.Plotting.ScatterPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
      language: CSharp
      name:
        CSharp: BrushSelection(Vector2, Vector2, SelectionMode.State)
        VB: BrushSelection(Vector2, Vector2, SelectionMode.State)
      nameWithType:
        CSharp: ScatterPlot.BrushSelection(Vector2, Vector2, SelectionMode.State)
        VB: ScatterPlot.BrushSelection(Vector2, Vector2, SelectionMode.State)
      qualifiedName:
        CSharp: IVLab.Plotting.ScatterPlot.BrushSelection(Vector2, Vector2, IVLab.Plotting.SelectionMode.State)
        VB: IVLab.Plotting.ScatterPlot.BrushSelection(Vector2, Vector2, IVLab.Plotting.SelectionMode.State)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: BrushSelection
        path: ''
        startLine: 2566
      syntax:
        content:
          CSharp: public override void BrushSelection(Vector2 prevBrushPosition, Vector2 brushDelta, SelectionMode.State selectionState)
          VB: Public Overrides Sub BrushSelection(prevBrushPosition As Vector2, brushDelta As Vector2, selectionState As SelectionMode.State)
        parameters:
        - id: prevBrushPosition
          type: Global.Vector2
        - id: brushDelta
          type: Global.Vector2
        - id: selectionState
          type: IVLab.Plotting.SelectionMode.State
      overload: IVLab.Plotting.ScatterPlot.BrushSelection*
      overridden: IVLab.Plotting.DataPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    references:
      IVLab.Plotting.DataPlot: 
  - id: IVLab.Plotting.BrushSelectionMode
    commentId: T:IVLab.Plotting.BrushSelectionMode
    language: CSharp
    name:
      CSharp: BrushSelectionMode
      VB: BrushSelectionMode
    nameWithType:
      CSharp: BrushSelectionMode
      VB: BrushSelectionMode
    qualifiedName:
      CSharp: IVLab.Plotting.BrushSelectionMode
      VB: IVLab.Plotting.BrushSelectionMode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: BrushSelectionMode
      path: ''
      startLine: 2631
    syntax:
      content:
        CSharp: 'public class BrushSelectionMode : SelectionMode'
        VB: >-
          Public Class BrushSelectionMode

              Inherits SelectionMode
    inheritance:
    - System.Object
    - IVLab.Plotting.SelectionMode
    inheritedMembers:
    - IVLab.Plotting.SelectionMode.plotsCamera
    - IVLab.Plotting.SelectionMode.currentDataPlot
    - IVLab.Plotting.SelectionMode.currentPlotRect
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVLab.Plotting.BrushSelectionMode.selectionGraphicsParent
      commentId: F:IVLab.Plotting.BrushSelectionMode.selectionGraphicsParent
      language: CSharp
      name:
        CSharp: selectionGraphicsParent
        VB: selectionGraphicsParent
      nameWithType:
        CSharp: BrushSelectionMode.selectionGraphicsParent
        VB: BrushSelectionMode.selectionGraphicsParent
      qualifiedName:
        CSharp: IVLab.Plotting.BrushSelectionMode.selectionGraphicsParent
        VB: IVLab.Plotting.BrushSelectionMode.selectionGraphicsParent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: selectionGraphicsParent
        path: ''
        startLine: 2635
      syntax:
        content:
          CSharp: protected Transform selectionGraphicsParent
          VB: Protected selectionGraphicsParent As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.BrushSelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
      commentId: M:IVLab.Plotting.BrushSelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
      language: CSharp
      name:
        CSharp: StartSelection(DataPlot, Vector2)
        VB: StartSelection(DataPlot, Vector2)
      nameWithType:
        CSharp: BrushSelectionMode.StartSelection(DataPlot, Vector2)
        VB: BrushSelectionMode.StartSelection(DataPlot, Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.BrushSelectionMode.StartSelection(IVLab.Plotting.DataPlot, Vector2)
        VB: IVLab.Plotting.BrushSelectionMode.StartSelection(IVLab.Plotting.DataPlot, Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: StartSelection
        path: ''
        startLine: 2643
      syntax:
        content:
          CSharp: public override void StartSelection(DataPlot dataPlot, Vector2 mousePosition)
          VB: Public Overrides Sub StartSelection(dataPlot As DataPlot, mousePosition As Vector2)
        parameters:
        - id: dataPlot
          type: IVLab.Plotting.DataPlot
        - id: mousePosition
          type: Global.Vector2
      overload: IVLab.Plotting.BrushSelectionMode.StartSelection*
      overridden: IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.BrushSelectionMode.UpdateSelection(Vector2)
      commentId: M:IVLab.Plotting.BrushSelectionMode.UpdateSelection(Vector2)
      language: CSharp
      name:
        CSharp: UpdateSelection(Vector2)
        VB: UpdateSelection(Vector2)
      nameWithType:
        CSharp: BrushSelectionMode.UpdateSelection(Vector2)
        VB: BrushSelectionMode.UpdateSelection(Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.BrushSelectionMode.UpdateSelection(Vector2)
        VB: IVLab.Plotting.BrushSelectionMode.UpdateSelection(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: UpdateSelection
        path: ''
        startLine: 2667
      syntax:
        content:
          CSharp: public override void UpdateSelection(Vector2 mousePosition)
          VB: Public Overrides Sub UpdateSelection(mousePosition As Vector2)
        parameters:
        - id: mousePosition
          type: Global.Vector2
      overload: IVLab.Plotting.BrushSelectionMode.UpdateSelection*
      overridden: IVLab.Plotting.SelectionMode.UpdateSelection(Vector2)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.BrushSelectionMode.EndSelection(Vector2)
      commentId: M:IVLab.Plotting.BrushSelectionMode.EndSelection(Vector2)
      language: CSharp
      name:
        CSharp: EndSelection(Vector2)
        VB: EndSelection(Vector2)
      nameWithType:
        CSharp: BrushSelectionMode.EndSelection(Vector2)
        VB: BrushSelectionMode.EndSelection(Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.BrushSelectionMode.EndSelection(Vector2)
        VB: IVLab.Plotting.BrushSelectionMode.EndSelection(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: EndSelection
        path: ''
        startLine: 2697
      syntax:
        content:
          CSharp: public override void EndSelection(Vector2 mousePosition)
          VB: Public Overrides Sub EndSelection(mousePosition As Vector2)
        parameters:
        - id: mousePosition
          type: Global.Vector2
      overload: IVLab.Plotting.BrushSelectionMode.EndSelection*
      overridden: IVLab.Plotting.SelectionMode.EndSelection(Vector2)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: IVLab.Plotting.ClickSelectionMode
    commentId: T:IVLab.Plotting.ClickSelectionMode
    language: CSharp
    name:
      CSharp: ClickSelectionMode
      VB: ClickSelectionMode
    nameWithType:
      CSharp: ClickSelectionMode
      VB: ClickSelectionMode
    qualifiedName:
      CSharp: IVLab.Plotting.ClickSelectionMode
      VB: IVLab.Plotting.ClickSelectionMode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: ClickSelectionMode
      path: ''
      startLine: 2717
    syntax:
      content:
        CSharp: 'public class ClickSelectionMode : SelectionMode'
        VB: >-
          Public Class ClickSelectionMode

              Inherits SelectionMode
    inheritance:
    - System.Object
    - IVLab.Plotting.SelectionMode
    inheritedMembers:
    - IVLab.Plotting.SelectionMode.plotsCamera
    - IVLab.Plotting.SelectionMode.currentDataPlot
    - IVLab.Plotting.SelectionMode.currentPlotRect
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVLab.Plotting.ClickSelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
      commentId: M:IVLab.Plotting.ClickSelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
      language: CSharp
      name:
        CSharp: StartSelection(DataPlot, Vector2)
        VB: StartSelection(DataPlot, Vector2)
      nameWithType:
        CSharp: ClickSelectionMode.StartSelection(DataPlot, Vector2)
        VB: ClickSelectionMode.StartSelection(DataPlot, Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.ClickSelectionMode.StartSelection(IVLab.Plotting.DataPlot, Vector2)
        VB: IVLab.Plotting.ClickSelectionMode.StartSelection(IVLab.Plotting.DataPlot, Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: StartSelection
        path: ''
        startLine: 2724
      syntax:
        content:
          CSharp: public override void StartSelection(DataPlot dataPlot, Vector2 mousePosition)
          VB: Public Overrides Sub StartSelection(dataPlot As DataPlot, mousePosition As Vector2)
        parameters:
        - id: dataPlot
          type: IVLab.Plotting.DataPlot
        - id: mousePosition
          type: Global.Vector2
      overload: IVLab.Plotting.ClickSelectionMode.StartSelection*
      overridden: IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ClickSelectionMode.UpdateSelection(Vector2)
      commentId: M:IVLab.Plotting.ClickSelectionMode.UpdateSelection(Vector2)
      language: CSharp
      name:
        CSharp: UpdateSelection(Vector2)
        VB: UpdateSelection(Vector2)
      nameWithType:
        CSharp: ClickSelectionMode.UpdateSelection(Vector2)
        VB: ClickSelectionMode.UpdateSelection(Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.ClickSelectionMode.UpdateSelection(Vector2)
        VB: IVLab.Plotting.ClickSelectionMode.UpdateSelection(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: UpdateSelection
        path: ''
        startLine: 2742
      syntax:
        content:
          CSharp: public override void UpdateSelection(Vector2 mousePosition)
          VB: Public Overrides Sub UpdateSelection(mousePosition As Vector2)
        parameters:
        - id: mousePosition
          type: Global.Vector2
      overload: IVLab.Plotting.ClickSelectionMode.UpdateSelection*
      overridden: IVLab.Plotting.SelectionMode.UpdateSelection(Vector2)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.ClickSelectionMode.EndSelection(Vector2)
      commentId: M:IVLab.Plotting.ClickSelectionMode.EndSelection(Vector2)
      language: CSharp
      name:
        CSharp: EndSelection(Vector2)
        VB: EndSelection(Vector2)
      nameWithType:
        CSharp: ClickSelectionMode.EndSelection(Vector2)
        VB: ClickSelectionMode.EndSelection(Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.ClickSelectionMode.EndSelection(Vector2)
        VB: IVLab.Plotting.ClickSelectionMode.EndSelection(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: EndSelection
        path: ''
        startLine: 2757
      syntax:
        content:
          CSharp: public override void EndSelection(Vector2 mousePosition)
          VB: Public Overrides Sub EndSelection(mousePosition As Vector2)
        parameters:
        - id: mousePosition
          type: Global.Vector2
      overload: IVLab.Plotting.ClickSelectionMode.EndSelection*
      overridden: IVLab.Plotting.SelectionMode.EndSelection(Vector2)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: IVLab.Plotting.RectSelectionMode
    commentId: T:IVLab.Plotting.RectSelectionMode
    language: CSharp
    name:
      CSharp: RectSelectionMode
      VB: RectSelectionMode
    nameWithType:
      CSharp: RectSelectionMode
      VB: RectSelectionMode
    qualifiedName:
      CSharp: IVLab.Plotting.RectSelectionMode
      VB: IVLab.Plotting.RectSelectionMode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: RectSelectionMode
      path: ''
      startLine: 2770
    syntax:
      content:
        CSharp: 'public class RectSelectionMode : SelectionMode'
        VB: >-
          Public Class RectSelectionMode

              Inherits SelectionMode
    inheritance:
    - System.Object
    - IVLab.Plotting.SelectionMode
    inheritedMembers:
    - IVLab.Plotting.SelectionMode.plotsCamera
    - IVLab.Plotting.SelectionMode.currentDataPlot
    - IVLab.Plotting.SelectionMode.currentPlotRect
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: IVLab.Plotting.RectSelectionMode.selectionGraphicsParent
      commentId: F:IVLab.Plotting.RectSelectionMode.selectionGraphicsParent
      language: CSharp
      name:
        CSharp: selectionGraphicsParent
        VB: selectionGraphicsParent
      nameWithType:
        CSharp: RectSelectionMode.selectionGraphicsParent
        VB: RectSelectionMode.selectionGraphicsParent
      qualifiedName:
        CSharp: IVLab.Plotting.RectSelectionMode.selectionGraphicsParent
        VB: IVLab.Plotting.RectSelectionMode.selectionGraphicsParent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: selectionGraphicsParent
        path: ''
        startLine: 2775
      syntax:
        content:
          CSharp: protected Transform selectionGraphicsParent
          VB: Protected selectionGraphicsParent As Transform
        return:
          type: Global.Transform
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.RectSelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
      commentId: M:IVLab.Plotting.RectSelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
      language: CSharp
      name:
        CSharp: StartSelection(DataPlot, Vector2)
        VB: StartSelection(DataPlot, Vector2)
      nameWithType:
        CSharp: RectSelectionMode.StartSelection(DataPlot, Vector2)
        VB: RectSelectionMode.StartSelection(DataPlot, Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.RectSelectionMode.StartSelection(IVLab.Plotting.DataPlot, Vector2)
        VB: IVLab.Plotting.RectSelectionMode.StartSelection(IVLab.Plotting.DataPlot, Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: StartSelection
        path: ''
        startLine: 2781
      syntax:
        content:
          CSharp: public override void StartSelection(DataPlot dataPlot, Vector2 mousePosition)
          VB: Public Overrides Sub StartSelection(dataPlot As DataPlot, mousePosition As Vector2)
        parameters:
        - id: dataPlot
          type: IVLab.Plotting.DataPlot
        - id: mousePosition
          type: Global.Vector2
      overload: IVLab.Plotting.RectSelectionMode.StartSelection*
      overridden: IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.RectSelectionMode.UpdateSelection(Vector2)
      commentId: M:IVLab.Plotting.RectSelectionMode.UpdateSelection(Vector2)
      language: CSharp
      name:
        CSharp: UpdateSelection(Vector2)
        VB: UpdateSelection(Vector2)
      nameWithType:
        CSharp: RectSelectionMode.UpdateSelection(Vector2)
        VB: RectSelectionMode.UpdateSelection(Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.RectSelectionMode.UpdateSelection(Vector2)
        VB: IVLab.Plotting.RectSelectionMode.UpdateSelection(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: UpdateSelection
        path: ''
        startLine: 2810
      syntax:
        content:
          CSharp: public override void UpdateSelection(Vector2 mousePosition)
          VB: Public Overrides Sub UpdateSelection(mousePosition As Vector2)
        parameters:
        - id: mousePosition
          type: Global.Vector2
      overload: IVLab.Plotting.RectSelectionMode.UpdateSelection*
      overridden: IVLab.Plotting.SelectionMode.UpdateSelection(Vector2)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: IVLab.Plotting.RectSelectionMode.EndSelection(Vector2)
      commentId: M:IVLab.Plotting.RectSelectionMode.EndSelection(Vector2)
      language: CSharp
      name:
        CSharp: EndSelection(Vector2)
        VB: EndSelection(Vector2)
      nameWithType:
        CSharp: RectSelectionMode.EndSelection(Vector2)
        VB: RectSelectionMode.EndSelection(Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.RectSelectionMode.EndSelection(Vector2)
        VB: IVLab.Plotting.RectSelectionMode.EndSelection(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: EndSelection
        path: ''
        startLine: 2835
      syntax:
        content:
          CSharp: public override void EndSelection(Vector2 mousePosition)
          VB: Public Overrides Sub EndSelection(mousePosition As Vector2)
        parameters:
        - id: mousePosition
          type: Global.Vector2
      overload: IVLab.Plotting.RectSelectionMode.EndSelection*
      overridden: IVLab.Plotting.SelectionMode.EndSelection(Vector2)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: IVLab.Plotting.SelectionMode
    commentId: T:IVLab.Plotting.SelectionMode
    language: CSharp
    name:
      CSharp: SelectionMode
      VB: SelectionMode
    nameWithType:
      CSharp: SelectionMode
      VB: SelectionMode
    qualifiedName:
      CSharp: IVLab.Plotting.SelectionMode
      VB: IVLab.Plotting.SelectionMode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: SelectionMode
      path: ''
      startLine: 2856
    summary: "\nAbstract class which declares variables and methods ubiquitous to all possible selection modes.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class SelectionMode : MonoBehaviour'
        VB: >-
          Public MustInherit Class SelectionMode

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: IVLab.Plotting.SelectionMode.plotsCamera
      commentId: F:IVLab.Plotting.SelectionMode.plotsCamera
      language: CSharp
      name:
        CSharp: plotsCamera
        VB: plotsCamera
      nameWithType:
        CSharp: SelectionMode.plotsCamera
        VB: SelectionMode.plotsCamera
      qualifiedName:
        CSharp: IVLab.Plotting.SelectionMode.plotsCamera
        VB: IVLab.Plotting.SelectionMode.plotsCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: plotsCamera
        path: ''
        startLine: 2860
      syntax:
        content:
          CSharp: protected Camera plotsCamera
          VB: Protected plotsCamera As Camera
        return:
          type: Global.Camera
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.SelectionMode.currentDataPlot
      commentId: F:IVLab.Plotting.SelectionMode.currentDataPlot
      language: CSharp
      name:
        CSharp: currentDataPlot
        VB: currentDataPlot
      nameWithType:
        CSharp: SelectionMode.currentDataPlot
        VB: SelectionMode.currentDataPlot
      qualifiedName:
        CSharp: IVLab.Plotting.SelectionMode.currentDataPlot
        VB: IVLab.Plotting.SelectionMode.currentDataPlot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: currentDataPlot
        path: ''
        startLine: 2862
      summary: 'Data plot the selection is currently acting on. '
      example: []
      syntax:
        content:
          CSharp: protected DataPlot currentDataPlot
          VB: Protected currentDataPlot As DataPlot
        return:
          type: IVLab.Plotting.DataPlot
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.SelectionMode.currentPlotRect
      commentId: F:IVLab.Plotting.SelectionMode.currentPlotRect
      language: CSharp
      name:
        CSharp: currentPlotRect
        VB: currentPlotRect
      nameWithType:
        CSharp: SelectionMode.currentPlotRect
        VB: SelectionMode.currentPlotRect
      qualifiedName:
        CSharp: IVLab.Plotting.SelectionMode.currentPlotRect
        VB: IVLab.Plotting.SelectionMode.currentPlotRect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: currentPlotRect
        path: ''
        startLine: 2864
      summary: 'Rect transform of the current data plot. '
      example: []
      syntax:
        content:
          CSharp: protected RectTransform currentPlotRect
          VB: Protected currentPlotRect As RectTransform
        return:
          type: Global.RectTransform
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
      commentId: M:IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
      language: CSharp
      name:
        CSharp: StartSelection(DataPlot, Vector2)
        VB: StartSelection(DataPlot, Vector2)
      nameWithType:
        CSharp: SelectionMode.StartSelection(DataPlot, Vector2)
        VB: SelectionMode.StartSelection(DataPlot, Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot, Vector2)
        VB: IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot, Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: StartSelection
        path: ''
        startLine: 2871
      summary: "\nGrants the selection a reference to the data plot it is acting on, and begins performing the selection.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void StartSelection(DataPlot dataPlot, Vector2 mousePosition)
          VB: Public MustOverride Sub StartSelection(dataPlot As DataPlot, mousePosition As Vector2)
        parameters:
        - id: dataPlot
          type: IVLab.Plotting.DataPlot
          description: Data plot the selection is now acting on.
        - id: mousePosition
          type: Global.Vector2
          description: Current mouse position in pixel coordinates (as from Input.mousePosition).
      overload: IVLab.Plotting.SelectionMode.StartSelection*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IVLab.Plotting.SelectionMode.UpdateSelection(Vector2)
      commentId: M:IVLab.Plotting.SelectionMode.UpdateSelection(Vector2)
      language: CSharp
      name:
        CSharp: UpdateSelection(Vector2)
        VB: UpdateSelection(Vector2)
      nameWithType:
        CSharp: SelectionMode.UpdateSelection(Vector2)
        VB: SelectionMode.UpdateSelection(Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.SelectionMode.UpdateSelection(Vector2)
        VB: IVLab.Plotting.SelectionMode.UpdateSelection(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: UpdateSelection
        path: ''
        startLine: 2877
      summary: "\nUpdates the selection based on mouse position.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void UpdateSelection(Vector2 mousePosition)
          VB: Public MustOverride Sub UpdateSelection(mousePosition As Vector2)
        parameters:
        - id: mousePosition
          type: Global.Vector2
          description: Current mouse position in pixel coordinates (as from Input.mousePosition).
      overload: IVLab.Plotting.SelectionMode.UpdateSelection*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: IVLab.Plotting.SelectionMode.EndSelection(Vector2)
      commentId: M:IVLab.Plotting.SelectionMode.EndSelection(Vector2)
      language: CSharp
      name:
        CSharp: EndSelection(Vector2)
        VB: EndSelection(Vector2)
      nameWithType:
        CSharp: SelectionMode.EndSelection(Vector2)
        VB: SelectionMode.EndSelection(Vector2)
      qualifiedName:
        CSharp: IVLab.Plotting.SelectionMode.EndSelection(Vector2)
        VB: IVLab.Plotting.SelectionMode.EndSelection(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: EndSelection
        path: ''
        startLine: 2883
      summary: "\nFinalizes the selection based on mouse position.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void EndSelection(Vector2 mousePosition)
          VB: Public MustOverride Sub EndSelection(mousePosition As Vector2)
        parameters:
        - id: mousePosition
          type: Global.Vector2
          description: Current mouse position in pixel coordinates (as from Input.mousePosition).
      overload: IVLab.Plotting.SelectionMode.EndSelection*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: IVLab.Plotting.SelectionMode.State
    commentId: T:IVLab.Plotting.SelectionMode.State
    language: CSharp
    name:
      CSharp: SelectionMode.State
      VB: SelectionMode.State
    nameWithType:
      CSharp: SelectionMode.State
      VB: SelectionMode.State
    qualifiedName:
      CSharp: IVLab.Plotting.SelectionMode.State
      VB: IVLab.Plotting.SelectionMode.State
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: IVLab.Plotting
    source:
      id: State
      path: ''
      startLine: 2888
    summary: "\nSelection states.\n"
    example: []
    syntax:
      content:
        CSharp: public enum State
        VB: Public Enum State
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: IVLab.Plotting.SelectionMode.State.Start
      commentId: F:IVLab.Plotting.SelectionMode.State.Start
      language: CSharp
      name:
        CSharp: Start
        VB: Start
      nameWithType:
        CSharp: SelectionMode.State.Start
        VB: SelectionMode.State.Start
      qualifiedName:
        CSharp: IVLab.Plotting.SelectionMode.State.Start
        VB: IVLab.Plotting.SelectionMode.State.Start
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Start
        path: ''
        startLine: 2891
      summary: 'Selection has just started. Could be used in <xref href="IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot%2cVector2)" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: Start = 0
          VB: Start = 0
        return:
          type: IVLab.Plotting.SelectionMode.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
      references:
        IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2): 
    - id: IVLab.Plotting.SelectionMode.State.Update
      commentId: F:IVLab.Plotting.SelectionMode.State.Update
      language: CSharp
      name:
        CSharp: Update
        VB: Update
      nameWithType:
        CSharp: SelectionMode.State.Update
        VB: SelectionMode.State.Update
      qualifiedName:
        CSharp: IVLab.Plotting.SelectionMode.State.Update
        VB: IVLab.Plotting.SelectionMode.State.Update
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: Update
        path: ''
        startLine: 2893
      summary: 'Selection is updating. Could be used in <xref href="IVLab.Plotting.SelectionMode.UpdateSelection(Vector2)" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: Update = 1
          VB: Update = 1
        return:
          type: IVLab.Plotting.SelectionMode.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
      references:
        IVLab.Plotting.SelectionMode.UpdateSelection(Vector2): 
    - id: IVLab.Plotting.SelectionMode.State.End
      commentId: F:IVLab.Plotting.SelectionMode.State.End
      language: CSharp
      name:
        CSharp: End
        VB: End
      nameWithType:
        CSharp: SelectionMode.State.End
        VB: SelectionMode.State.End
      qualifiedName:
        CSharp: IVLab.Plotting.SelectionMode.State.End
        VB: IVLab.Plotting.SelectionMode.State.End
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: IVLab.Plotting
      source:
        id: End
        path: ''
        startLine: 2895
      summary: 'Selection has just ended. Could be used in <xref href="IVLab.Plotting.SelectionMode.EndSelection(Vector2)" data-throw-if-not-resolved="false"></xref>. '
      example: []
      syntax:
        content:
          CSharp: End = 2
          VB: End = 2
        return:
          type: IVLab.Plotting.SelectionMode.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
      references:
        IVLab.Plotting.SelectionMode.EndSelection(Vector2): 
references:
  IVLab.Plotting.LinkedData:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedData
        name: LinkedData
        nameWithType: LinkedData
        qualifiedName: IVLab.Plotting.LinkedData
      VB:
      - id: IVLab.Plotting.LinkedData
        name: LinkedData
        nameWithType: LinkedData
        qualifiedName: IVLab.Plotting.LinkedData
    isDefinition: true
    parent: IVLab.Plotting
    commentId: T:IVLab.Plotting.LinkedData
  IVLab.Plotting:
    name:
      CSharp:
      - name: IVLab.Plotting
        nameWithType: IVLab.Plotting
        qualifiedName: IVLab.Plotting
      VB:
      - name: IVLab.Plotting
        nameWithType: IVLab.Plotting
        qualifiedName: IVLab.Plotting
    isDefinition: true
    commentId: N:IVLab.Plotting
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  IVLab.Plotting.LinkedIndices.LinkedAttributes:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes
        name: LinkedIndices.LinkedAttributes
        nameWithType: LinkedIndices.LinkedAttributes
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes
      VB:
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes
        name: LinkedIndices.LinkedAttributes
        nameWithType: LinkedIndices.LinkedAttributes
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes
    isDefinition: true
    parent: IVLab.Plotting
    commentId: T:IVLab.Plotting.LinkedIndices.LinkedAttributes
  IVLab.Plotting.LinkedData.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes):
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedData.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
        name: UpdateDataPoint
        nameWithType: LinkedData.UpdateDataPoint
        qualifiedName: IVLab.Plotting.LinkedData.UpdateDataPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes
        name: LinkedIndices.LinkedAttributes
        nameWithType: LinkedIndices.LinkedAttributes
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.LinkedData.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
        name: UpdateDataPoint
        nameWithType: LinkedData.UpdateDataPoint
        qualifiedName: IVLab.Plotting.LinkedData.UpdateDataPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes
        name: LinkedIndices.LinkedAttributes
        nameWithType: LinkedIndices.LinkedAttributes
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.LinkedData
    commentId: M:IVLab.Plotting.LinkedData.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
  IVLab.Plotting.LinkedDataExample.UpdateDataPoint*:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedDataExample.UpdateDataPoint*
        name: UpdateDataPoint
        nameWithType: LinkedDataExample.UpdateDataPoint
        qualifiedName: IVLab.Plotting.LinkedDataExample.UpdateDataPoint
      VB:
      - id: IVLab.Plotting.LinkedDataExample.UpdateDataPoint*
        name: UpdateDataPoint
        nameWithType: LinkedDataExample.UpdateDataPoint
        qualifiedName: IVLab.Plotting.LinkedDataExample.UpdateDataPoint
    isDefinition: true
    commentId: Overload:IVLab.Plotting.LinkedDataExample.UpdateDataPoint
  IVLab.Plotting.LinkedDataExample:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedDataExample
        name: LinkedDataExample
        nameWithType: LinkedDataExample
        qualifiedName: IVLab.Plotting.LinkedDataExample
      VB:
      - id: IVLab.Plotting.LinkedDataExample
        name: LinkedDataExample
        nameWithType: LinkedDataExample
        qualifiedName: IVLab.Plotting.LinkedDataExample
    isDefinition: true
    commentId: T:IVLab.Plotting.LinkedDataExample
  IVLab.Plotting.LinkedData.UpdateDataPoint*:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedData.UpdateDataPoint*
        name: UpdateDataPoint
        nameWithType: LinkedData.UpdateDataPoint
        qualifiedName: IVLab.Plotting.LinkedData.UpdateDataPoint
      VB:
      - id: IVLab.Plotting.LinkedData.UpdateDataPoint*
        name: UpdateDataPoint
        nameWithType: LinkedData.UpdateDataPoint
        qualifiedName: IVLab.Plotting.LinkedData.UpdateDataPoint
    isDefinition: true
    commentId: Overload:IVLab.Plotting.LinkedData.UpdateDataPoint
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  IVLab.Plotting.LinkedIndices.#ctor*:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedIndices.#ctor*
        name: LinkedIndices
        nameWithType: LinkedIndices.LinkedIndices
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedIndices
      VB:
      - id: IVLab.Plotting.LinkedIndices.#ctor*
        name: LinkedIndices
        nameWithType: LinkedIndices.LinkedIndices
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedIndices
    isDefinition: true
    commentId: Overload:IVLab.Plotting.LinkedIndices.#ctor
  IVLab.Plotting.LinkedIndices._size:
    commentId: F:IVLab.Plotting.LinkedIndices._size
  IVLab.Plotting.LinkedIndices.Size*:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedIndices.Size*
        name: Size
        nameWithType: LinkedIndices.Size
        qualifiedName: IVLab.Plotting.LinkedIndices.Size
      VB:
      - id: IVLab.Plotting.LinkedIndices.Size*
        name: Size
        nameWithType: LinkedIndices.Size
        qualifiedName: IVLab.Plotting.LinkedIndices.Size
    isDefinition: true
    commentId: Overload:IVLab.Plotting.LinkedIndices.Size
  IVLab.Plotting.LinkedIndices._linkedAttributesChanged:
    commentId: F:IVLab.Plotting.LinkedIndices._linkedAttributesChanged
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  IVLab.Plotting.LinkedIndices.LinkedAttributesChanged*:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributesChanged*
        name: LinkedAttributesChanged
        nameWithType: LinkedIndices.LinkedAttributesChanged
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributesChanged
      VB:
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributesChanged*
        name: LinkedAttributesChanged
        nameWithType: LinkedIndices.LinkedAttributesChanged
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributesChanged
    isDefinition: true
    commentId: Overload:IVLab.Plotting.LinkedIndices.LinkedAttributesChanged
  IVLab.Plotting.LinkedIndices.Item*:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedIndices.Item*
        name: Item
        nameWithType: LinkedIndices.Item
        qualifiedName: IVLab.Plotting.LinkedIndices.Item
      VB:
      - id: IVLab.Plotting.LinkedIndices.Item*
        name: Item
        nameWithType: LinkedIndices.Item
        qualifiedName: IVLab.Plotting.LinkedIndices.Item
    isDefinition: true
    commentId: Overload:IVLab.Plotting.LinkedIndices.Item
  IVLab.Plotting.LinkedIndices:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedIndices
        name: LinkedIndices
        nameWithType: LinkedIndices
        qualifiedName: IVLab.Plotting.LinkedIndices
      VB:
      - id: IVLab.Plotting.LinkedIndices
        name: LinkedIndices
        nameWithType: LinkedIndices
        qualifiedName: IVLab.Plotting.LinkedIndices
    isDefinition: true
    parent: IVLab.Plotting
    commentId: T:IVLab.Plotting.LinkedIndices
  IVLab.Plotting.LinkedIndices.LinkedAttributes.#ctor*:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes.#ctor*
        name: LinkedAttributes
        nameWithType: LinkedIndices.LinkedAttributes.LinkedAttributes
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributes
      VB:
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes.#ctor*
        name: LinkedAttributes
        nameWithType: LinkedIndices.LinkedAttributes.LinkedAttributes
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributes
    isDefinition: true
    commentId: Overload:IVLab.Plotting.LinkedIndices.LinkedAttributes.#ctor
  IVLab.Plotting.LinkedIndices.LinkedAttributes._highlighted:
    commentId: F:IVLab.Plotting.LinkedIndices.LinkedAttributes._highlighted
  IVLab.Plotting.LinkedIndices.LinkedAttributes._linkedAttributeChanged:
    commentId: F:IVLab.Plotting.LinkedIndices.LinkedAttributes._linkedAttributeChanged
  IVLab.Plotting.LinkedIndices.LinkedAttributes.Highlighted*:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes.Highlighted*
        name: Highlighted
        nameWithType: LinkedIndices.LinkedAttributes.Highlighted
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes.Highlighted
      VB:
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes.Highlighted*
        name: Highlighted
        nameWithType: LinkedIndices.LinkedAttributes.Highlighted
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes.Highlighted
    isDefinition: true
    commentId: Overload:IVLab.Plotting.LinkedIndices.LinkedAttributes.Highlighted
  IVLab.Plotting.LinkedIndices.LinkedAttributes._masked:
    commentId: F:IVLab.Plotting.LinkedIndices.LinkedAttributes._masked
  IVLab.Plotting.LinkedIndices.LinkedAttributes.Masked*:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes.Masked*
        name: Masked
        nameWithType: LinkedIndices.LinkedAttributes.Masked
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes.Masked
      VB:
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes.Masked*
        name: Masked
        nameWithType: LinkedIndices.LinkedAttributes.Masked
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes.Masked
    isDefinition: true
    commentId: Overload:IVLab.Plotting.LinkedIndices.LinkedAttributes.Masked
  IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributeChanged*:
    name:
      CSharp:
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributeChanged*
        name: LinkedAttributeChanged
        nameWithType: LinkedIndices.LinkedAttributes.LinkedAttributeChanged
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributeChanged
      VB:
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributeChanged*
        name: LinkedAttributeChanged
        nameWithType: LinkedIndices.LinkedAttributes.LinkedAttributeChanged
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributeChanged
    isDefinition: true
    commentId: Overload:IVLab.Plotting.LinkedIndices.LinkedAttributes.LinkedAttributeChanged
  IVLab.Plotting.SplitViewController:
    name:
      CSharp:
      - id: IVLab.Plotting.SplitViewController
        name: SplitViewController
        nameWithType: SplitViewController
        qualifiedName: IVLab.Plotting.SplitViewController
      VB:
      - id: IVLab.Plotting.SplitViewController
        name: SplitViewController
        nameWithType: SplitViewController
        qualifiedName: IVLab.Plotting.SplitViewController
    isDefinition: true
    commentId: T:IVLab.Plotting.SplitViewController
  IVLab.Plotting.ScatterPlot:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot
        name: ScatterPlot
        nameWithType: ScatterPlot
        qualifiedName: IVLab.Plotting.ScatterPlot
      VB:
      - id: IVLab.Plotting.ScatterPlot
        name: ScatterPlot
        nameWithType: ScatterPlot
        qualifiedName: IVLab.Plotting.ScatterPlot
    isDefinition: true
    parent: IVLab.Plotting
    commentId: T:IVLab.Plotting.ScatterPlot
  IVLab.Plotting.ScatterPlot.pointSize:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.pointSize
        name: pointSize
        nameWithType: ScatterPlot.pointSize
        qualifiedName: IVLab.Plotting.ScatterPlot.pointSize
      VB:
      - id: IVLab.Plotting.ScatterPlot.pointSize
        name: pointSize
        nameWithType: ScatterPlot.pointSize
        qualifiedName: IVLab.Plotting.ScatterPlot.pointSize
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.pointSize
  IVLab.Plotting.ScatterPlot.scaleToOrigin:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.scaleToOrigin
        name: scaleToOrigin
        nameWithType: ScatterPlot.scaleToOrigin
        qualifiedName: IVLab.Plotting.ScatterPlot.scaleToOrigin
      VB:
      - id: IVLab.Plotting.ScatterPlot.scaleToOrigin
        name: scaleToOrigin
        nameWithType: ScatterPlot.scaleToOrigin
        qualifiedName: IVLab.Plotting.ScatterPlot.scaleToOrigin
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.scaleToOrigin
  IVLab.Plotting.ScatterPlot.plotParticleSystemPrefab:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.plotParticleSystemPrefab
        name: plotParticleSystemPrefab
        nameWithType: ScatterPlot.plotParticleSystemPrefab
        qualifiedName: IVLab.Plotting.ScatterPlot.plotParticleSystemPrefab
      VB:
      - id: IVLab.Plotting.ScatterPlot.plotParticleSystemPrefab
        name: plotParticleSystemPrefab
        nameWithType: ScatterPlot.plotParticleSystemPrefab
        qualifiedName: IVLab.Plotting.ScatterPlot.plotParticleSystemPrefab
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.plotParticleSystemPrefab
  IVLab.Plotting.ScatterPlot.axisLabelPrefab:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.axisLabelPrefab
        name: axisLabelPrefab
        nameWithType: ScatterPlot.axisLabelPrefab
        qualifiedName: IVLab.Plotting.ScatterPlot.axisLabelPrefab
      VB:
      - id: IVLab.Plotting.ScatterPlot.axisLabelPrefab
        name: axisLabelPrefab
        nameWithType: ScatterPlot.axisLabelPrefab
        qualifiedName: IVLab.Plotting.ScatterPlot.axisLabelPrefab
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.axisLabelPrefab
  IVLab.Plotting.ScatterPlot.xDropdown:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.xDropdown
        name: xDropdown
        nameWithType: ScatterPlot.xDropdown
        qualifiedName: IVLab.Plotting.ScatterPlot.xDropdown
      VB:
      - id: IVLab.Plotting.ScatterPlot.xDropdown
        name: xDropdown
        nameWithType: ScatterPlot.xDropdown
        qualifiedName: IVLab.Plotting.ScatterPlot.xDropdown
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.xDropdown
  IVLab.Plotting.ScatterPlot.yDropdown:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.yDropdown
        name: yDropdown
        nameWithType: ScatterPlot.yDropdown
        qualifiedName: IVLab.Plotting.ScatterPlot.yDropdown
      VB:
      - id: IVLab.Plotting.ScatterPlot.yDropdown
        name: yDropdown
        nameWithType: ScatterPlot.yDropdown
        qualifiedName: IVLab.Plotting.ScatterPlot.yDropdown
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.yDropdown
  IVLab.Plotting.ScatterPlot.dropdownCanvas:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.dropdownCanvas
        name: dropdownCanvas
        nameWithType: ScatterPlot.dropdownCanvas
        qualifiedName: IVLab.Plotting.ScatterPlot.dropdownCanvas
      VB:
      - id: IVLab.Plotting.ScatterPlot.dropdownCanvas
        name: dropdownCanvas
        nameWithType: ScatterPlot.dropdownCanvas
        qualifiedName: IVLab.Plotting.ScatterPlot.dropdownCanvas
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.dropdownCanvas
  IVLab.Plotting.ScatterPlot.plotParticlesParent:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.plotParticlesParent
        name: plotParticlesParent
        nameWithType: ScatterPlot.plotParticlesParent
        qualifiedName: IVLab.Plotting.ScatterPlot.plotParticlesParent
      VB:
      - id: IVLab.Plotting.ScatterPlot.plotParticlesParent
        name: plotParticlesParent
        nameWithType: ScatterPlot.plotParticlesParent
        qualifiedName: IVLab.Plotting.ScatterPlot.plotParticlesParent
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.plotParticlesParent
  IVLab.Plotting.ScatterPlot.axisLabelsParent:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.axisLabelsParent
        name: axisLabelsParent
        nameWithType: ScatterPlot.axisLabelsParent
        qualifiedName: IVLab.Plotting.ScatterPlot.axisLabelsParent
      VB:
      - id: IVLab.Plotting.ScatterPlot.axisLabelsParent
        name: axisLabelsParent
        nameWithType: ScatterPlot.axisLabelsParent
        qualifiedName: IVLab.Plotting.ScatterPlot.axisLabelsParent
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.axisLabelsParent
  IVLab.Plotting.ScatterPlot.xAxisLabel:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.xAxisLabel
        name: xAxisLabel
        nameWithType: ScatterPlot.xAxisLabel
        qualifiedName: IVLab.Plotting.ScatterPlot.xAxisLabel
      VB:
      - id: IVLab.Plotting.ScatterPlot.xAxisLabel
        name: xAxisLabel
        nameWithType: ScatterPlot.xAxisLabel
        qualifiedName: IVLab.Plotting.ScatterPlot.xAxisLabel
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.xAxisLabel
  IVLab.Plotting.ScatterPlot.yAxisLabel:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.yAxisLabel
        name: yAxisLabel
        nameWithType: ScatterPlot.yAxisLabel
        qualifiedName: IVLab.Plotting.ScatterPlot.yAxisLabel
      VB:
      - id: IVLab.Plotting.ScatterPlot.yAxisLabel
        name: yAxisLabel
        nameWithType: ScatterPlot.yAxisLabel
        qualifiedName: IVLab.Plotting.ScatterPlot.yAxisLabel
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.yAxisLabel
  IVLab.Plotting.ScatterPlot.xColumnIdx:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.xColumnIdx
        name: xColumnIdx
        nameWithType: ScatterPlot.xColumnIdx
        qualifiedName: IVLab.Plotting.ScatterPlot.xColumnIdx
      VB:
      - id: IVLab.Plotting.ScatterPlot.xColumnIdx
        name: xColumnIdx
        nameWithType: ScatterPlot.xColumnIdx
        qualifiedName: IVLab.Plotting.ScatterPlot.xColumnIdx
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.xColumnIdx
  IVLab.Plotting.ScatterPlot.yColumnIdx:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.yColumnIdx
        name: yColumnIdx
        nameWithType: ScatterPlot.yColumnIdx
        qualifiedName: IVLab.Plotting.ScatterPlot.yColumnIdx
      VB:
      - id: IVLab.Plotting.ScatterPlot.yColumnIdx
        name: yColumnIdx
        nameWithType: ScatterPlot.yColumnIdx
        qualifiedName: IVLab.Plotting.ScatterPlot.yColumnIdx
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.yColumnIdx
  IVLab.Plotting.ScatterPlot.pointPositions:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.pointPositions
        name: pointPositions
        nameWithType: ScatterPlot.pointPositions
        qualifiedName: IVLab.Plotting.ScatterPlot.pointPositions
      VB:
      - id: IVLab.Plotting.ScatterPlot.pointPositions
        name: pointPositions
        nameWithType: ScatterPlot.pointPositions
        qualifiedName: IVLab.Plotting.ScatterPlot.pointPositions
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.pointPositions
  IVLab.Plotting.ScatterPlot.plotParticleSystem:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.plotParticleSystem
        name: plotParticleSystem
        nameWithType: ScatterPlot.plotParticleSystem
        qualifiedName: IVLab.Plotting.ScatterPlot.plotParticleSystem
      VB:
      - id: IVLab.Plotting.ScatterPlot.plotParticleSystem
        name: plotParticleSystem
        nameWithType: ScatterPlot.plotParticleSystem
        qualifiedName: IVLab.Plotting.ScatterPlot.plotParticleSystem
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.plotParticleSystem
  IVLab.Plotting.ScatterPlot.pointParticles:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.pointParticles
        name: pointParticles
        nameWithType: ScatterPlot.pointParticles
        qualifiedName: IVLab.Plotting.ScatterPlot.pointParticles
      VB:
      - id: IVLab.Plotting.ScatterPlot.pointParticles
        name: pointParticles
        nameWithType: ScatterPlot.pointParticles
        qualifiedName: IVLab.Plotting.ScatterPlot.pointParticles
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.pointParticles
  IVLab.Plotting.ScatterPlot.clickedPointIdx:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.clickedPointIdx
        name: clickedPointIdx
        nameWithType: ScatterPlot.clickedPointIdx
        qualifiedName: IVLab.Plotting.ScatterPlot.clickedPointIdx
      VB:
      - id: IVLab.Plotting.ScatterPlot.clickedPointIdx
        name: clickedPointIdx
        nameWithType: ScatterPlot.clickedPointIdx
        qualifiedName: IVLab.Plotting.ScatterPlot.clickedPointIdx
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: F:IVLab.Plotting.ScatterPlot.clickedPointIdx
  IVLab.Plotting.ScatterPlot.SetPlotSize:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.SetPlotSize
        name: SetPlotSize
        nameWithType: ScatterPlot.SetPlotSize
        qualifiedName: IVLab.Plotting.ScatterPlot.SetPlotSize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.ScatterPlot.SetPlotSize
        name: SetPlotSize
        nameWithType: ScatterPlot.SetPlotSize
        qualifiedName: IVLab.Plotting.ScatterPlot.SetPlotSize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: M:IVLab.Plotting.ScatterPlot.SetPlotSize
  IVLab.Plotting.ScatterPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes):
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
        name: UpdateDataPoint
        nameWithType: ScatterPlot.UpdateDataPoint
        qualifiedName: IVLab.Plotting.ScatterPlot.UpdateDataPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes
        name: LinkedIndices.LinkedAttributes
        nameWithType: LinkedIndices.LinkedAttributes
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.ScatterPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
        name: UpdateDataPoint
        nameWithType: ScatterPlot.UpdateDataPoint
        qualifiedName: IVLab.Plotting.ScatterPlot.UpdateDataPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes
        name: LinkedIndices.LinkedAttributes
        nameWithType: LinkedIndices.LinkedAttributes
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: M:IVLab.Plotting.ScatterPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
  IVLab.Plotting.ScatterPlot.RefreshPlotGraphics:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.RefreshPlotGraphics
        name: RefreshPlotGraphics
        nameWithType: ScatterPlot.RefreshPlotGraphics
        qualifiedName: IVLab.Plotting.ScatterPlot.RefreshPlotGraphics
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.ScatterPlot.RefreshPlotGraphics
        name: RefreshPlotGraphics
        nameWithType: ScatterPlot.RefreshPlotGraphics
        qualifiedName: IVLab.Plotting.ScatterPlot.RefreshPlotGraphics
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: M:IVLab.Plotting.ScatterPlot.RefreshPlotGraphics
  IVLab.Plotting.ScatterPlot.Plot:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.Plot
        name: Plot
        nameWithType: ScatterPlot.Plot
        qualifiedName: IVLab.Plotting.ScatterPlot.Plot
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.ScatterPlot.Plot
        name: Plot
        nameWithType: ScatterPlot.Plot
        qualifiedName: IVLab.Plotting.ScatterPlot.Plot
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: M:IVLab.Plotting.ScatterPlot.Plot
  IVLab.Plotting.ScatterPlot.RectSelection(RectTransform):
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.RectSelection(RectTransform)
        name: RectSelection
        nameWithType: ScatterPlot.RectSelection
        qualifiedName: IVLab.Plotting.ScatterPlot.RectSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.ScatterPlot.RectSelection(RectTransform)
        name: RectSelection
        nameWithType: ScatterPlot.RectSelection
        qualifiedName: IVLab.Plotting.ScatterPlot.RectSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: M:IVLab.Plotting.ScatterPlot.RectSelection(RectTransform)
  IVLab.Plotting.DataPlot:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot
        name: DataPlot
        nameWithType: DataPlot
        qualifiedName: IVLab.Plotting.DataPlot
      VB:
      - id: IVLab.Plotting.DataPlot
        name: DataPlot
        nameWithType: DataPlot
        qualifiedName: IVLab.Plotting.DataPlot
    isDefinition: true
    parent: IVLab.Plotting
    commentId: T:IVLab.Plotting.DataPlot
  IVLab.Plotting.DataPlot.outerBounds:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.outerBounds
        name: outerBounds
        nameWithType: DataPlot.outerBounds
        qualifiedName: IVLab.Plotting.DataPlot.outerBounds
      VB:
      - id: IVLab.Plotting.DataPlot.outerBounds
        name: outerBounds
        nameWithType: DataPlot.outerBounds
        qualifiedName: IVLab.Plotting.DataPlot.outerBounds
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.outerBounds
  IVLab.Plotting.DataPlot.innerBounds:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.innerBounds
        name: innerBounds
        nameWithType: DataPlot.innerBounds
        qualifiedName: IVLab.Plotting.DataPlot.innerBounds
      VB:
      - id: IVLab.Plotting.DataPlot.innerBounds
        name: innerBounds
        nameWithType: DataPlot.innerBounds
        qualifiedName: IVLab.Plotting.DataPlot.innerBounds
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.innerBounds
  IVLab.Plotting.DataPlot.padding:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.padding
        name: padding
        nameWithType: DataPlot.padding
        qualifiedName: IVLab.Plotting.DataPlot.padding
      VB:
      - id: IVLab.Plotting.DataPlot.padding
        name: padding
        nameWithType: DataPlot.padding
        qualifiedName: IVLab.Plotting.DataPlot.padding
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.padding
  IVLab.Plotting.DataPlot.defaultColor:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.defaultColor
        name: defaultColor
        nameWithType: DataPlot.defaultColor
        qualifiedName: IVLab.Plotting.DataPlot.defaultColor
      VB:
      - id: IVLab.Plotting.DataPlot.defaultColor
        name: defaultColor
        nameWithType: DataPlot.defaultColor
        qualifiedName: IVLab.Plotting.DataPlot.defaultColor
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.defaultColor
  IVLab.Plotting.DataPlot.highlightedColor:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.highlightedColor
        name: highlightedColor
        nameWithType: DataPlot.highlightedColor
        qualifiedName: IVLab.Plotting.DataPlot.highlightedColor
      VB:
      - id: IVLab.Plotting.DataPlot.highlightedColor
        name: highlightedColor
        nameWithType: DataPlot.highlightedColor
        qualifiedName: IVLab.Plotting.DataPlot.highlightedColor
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.highlightedColor
  IVLab.Plotting.DataPlot.maskedColor:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.maskedColor
        name: maskedColor
        nameWithType: DataPlot.maskedColor
        qualifiedName: IVLab.Plotting.DataPlot.maskedColor
      VB:
      - id: IVLab.Plotting.DataPlot.maskedColor
        name: maskedColor
        nameWithType: DataPlot.maskedColor
        qualifiedName: IVLab.Plotting.DataPlot.maskedColor
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.maskedColor
  IVLab.Plotting.DataPlot.selectionPadding:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.selectionPadding
        name: selectionPadding
        nameWithType: DataPlot.selectionPadding
        qualifiedName: IVLab.Plotting.DataPlot.selectionPadding
      VB:
      - id: IVLab.Plotting.DataPlot.selectionPadding
        name: selectionPadding
        nameWithType: DataPlot.selectionPadding
        qualifiedName: IVLab.Plotting.DataPlot.selectionPadding
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.selectionPadding
  IVLab.Plotting.DataPlot.clickSelectionRadius:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.clickSelectionRadius
        name: clickSelectionRadius
        nameWithType: DataPlot.clickSelectionRadius
        qualifiedName: IVLab.Plotting.DataPlot.clickSelectionRadius
      VB:
      - id: IVLab.Plotting.DataPlot.clickSelectionRadius
        name: clickSelectionRadius
        nameWithType: DataPlot.clickSelectionRadius
        qualifiedName: IVLab.Plotting.DataPlot.clickSelectionRadius
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.clickSelectionRadius
  IVLab.Plotting.DataPlot.brushSelectionRadius:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.brushSelectionRadius
        name: brushSelectionRadius
        nameWithType: DataPlot.brushSelectionRadius
        qualifiedName: IVLab.Plotting.DataPlot.brushSelectionRadius
      VB:
      - id: IVLab.Plotting.DataPlot.brushSelectionRadius
        name: brushSelectionRadius
        nameWithType: DataPlot.brushSelectionRadius
        qualifiedName: IVLab.Plotting.DataPlot.brushSelectionRadius
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.brushSelectionRadius
  IVLab.Plotting.DataPlot.plotMask:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.plotMask
        name: plotMask
        nameWithType: DataPlot.plotMask
        qualifiedName: IVLab.Plotting.DataPlot.plotMask
      VB:
      - id: IVLab.Plotting.DataPlot.plotMask
        name: plotMask
        nameWithType: DataPlot.plotMask
        qualifiedName: IVLab.Plotting.DataPlot.plotMask
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.plotMask
  IVLab.Plotting.DataPlot.plotOuterRect:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.plotOuterRect
        name: plotOuterRect
        nameWithType: DataPlot.plotOuterRect
        qualifiedName: IVLab.Plotting.DataPlot.plotOuterRect
      VB:
      - id: IVLab.Plotting.DataPlot.plotOuterRect
        name: plotOuterRect
        nameWithType: DataPlot.plotOuterRect
        qualifiedName: IVLab.Plotting.DataPlot.plotOuterRect
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.plotOuterRect
  IVLab.Plotting.DataPlot.plotInnerRect:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.plotInnerRect
        name: plotInnerRect
        nameWithType: DataPlot.plotInnerRect
        qualifiedName: IVLab.Plotting.DataPlot.plotInnerRect
      VB:
      - id: IVLab.Plotting.DataPlot.plotInnerRect
        name: plotInnerRect
        nameWithType: DataPlot.plotInnerRect
        qualifiedName: IVLab.Plotting.DataPlot.plotInnerRect
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.plotInnerRect
  IVLab.Plotting.DataPlot.plotSelectionRect:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.plotSelectionRect
        name: plotSelectionRect
        nameWithType: DataPlot.plotSelectionRect
        qualifiedName: IVLab.Plotting.DataPlot.plotSelectionRect
      VB:
      - id: IVLab.Plotting.DataPlot.plotSelectionRect
        name: plotSelectionRect
        nameWithType: DataPlot.plotSelectionRect
        qualifiedName: IVLab.Plotting.DataPlot.plotSelectionRect
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.plotSelectionRect
  IVLab.Plotting.DataPlot.deleteButton:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.deleteButton
        name: deleteButton
        nameWithType: DataPlot.deleteButton
        qualifiedName: IVLab.Plotting.DataPlot.deleteButton
      VB:
      - id: IVLab.Plotting.DataPlot.deleteButton
        name: deleteButton
        nameWithType: DataPlot.deleteButton
        qualifiedName: IVLab.Plotting.DataPlot.deleteButton
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.deleteButton
  IVLab.Plotting.DataPlot.dataTable:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.dataTable
        name: dataTable
        nameWithType: DataPlot.dataTable
        qualifiedName: IVLab.Plotting.DataPlot.dataTable
      VB:
      - id: IVLab.Plotting.DataPlot.dataTable
        name: dataTable
        nameWithType: DataPlot.dataTable
        qualifiedName: IVLab.Plotting.DataPlot.dataTable
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.dataTable
  IVLab.Plotting.DataPlot.linkedIndices:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.linkedIndices
        name: linkedIndices
        nameWithType: DataPlot.linkedIndices
        qualifiedName: IVLab.Plotting.DataPlot.linkedIndices
      VB:
      - id: IVLab.Plotting.DataPlot.linkedIndices
        name: linkedIndices
        nameWithType: DataPlot.linkedIndices
        qualifiedName: IVLab.Plotting.DataPlot.linkedIndices
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.linkedIndices
  IVLab.Plotting.DataPlot.plotsCanvas:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.plotsCanvas
        name: plotsCanvas
        nameWithType: DataPlot.plotsCanvas
        qualifiedName: IVLab.Plotting.DataPlot.plotsCanvas
      VB:
      - id: IVLab.Plotting.DataPlot.plotsCanvas
        name: plotsCanvas
        nameWithType: DataPlot.plotsCanvas
        qualifiedName: IVLab.Plotting.DataPlot.plotsCanvas
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.plotsCanvas
  IVLab.Plotting.DataPlot.selectedIndexDictionary:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.selectedIndexDictionary
        name: selectedIndexDictionary
        nameWithType: DataPlot.selectedIndexDictionary
        qualifiedName: IVLab.Plotting.DataPlot.selectedIndexDictionary
      VB:
      - id: IVLab.Plotting.DataPlot.selectedIndexDictionary
        name: selectedIndexDictionary
        nameWithType: DataPlot.selectedIndexDictionary
        qualifiedName: IVLab.Plotting.DataPlot.selectedIndexDictionary
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.selectedIndexDictionary
  IVLab.Plotting.DataPlot.selectedDataPointIndices:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.selectedDataPointIndices
        name: selectedDataPointIndices
        nameWithType: DataPlot.selectedDataPointIndices
        qualifiedName: IVLab.Plotting.DataPlot.selectedDataPointIndices
      VB:
      - id: IVLab.Plotting.DataPlot.selectedDataPointIndices
        name: selectedDataPointIndices
        nameWithType: DataPlot.selectedDataPointIndices
        qualifiedName: IVLab.Plotting.DataPlot.selectedDataPointIndices
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.selectedDataPointIndices
  IVLab.Plotting.DataPlot.selectedDataPointMins:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.selectedDataPointMins
        name: selectedDataPointMins
        nameWithType: DataPlot.selectedDataPointMins
        qualifiedName: IVLab.Plotting.DataPlot.selectedDataPointMins
      VB:
      - id: IVLab.Plotting.DataPlot.selectedDataPointMins
        name: selectedDataPointMins
        nameWithType: DataPlot.selectedDataPointMins
        qualifiedName: IVLab.Plotting.DataPlot.selectedDataPointMins
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.selectedDataPointMins
  IVLab.Plotting.DataPlot.selectedDataPointMaxes:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.selectedDataPointMaxes
        name: selectedDataPointMaxes
        nameWithType: DataPlot.selectedDataPointMaxes
        qualifiedName: IVLab.Plotting.DataPlot.selectedDataPointMaxes
      VB:
      - id: IVLab.Plotting.DataPlot.selectedDataPointMaxes
        name: selectedDataPointMaxes
        nameWithType: DataPlot.selectedDataPointMaxes
        qualifiedName: IVLab.Plotting.DataPlot.selectedDataPointMaxes
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: F:IVLab.Plotting.DataPlot.selectedDataPointMaxes
  IVLab.Plotting.DataPlot.PlotMask:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.PlotMask
        name: PlotMask
        nameWithType: DataPlot.PlotMask
        qualifiedName: IVLab.Plotting.DataPlot.PlotMask
      VB:
      - id: IVLab.Plotting.DataPlot.PlotMask
        name: PlotMask
        nameWithType: DataPlot.PlotMask
        qualifiedName: IVLab.Plotting.DataPlot.PlotMask
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: P:IVLab.Plotting.DataPlot.PlotMask
  IVLab.Plotting.DataPlot.PlotOuterRect:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.PlotOuterRect
        name: PlotOuterRect
        nameWithType: DataPlot.PlotOuterRect
        qualifiedName: IVLab.Plotting.DataPlot.PlotOuterRect
      VB:
      - id: IVLab.Plotting.DataPlot.PlotOuterRect
        name: PlotOuterRect
        nameWithType: DataPlot.PlotOuterRect
        qualifiedName: IVLab.Plotting.DataPlot.PlotOuterRect
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: P:IVLab.Plotting.DataPlot.PlotOuterRect
  IVLab.Plotting.DataPlot.PlotSelectionRect:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.PlotSelectionRect
        name: PlotSelectionRect
        nameWithType: DataPlot.PlotSelectionRect
        qualifiedName: IVLab.Plotting.DataPlot.PlotSelectionRect
      VB:
      - id: IVLab.Plotting.DataPlot.PlotSelectionRect
        name: PlotSelectionRect
        nameWithType: DataPlot.PlotSelectionRect
        qualifiedName: IVLab.Plotting.DataPlot.PlotSelectionRect
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: P:IVLab.Plotting.DataPlot.PlotSelectionRect
  IVLab.Plotting.DataPlot.BrushRadius:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.BrushRadius
        name: BrushRadius
        nameWithType: DataPlot.BrushRadius
        qualifiedName: IVLab.Plotting.DataPlot.BrushRadius
      VB:
      - id: IVLab.Plotting.DataPlot.BrushRadius
        name: BrushRadius
        nameWithType: DataPlot.BrushRadius
        qualifiedName: IVLab.Plotting.DataPlot.BrushRadius
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: P:IVLab.Plotting.DataPlot.BrushRadius
  IVLab.Plotting.DataPlot.ResizePlot(Vector2):
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.ResizePlot(Vector2)
        name: ResizePlot
        nameWithType: DataPlot.ResizePlot
        qualifiedName: IVLab.Plotting.DataPlot.ResizePlot
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.DataPlot.ResizePlot(Vector2)
        name: ResizePlot
        nameWithType: DataPlot.ResizePlot
        qualifiedName: IVLab.Plotting.DataPlot.ResizePlot
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: M:IVLab.Plotting.DataPlot.ResizePlot(Vector2)
  IVLab.Plotting.DataPlotManager:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlotManager
        name: DataPlotManager
        nameWithType: DataPlotManager
        qualifiedName: IVLab.Plotting.DataPlotManager
      VB:
      - id: IVLab.Plotting.DataPlotManager
        name: DataPlotManager
        nameWithType: DataPlotManager
        qualifiedName: IVLab.Plotting.DataPlotManager
    isDefinition: true
    parent: IVLab.Plotting
    commentId: T:IVLab.Plotting.DataPlotManager
  Global.Vector2:
    name:
      CSharp:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      VB:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
    isDefinition: true
  System.Int32[]:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IVLab.Plotting.ScatterPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[]):
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
        name: Init
        nameWithType: ScatterPlot.Init
        qualifiedName: IVLab.Plotting.ScatterPlot.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IVLab.Plotting.DataPlotManager
        name: DataPlotManager
        nameWithType: DataPlotManager
        qualifiedName: IVLab.Plotting.DataPlotManager
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.ScatterPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
        name: Init
        nameWithType: ScatterPlot.Init
        qualifiedName: IVLab.Plotting.ScatterPlot.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IVLab.Plotting.DataPlotManager
        name: DataPlotManager
        nameWithType: DataPlotManager
        qualifiedName: IVLab.Plotting.DataPlotManager
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: M:IVLab.Plotting.ScatterPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
  IVLab.Plotting.ClusterPlot.Init*:
    name:
      CSharp:
      - id: IVLab.Plotting.ClusterPlot.Init*
        name: Init
        nameWithType: ClusterPlot.Init
        qualifiedName: IVLab.Plotting.ClusterPlot.Init
      VB:
      - id: IVLab.Plotting.ClusterPlot.Init*
        name: Init
        nameWithType: ClusterPlot.Init
        qualifiedName: IVLab.Plotting.ClusterPlot.Init
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ClusterPlot.Init
  IVLab.Plotting.ScatterPlot.xDropdownUpdated:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.xDropdownUpdated
        name: xDropdownUpdated
        nameWithType: ScatterPlot.xDropdownUpdated
        qualifiedName: IVLab.Plotting.ScatterPlot.xDropdownUpdated
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.ScatterPlot.xDropdownUpdated
        name: xDropdownUpdated
        nameWithType: ScatterPlot.xDropdownUpdated
        qualifiedName: IVLab.Plotting.ScatterPlot.xDropdownUpdated
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: M:IVLab.Plotting.ScatterPlot.xDropdownUpdated
  IVLab.Plotting.ClusterPlot.xDropdownUpdated*:
    name:
      CSharp:
      - id: IVLab.Plotting.ClusterPlot.xDropdownUpdated*
        name: xDropdownUpdated
        nameWithType: ClusterPlot.xDropdownUpdated
        qualifiedName: IVLab.Plotting.ClusterPlot.xDropdownUpdated
      VB:
      - id: IVLab.Plotting.ClusterPlot.xDropdownUpdated*
        name: xDropdownUpdated
        nameWithType: ClusterPlot.xDropdownUpdated
        qualifiedName: IVLab.Plotting.ClusterPlot.xDropdownUpdated
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ClusterPlot.xDropdownUpdated
  IVLab.Plotting.ScatterPlot.yDropdownUpdated:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.yDropdownUpdated
        name: yDropdownUpdated
        nameWithType: ScatterPlot.yDropdownUpdated
        qualifiedName: IVLab.Plotting.ScatterPlot.yDropdownUpdated
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.ScatterPlot.yDropdownUpdated
        name: yDropdownUpdated
        nameWithType: ScatterPlot.yDropdownUpdated
        qualifiedName: IVLab.Plotting.ScatterPlot.yDropdownUpdated
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: M:IVLab.Plotting.ScatterPlot.yDropdownUpdated
  IVLab.Plotting.ClusterPlot.yDropdownUpdated*:
    name:
      CSharp:
      - id: IVLab.Plotting.ClusterPlot.yDropdownUpdated*
        name: yDropdownUpdated
        nameWithType: ClusterPlot.yDropdownUpdated
        qualifiedName: IVLab.Plotting.ClusterPlot.yDropdownUpdated
      VB:
      - id: IVLab.Plotting.ClusterPlot.yDropdownUpdated*
        name: yDropdownUpdated
        nameWithType: ClusterPlot.yDropdownUpdated
        qualifiedName: IVLab.Plotting.ClusterPlot.yDropdownUpdated
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ClusterPlot.yDropdownUpdated
  System.String[]:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IVLab.Plotting.ScatterPlot.DropdownSetColumnNames(System.String[]):
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames(System.String[])
        name: DropdownSetColumnNames
        nameWithType: ScatterPlot.DropdownSetColumnNames
        qualifiedName: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames(System.String[])
        name: DropdownSetColumnNames
        nameWithType: ScatterPlot.DropdownSetColumnNames
        qualifiedName: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: M:IVLab.Plotting.ScatterPlot.DropdownSetColumnNames(System.String[])
  IVLab.Plotting.ClusterPlot.DropdownSetColumnNames*:
    name:
      CSharp:
      - id: IVLab.Plotting.ClusterPlot.DropdownSetColumnNames*
        name: DropdownSetColumnNames
        nameWithType: ClusterPlot.DropdownSetColumnNames
        qualifiedName: IVLab.Plotting.ClusterPlot.DropdownSetColumnNames
      VB:
      - id: IVLab.Plotting.ClusterPlot.DropdownSetColumnNames*
        name: DropdownSetColumnNames
        nameWithType: ClusterPlot.DropdownSetColumnNames
        qualifiedName: IVLab.Plotting.ClusterPlot.DropdownSetColumnNames
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ClusterPlot.DropdownSetColumnNames
  IVLab.Plotting.SelectionMode.State:
    name:
      CSharp:
      - id: IVLab.Plotting.SelectionMode.State
        name: SelectionMode.State
        nameWithType: SelectionMode.State
        qualifiedName: IVLab.Plotting.SelectionMode.State
      VB:
      - id: IVLab.Plotting.SelectionMode.State
        name: SelectionMode.State
        nameWithType: SelectionMode.State
        qualifiedName: IVLab.Plotting.SelectionMode.State
    isDefinition: true
    parent: IVLab.Plotting
    commentId: T:IVLab.Plotting.SelectionMode.State
  IVLab.Plotting.ScatterPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State):
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
        name: ClickSelection
        nameWithType: ScatterPlot.ClickSelection
        qualifiedName: IVLab.Plotting.ScatterPlot.ClickSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.SelectionMode.State
        name: SelectionMode.State
        nameWithType: SelectionMode.State
        qualifiedName: IVLab.Plotting.SelectionMode.State
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.ScatterPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
        name: ClickSelection
        nameWithType: ScatterPlot.ClickSelection
        qualifiedName: IVLab.Plotting.ScatterPlot.ClickSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.SelectionMode.State
        name: SelectionMode.State
        nameWithType: SelectionMode.State
        qualifiedName: IVLab.Plotting.SelectionMode.State
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: M:IVLab.Plotting.ScatterPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
  IVLab.Plotting.ClusterPlot.ClickSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.ClusterPlot.ClickSelection*
        name: ClickSelection
        nameWithType: ClusterPlot.ClickSelection
        qualifiedName: IVLab.Plotting.ClusterPlot.ClickSelection
      VB:
      - id: IVLab.Plotting.ClusterPlot.ClickSelection*
        name: ClickSelection
        nameWithType: ClusterPlot.ClickSelection
        qualifiedName: IVLab.Plotting.ClusterPlot.ClickSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ClusterPlot.ClickSelection
  IVLab.Plotting.ScatterPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State):
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
        name: BrushSelection
        nameWithType: ScatterPlot.BrushSelection
        qualifiedName: IVLab.Plotting.ScatterPlot.BrushSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.SelectionMode.State
        name: SelectionMode.State
        nameWithType: SelectionMode.State
        qualifiedName: IVLab.Plotting.SelectionMode.State
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.ScatterPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
        name: BrushSelection
        nameWithType: ScatterPlot.BrushSelection
        qualifiedName: IVLab.Plotting.ScatterPlot.BrushSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.SelectionMode.State
        name: SelectionMode.State
        nameWithType: SelectionMode.State
        qualifiedName: IVLab.Plotting.SelectionMode.State
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.ScatterPlot
    commentId: M:IVLab.Plotting.ScatterPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
  IVLab.Plotting.ClusterPlot.BrushSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.ClusterPlot.BrushSelection*
        name: BrushSelection
        nameWithType: ClusterPlot.BrushSelection
        qualifiedName: IVLab.Plotting.ClusterPlot.BrushSelection
      VB:
      - id: IVLab.Plotting.ClusterPlot.BrushSelection*
        name: BrushSelection
        nameWithType: ClusterPlot.BrushSelection
        qualifiedName: IVLab.Plotting.ClusterPlot.BrushSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ClusterPlot.BrushSelection
  IVLab.Plotting.ClusterPlot:
    name:
      CSharp:
      - id: IVLab.Plotting.ClusterPlot
        name: ClusterPlot
        nameWithType: ClusterPlot
        qualifiedName: IVLab.Plotting.ClusterPlot
      VB:
      - id: IVLab.Plotting.ClusterPlot
        name: ClusterPlot
        nameWithType: ClusterPlot
        qualifiedName: IVLab.Plotting.ClusterPlot
    isDefinition: true
    commentId: T:IVLab.Plotting.ClusterPlot
  Global.Color32:
    name:
      CSharp:
      - id: Global.Color32
        name: Color32
        nameWithType: Color32
        qualifiedName: Color32
        isExternal: true
      VB:
      - id: Global.Color32
        name: Color32
        nameWithType: Color32
        qualifiedName: Color32
        isExternal: true
    isDefinition: true
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  IVLab.Plotting.ClickSelectionMode:
    name:
      CSharp:
      - id: IVLab.Plotting.ClickSelectionMode
        name: ClickSelectionMode
        nameWithType: ClickSelectionMode
        qualifiedName: IVLab.Plotting.ClickSelectionMode
      VB:
      - id: IVLab.Plotting.ClickSelectionMode
        name: ClickSelectionMode
        nameWithType: ClickSelectionMode
        qualifiedName: IVLab.Plotting.ClickSelectionMode
    isDefinition: true
    commentId: T:IVLab.Plotting.ClickSelectionMode
  IVLab.Plotting.BrushSelectionMode:
    name:
      CSharp:
      - id: IVLab.Plotting.BrushSelectionMode
        name: BrushSelectionMode
        nameWithType: BrushSelectionMode
        qualifiedName: IVLab.Plotting.BrushSelectionMode
      VB:
      - id: IVLab.Plotting.BrushSelectionMode
        name: BrushSelectionMode
        nameWithType: BrushSelectionMode
        qualifiedName: IVLab.Plotting.BrushSelectionMode
    isDefinition: true
    commentId: T:IVLab.Plotting.BrushSelectionMode
  Global.RectTransform:
    name:
      CSharp:
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
      VB:
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
    isDefinition: true
  Global.GameObject:
    name:
      CSharp:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: Global.GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  IVLab.Plotting.DataTable:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable
        name: DataTable
        nameWithType: DataTable
        qualifiedName: IVLab.Plotting.DataTable
      VB:
      - id: IVLab.Plotting.DataTable
        name: DataTable
        nameWithType: DataTable
        qualifiedName: IVLab.Plotting.DataTable
    isDefinition: true
    parent: IVLab.Plotting
    commentId: T:IVLab.Plotting.DataTable
  Global.Canvas:
    name:
      CSharp:
      - id: Global.Canvas
        name: Canvas
        nameWithType: Canvas
        qualifiedName: Canvas
        isExternal: true
      VB:
      - id: Global.Canvas
        name: Canvas
        nameWithType: Canvas
        qualifiedName: Canvas
        isExternal: true
    isDefinition: true
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.Dictionary{System.Int32,System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.Int32,System.Int32}
  System.Single[]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IVLab.Plotting.DataPlot.PlotMask*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.PlotMask*
        name: PlotMask
        nameWithType: DataPlot.PlotMask
        qualifiedName: IVLab.Plotting.DataPlot.PlotMask
      VB:
      - id: IVLab.Plotting.DataPlot.PlotMask*
        name: PlotMask
        nameWithType: DataPlot.PlotMask
        qualifiedName: IVLab.Plotting.DataPlot.PlotMask
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.PlotMask
  IVLab.Plotting.DataPlot.PlotOuterRect*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.PlotOuterRect*
        name: PlotOuterRect
        nameWithType: DataPlot.PlotOuterRect
        qualifiedName: IVLab.Plotting.DataPlot.PlotOuterRect
      VB:
      - id: IVLab.Plotting.DataPlot.PlotOuterRect*
        name: PlotOuterRect
        nameWithType: DataPlot.PlotOuterRect
        qualifiedName: IVLab.Plotting.DataPlot.PlotOuterRect
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.PlotOuterRect
  IVLab.Plotting.DataPlot.PlotSelectionRect*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.PlotSelectionRect*
        name: PlotSelectionRect
        nameWithType: DataPlot.PlotSelectionRect
        qualifiedName: IVLab.Plotting.DataPlot.PlotSelectionRect
      VB:
      - id: IVLab.Plotting.DataPlot.PlotSelectionRect*
        name: PlotSelectionRect
        nameWithType: DataPlot.PlotSelectionRect
        qualifiedName: IVLab.Plotting.DataPlot.PlotSelectionRect
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.PlotSelectionRect
  IVLab.Plotting.DataPlot.BrushRadius*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.BrushRadius*
        name: BrushRadius
        nameWithType: DataPlot.BrushRadius
        qualifiedName: IVLab.Plotting.DataPlot.BrushRadius
      VB:
      - id: IVLab.Plotting.DataPlot.BrushRadius*
        name: BrushRadius
        nameWithType: DataPlot.BrushRadius
        qualifiedName: IVLab.Plotting.DataPlot.BrushRadius
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.BrushRadius
  IVLab.Plotting.DataPlot.Init*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.Init*
        name: Init
        nameWithType: DataPlot.Init
        qualifiedName: IVLab.Plotting.DataPlot.Init
      VB:
      - id: IVLab.Plotting.DataPlot.Init*
        name: Init
        nameWithType: DataPlot.Init
        qualifiedName: IVLab.Plotting.DataPlot.Init
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.Init
  IVLab.Plotting.DataPlot.ResizePlot*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.ResizePlot*
        name: ResizePlot
        nameWithType: DataPlot.ResizePlot
        qualifiedName: IVLab.Plotting.DataPlot.ResizePlot
      VB:
      - id: IVLab.Plotting.DataPlot.ResizePlot*
        name: ResizePlot
        nameWithType: DataPlot.ResizePlot
        qualifiedName: IVLab.Plotting.DataPlot.ResizePlot
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.ResizePlot
  IVLab.Plotting.DataPlot.SetPlotSize*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.SetPlotSize*
        name: SetPlotSize
        nameWithType: DataPlot.SetPlotSize
        qualifiedName: IVLab.Plotting.DataPlot.SetPlotSize
      VB:
      - id: IVLab.Plotting.DataPlot.SetPlotSize*
        name: SetPlotSize
        nameWithType: DataPlot.SetPlotSize
        qualifiedName: IVLab.Plotting.DataPlot.SetPlotSize
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.SetPlotSize
  IVLab.Plotting.DataPlot.UpdateDataPoint*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.UpdateDataPoint*
        name: UpdateDataPoint
        nameWithType: DataPlot.UpdateDataPoint
        qualifiedName: IVLab.Plotting.DataPlot.UpdateDataPoint
      VB:
      - id: IVLab.Plotting.DataPlot.UpdateDataPoint*
        name: UpdateDataPoint
        nameWithType: DataPlot.UpdateDataPoint
        qualifiedName: IVLab.Plotting.DataPlot.UpdateDataPoint
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.UpdateDataPoint
  IVLab.Plotting.DataPlot.RefreshPlotGraphics*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.RefreshPlotGraphics*
        name: RefreshPlotGraphics
        nameWithType: DataPlot.RefreshPlotGraphics
        qualifiedName: IVLab.Plotting.DataPlot.RefreshPlotGraphics
      VB:
      - id: IVLab.Plotting.DataPlot.RefreshPlotGraphics*
        name: RefreshPlotGraphics
        nameWithType: DataPlot.RefreshPlotGraphics
        qualifiedName: IVLab.Plotting.DataPlot.RefreshPlotGraphics
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.RefreshPlotGraphics
  IVLab.Plotting.DataPlot.Plot*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.Plot*
        name: Plot
        nameWithType: DataPlot.Plot
        qualifiedName: IVLab.Plotting.DataPlot.Plot
      VB:
      - id: IVLab.Plotting.DataPlot.Plot*
        name: Plot
        nameWithType: DataPlot.Plot
        qualifiedName: IVLab.Plotting.DataPlot.Plot
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.Plot
  IVLab.Plotting.DataPlot.ClickSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.ClickSelection*
        name: ClickSelection
        nameWithType: DataPlot.ClickSelection
        qualifiedName: IVLab.Plotting.DataPlot.ClickSelection
      VB:
      - id: IVLab.Plotting.DataPlot.ClickSelection*
        name: ClickSelection
        nameWithType: DataPlot.ClickSelection
        qualifiedName: IVLab.Plotting.DataPlot.ClickSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.ClickSelection
  IVLab.Plotting.RectSelectionMode:
    name:
      CSharp:
      - id: IVLab.Plotting.RectSelectionMode
        name: RectSelectionMode
        nameWithType: RectSelectionMode
        qualifiedName: IVLab.Plotting.RectSelectionMode
      VB:
      - id: IVLab.Plotting.RectSelectionMode
        name: RectSelectionMode
        nameWithType: RectSelectionMode
        qualifiedName: IVLab.Plotting.RectSelectionMode
    isDefinition: true
    commentId: T:IVLab.Plotting.RectSelectionMode
  IVLab.Plotting.DataPlot.RectSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.RectSelection*
        name: RectSelection
        nameWithType: DataPlot.RectSelection
        qualifiedName: IVLab.Plotting.DataPlot.RectSelection
      VB:
      - id: IVLab.Plotting.DataPlot.RectSelection*
        name: RectSelection
        nameWithType: DataPlot.RectSelection
        qualifiedName: IVLab.Plotting.DataPlot.RectSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.RectSelection
  IVLab.Plotting.DataPlot.BrushSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.BrushSelection*
        name: BrushSelection
        nameWithType: DataPlot.BrushSelection
        qualifiedName: IVLab.Plotting.DataPlot.BrushSelection
      VB:
      - id: IVLab.Plotting.DataPlot.BrushSelection*
        name: BrushSelection
        nameWithType: DataPlot.BrushSelection
        qualifiedName: IVLab.Plotting.DataPlot.BrushSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlot.BrushSelection
  IVLab.Plotting.DataPlotManager.DataTable*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlotManager.DataTable*
        name: DataTable
        nameWithType: DataPlotManager.DataTable
        qualifiedName: IVLab.Plotting.DataPlotManager.DataTable
      VB:
      - id: IVLab.Plotting.DataPlotManager.DataTable*
        name: DataTable
        nameWithType: DataPlotManager.DataTable
        qualifiedName: IVLab.Plotting.DataPlotManager.DataTable
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlotManager.DataTable
  IVLab.Plotting.DataPlotManager.LinkedIndices*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlotManager.LinkedIndices*
        name: LinkedIndices
        nameWithType: DataPlotManager.LinkedIndices
        qualifiedName: IVLab.Plotting.DataPlotManager.LinkedIndices
      VB:
      - id: IVLab.Plotting.DataPlotManager.LinkedIndices*
        name: LinkedIndices
        nameWithType: DataPlotManager.LinkedIndices
        qualifiedName: IVLab.Plotting.DataPlotManager.LinkedIndices
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlotManager.LinkedIndices
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic.List{IVLab.Plotting.DataPlot}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: IVLab.Plotting.DataPlot
        name: DataPlot
        nameWithType: DataPlot
        qualifiedName: IVLab.Plotting.DataPlot
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: IVLab.Plotting.DataPlot
        name: DataPlot
        nameWithType: DataPlot
        qualifiedName: IVLab.Plotting.DataPlot
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{IVLab.Plotting.DataPlot}
  IVLab.Plotting.DataPlotManager.DataPlots*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlotManager.DataPlots*
        name: DataPlots
        nameWithType: DataPlotManager.DataPlots
        qualifiedName: IVLab.Plotting.DataPlotManager.DataPlots
      VB:
      - id: IVLab.Plotting.DataPlotManager.DataPlots*
        name: DataPlots
        nameWithType: DataPlotManager.DataPlots
        qualifiedName: IVLab.Plotting.DataPlotManager.DataPlots
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlotManager.DataPlots
  IVLab.Plotting.SelectionMode:
    name:
      CSharp:
      - id: IVLab.Plotting.SelectionMode
        name: SelectionMode
        nameWithType: SelectionMode
        qualifiedName: IVLab.Plotting.SelectionMode
      VB:
      - id: IVLab.Plotting.SelectionMode
        name: SelectionMode
        nameWithType: SelectionMode
        qualifiedName: IVLab.Plotting.SelectionMode
    isDefinition: true
    parent: IVLab.Plotting
    commentId: T:IVLab.Plotting.SelectionMode
  IVLab.Plotting.DataPlotManager.SetCurrentSelectionMode*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlotManager.SetCurrentSelectionMode*
        name: SetCurrentSelectionMode
        nameWithType: DataPlotManager.SetCurrentSelectionMode
        qualifiedName: IVLab.Plotting.DataPlotManager.SetCurrentSelectionMode
      VB:
      - id: IVLab.Plotting.DataPlotManager.SetCurrentSelectionMode*
        name: SetCurrentSelectionMode
        nameWithType: DataPlotManager.SetCurrentSelectionMode
        qualifiedName: IVLab.Plotting.DataPlotManager.SetCurrentSelectionMode
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlotManager.SetCurrentSelectionMode
  IVLab.Plotting.DataPlotManager.EnableSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlotManager.EnableSelection*
        name: EnableSelection
        nameWithType: DataPlotManager.EnableSelection
        qualifiedName: IVLab.Plotting.DataPlotManager.EnableSelection
      VB:
      - id: IVLab.Plotting.DataPlotManager.EnableSelection*
        name: EnableSelection
        nameWithType: DataPlotManager.EnableSelection
        qualifiedName: IVLab.Plotting.DataPlotManager.EnableSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlotManager.EnableSelection
  IVLab.Plotting.DataPlotManager.DisableSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlotManager.DisableSelection*
        name: DisableSelection
        nameWithType: DataPlotManager.DisableSelection
        qualifiedName: IVLab.Plotting.DataPlotManager.DisableSelection
      VB:
      - id: IVLab.Plotting.DataPlotManager.DisableSelection*
        name: DisableSelection
        nameWithType: DataPlotManager.DisableSelection
        qualifiedName: IVLab.Plotting.DataPlotManager.DisableSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlotManager.DisableSelection
  IVLab.Plotting.DataPlotManager.AddPlotFromSelected*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlotManager.AddPlotFromSelected*
        name: AddPlotFromSelected
        nameWithType: DataPlotManager.AddPlotFromSelected
        qualifiedName: IVLab.Plotting.DataPlotManager.AddPlotFromSelected
      VB:
      - id: IVLab.Plotting.DataPlotManager.AddPlotFromSelected*
        name: AddPlotFromSelected
        nameWithType: DataPlotManager.AddPlotFromSelected
        qualifiedName: IVLab.Plotting.DataPlotManager.AddPlotFromSelected
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlotManager.AddPlotFromSelected
  IVLab.Plotting.DataPlotManager.AddPlot*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlotManager.AddPlot*
        name: AddPlot
        nameWithType: DataPlotManager.AddPlot
        qualifiedName: IVLab.Plotting.DataPlotManager.AddPlot
      VB:
      - id: IVLab.Plotting.DataPlotManager.AddPlot*
        name: AddPlot
        nameWithType: DataPlotManager.AddPlot
        qualifiedName: IVLab.Plotting.DataPlotManager.AddPlot
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlotManager.AddPlot
  IVLab.Plotting.DataPlotManager.RemovePlot*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlotManager.RemovePlot*
        name: RemovePlot
        nameWithType: DataPlotManager.RemovePlot
        qualifiedName: IVLab.Plotting.DataPlotManager.RemovePlot
      VB:
      - id: IVLab.Plotting.DataPlotManager.RemovePlot*
        name: RemovePlot
        nameWithType: DataPlotManager.RemovePlot
        qualifiedName: IVLab.Plotting.DataPlotManager.RemovePlot
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlotManager.RemovePlot
  IVLab.Plotting.DataPlotManager.ToggleMasking*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlotManager.ToggleMasking*
        name: ToggleMasking
        nameWithType: DataPlotManager.ToggleMasking
        qualifiedName: IVLab.Plotting.DataPlotManager.ToggleMasking
      VB:
      - id: IVLab.Plotting.DataPlotManager.ToggleMasking*
        name: ToggleMasking
        nameWithType: DataPlotManager.ToggleMasking
        qualifiedName: IVLab.Plotting.DataPlotManager.ToggleMasking
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlotManager.ToggleMasking
  IVLab.Plotting.DataPlotManager.UpdatePlots*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlotManager.UpdatePlots*
        name: UpdatePlots
        nameWithType: DataPlotManager.UpdatePlots
        qualifiedName: IVLab.Plotting.DataPlotManager.UpdatePlots
      VB:
      - id: IVLab.Plotting.DataPlotManager.UpdatePlots*
        name: UpdatePlots
        nameWithType: DataPlotManager.UpdatePlots
        qualifiedName: IVLab.Plotting.DataPlotManager.UpdatePlots
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataPlotManager.UpdatePlots
  IVLab.Plotting.DataTable.Height*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable.Height*
        name: Height
        nameWithType: DataTable.Height
        qualifiedName: IVLab.Plotting.DataTable.Height
      VB:
      - id: IVLab.Plotting.DataTable.Height*
        name: Height
        nameWithType: DataTable.Height
        qualifiedName: IVLab.Plotting.DataTable.Height
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataTable.Height
  IVLab.Plotting.DataTable.Width*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable.Width*
        name: Width
        nameWithType: DataTable.Width
        qualifiedName: IVLab.Plotting.DataTable.Width
      VB:
      - id: IVLab.Plotting.DataTable.Width*
        name: Width
        nameWithType: DataTable.Width
        qualifiedName: IVLab.Plotting.DataTable.Width
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataTable.Width
  System.Single[][]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IVLab.Plotting.DataTable.Data*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable.Data*
        name: Data
        nameWithType: DataTable.Data
        qualifiedName: IVLab.Plotting.DataTable.Data
      VB:
      - id: IVLab.Plotting.DataTable.Data*
        name: Data
        nameWithType: DataTable.Data
        qualifiedName: IVLab.Plotting.DataTable.Data
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataTable.Data
  IVLab.Plotting.DataTable.RowIDs*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable.RowIDs*
        name: RowIDs
        nameWithType: DataTable.RowIDs
        qualifiedName: IVLab.Plotting.DataTable.RowIDs
      VB:
      - id: IVLab.Plotting.DataTable.RowIDs*
        name: RowIDs
        nameWithType: DataTable.RowIDs
        qualifiedName: IVLab.Plotting.DataTable.RowIDs
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataTable.RowIDs
  IVLab.Plotting.DataTable.ColumnNames*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable.ColumnNames*
        name: ColumnNames
        nameWithType: DataTable.ColumnNames
        qualifiedName: IVLab.Plotting.DataTable.ColumnNames
      VB:
      - id: IVLab.Plotting.DataTable.ColumnNames*
        name: ColumnNames
        nameWithType: DataTable.ColumnNames
        qualifiedName: IVLab.Plotting.DataTable.ColumnNames
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataTable.ColumnNames
  IVLab.Plotting.DataTable.ColumnMins*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable.ColumnMins*
        name: ColumnMins
        nameWithType: DataTable.ColumnMins
        qualifiedName: IVLab.Plotting.DataTable.ColumnMins
      VB:
      - id: IVLab.Plotting.DataTable.ColumnMins*
        name: ColumnMins
        nameWithType: DataTable.ColumnMins
        qualifiedName: IVLab.Plotting.DataTable.ColumnMins
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataTable.ColumnMins
  IVLab.Plotting.DataTable.ColumnMaxes*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable.ColumnMaxes*
        name: ColumnMaxes
        nameWithType: DataTable.ColumnMaxes
        qualifiedName: IVLab.Plotting.DataTable.ColumnMaxes
      VB:
      - id: IVLab.Plotting.DataTable.ColumnMaxes*
        name: ColumnMaxes
        nameWithType: DataTable.ColumnMaxes
        qualifiedName: IVLab.Plotting.DataTable.ColumnMaxes
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataTable.ColumnMaxes
  IVLab.Plotting.DataTable.#ctor*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable.#ctor*
        name: DataTable
        nameWithType: DataTable.DataTable
        qualifiedName: IVLab.Plotting.DataTable.DataTable
      VB:
      - id: IVLab.Plotting.DataTable.#ctor*
        name: DataTable
        nameWithType: DataTable.DataTable
        qualifiedName: IVLab.Plotting.DataTable.DataTable
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataTable.#ctor
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  IVLab.Plotting.DataTable.InitializeRandomTable*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable.InitializeRandomTable*
        name: InitializeRandomTable
        nameWithType: DataTable.InitializeRandomTable
        qualifiedName: IVLab.Plotting.DataTable.InitializeRandomTable
      VB:
      - id: IVLab.Plotting.DataTable.InitializeRandomTable*
        name: InitializeRandomTable
        nameWithType: DataTable.InitializeRandomTable
        qualifiedName: IVLab.Plotting.DataTable.InitializeRandomTable
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataTable.InitializeRandomTable
  IVLab.Plotting.DataTable.InitializeTableFromCSV*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable.InitializeTableFromCSV*
        name: InitializeTableFromCSV
        nameWithType: DataTable.InitializeTableFromCSV
        qualifiedName: IVLab.Plotting.DataTable.InitializeTableFromCSV
      VB:
      - id: IVLab.Plotting.DataTable.InitializeTableFromCSV*
        name: InitializeTableFromCSV
        nameWithType: DataTable.InitializeTableFromCSV
        qualifiedName: IVLab.Plotting.DataTable.InitializeTableFromCSV
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataTable.InitializeTableFromCSV
  System.ValueTuple`2:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.ValueTuple`2
  System.ValueTuple{System.Single,System.Single}:
    name:
      CSharp:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.ValueTuple`2
        name: (T1, T2)
        nameWithType: (T1, T2)
        qualifiedName: System.ValueTuple
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.ValueTuple`2
    parent: System
    commentId: T:System.ValueTuple{System.Single,System.Single}
  IVLab.Plotting.DataTable.ColumnDataMinMax*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable.ColumnDataMinMax*
        name: ColumnDataMinMax
        nameWithType: DataTable.ColumnDataMinMax
        qualifiedName: IVLab.Plotting.DataTable.ColumnDataMinMax
      VB:
      - id: IVLab.Plotting.DataTable.ColumnDataMinMax*
        name: ColumnDataMinMax
        nameWithType: DataTable.ColumnDataMinMax
        qualifiedName: IVLab.Plotting.DataTable.ColumnDataMinMax
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataTable.ColumnDataMinMax
  IVLab.Plotting.DataTable.Empty*:
    name:
      CSharp:
      - id: IVLab.Plotting.DataTable.Empty*
        name: Empty
        nameWithType: DataTable.Empty
        qualifiedName: IVLab.Plotting.DataTable.Empty
      VB:
      - id: IVLab.Plotting.DataTable.Empty*
        name: Empty
        nameWithType: DataTable.Empty
        qualifiedName: IVLab.Plotting.DataTable.Empty
    isDefinition: true
    commentId: Overload:IVLab.Plotting.DataTable.Empty
  IVLab.Plotting.NiceAxisLabel.Inverted*:
    name:
      CSharp:
      - id: IVLab.Plotting.NiceAxisLabel.Inverted*
        name: Inverted
        nameWithType: NiceAxisLabel.Inverted
        qualifiedName: IVLab.Plotting.NiceAxisLabel.Inverted
      VB:
      - id: IVLab.Plotting.NiceAxisLabel.Inverted*
        name: Inverted
        nameWithType: NiceAxisLabel.Inverted
        qualifiedName: IVLab.Plotting.NiceAxisLabel.Inverted
    isDefinition: true
    commentId: Overload:IVLab.Plotting.NiceAxisLabel.Inverted
  IVLab.Plotting.NiceAxisLabel.NiceMin*:
    name:
      CSharp:
      - id: IVLab.Plotting.NiceAxisLabel.NiceMin*
        name: NiceMin
        nameWithType: NiceAxisLabel.NiceMin
        qualifiedName: IVLab.Plotting.NiceAxisLabel.NiceMin
      VB:
      - id: IVLab.Plotting.NiceAxisLabel.NiceMin*
        name: NiceMin
        nameWithType: NiceAxisLabel.NiceMin
        qualifiedName: IVLab.Plotting.NiceAxisLabel.NiceMin
    isDefinition: true
    commentId: Overload:IVLab.Plotting.NiceAxisLabel.NiceMin
  IVLab.Plotting.NiceAxisLabel.NiceMax*:
    name:
      CSharp:
      - id: IVLab.Plotting.NiceAxisLabel.NiceMax*
        name: NiceMax
        nameWithType: NiceAxisLabel.NiceMax
        qualifiedName: IVLab.Plotting.NiceAxisLabel.NiceMax
      VB:
      - id: IVLab.Plotting.NiceAxisLabel.NiceMax*
        name: NiceMax
        nameWithType: NiceAxisLabel.NiceMax
        qualifiedName: IVLab.Plotting.NiceAxisLabel.NiceMax
    isDefinition: true
    commentId: Overload:IVLab.Plotting.NiceAxisLabel.NiceMax
  IVLab.Plotting.NiceAxisLabel.GenerateNiceMinMax*:
    name:
      CSharp:
      - id: IVLab.Plotting.NiceAxisLabel.GenerateNiceMinMax*
        name: GenerateNiceMinMax
        nameWithType: NiceAxisLabel.GenerateNiceMinMax
        qualifiedName: IVLab.Plotting.NiceAxisLabel.GenerateNiceMinMax
      VB:
      - id: IVLab.Plotting.NiceAxisLabel.GenerateNiceMinMax*
        name: GenerateNiceMinMax
        nameWithType: NiceAxisLabel.GenerateNiceMinMax
        qualifiedName: IVLab.Plotting.NiceAxisLabel.GenerateNiceMinMax
    isDefinition: true
    commentId: Overload:IVLab.Plotting.NiceAxisLabel.GenerateNiceMinMax
  IVLab.Plotting.NiceAxisLabel.GenerateXAxisLabel*:
    name:
      CSharp:
      - id: IVLab.Plotting.NiceAxisLabel.GenerateXAxisLabel*
        name: GenerateXAxisLabel
        nameWithType: NiceAxisLabel.GenerateXAxisLabel
        qualifiedName: IVLab.Plotting.NiceAxisLabel.GenerateXAxisLabel
      VB:
      - id: IVLab.Plotting.NiceAxisLabel.GenerateXAxisLabel*
        name: GenerateXAxisLabel
        nameWithType: NiceAxisLabel.GenerateXAxisLabel
        qualifiedName: IVLab.Plotting.NiceAxisLabel.GenerateXAxisLabel
    isDefinition: true
    commentId: Overload:IVLab.Plotting.NiceAxisLabel.GenerateXAxisLabel
  IVLab.Plotting.NiceAxisLabel.GenerateYAxisLabel*:
    name:
      CSharp:
      - id: IVLab.Plotting.NiceAxisLabel.GenerateYAxisLabel*
        name: GenerateYAxisLabel
        nameWithType: NiceAxisLabel.GenerateYAxisLabel
        qualifiedName: IVLab.Plotting.NiceAxisLabel.GenerateYAxisLabel
      VB:
      - id: IVLab.Plotting.NiceAxisLabel.GenerateYAxisLabel*
        name: GenerateYAxisLabel
        nameWithType: NiceAxisLabel.GenerateYAxisLabel
        qualifiedName: IVLab.Plotting.NiceAxisLabel.GenerateYAxisLabel
    isDefinition: true
    commentId: Overload:IVLab.Plotting.NiceAxisLabel.GenerateYAxisLabel
  IVLab.Plotting.NiceAxisLabel:
    name:
      CSharp:
      - id: IVLab.Plotting.NiceAxisLabel
        name: NiceAxisLabel
        nameWithType: NiceAxisLabel
        qualifiedName: IVLab.Plotting.NiceAxisLabel
      VB:
      - id: IVLab.Plotting.NiceAxisLabel
        name: NiceAxisLabel
        nameWithType: NiceAxisLabel
        qualifiedName: IVLab.Plotting.NiceAxisLabel
    isDefinition: true
    parent: IVLab.Plotting
    commentId: T:IVLab.Plotting.NiceAxisLabel
  IVLab.Plotting.DataPlot.SetPlotSize:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.SetPlotSize
        name: SetPlotSize
        nameWithType: DataPlot.SetPlotSize
        qualifiedName: IVLab.Plotting.DataPlot.SetPlotSize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.DataPlot.SetPlotSize
        name: SetPlotSize
        nameWithType: DataPlot.SetPlotSize
        qualifiedName: IVLab.Plotting.DataPlot.SetPlotSize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: M:IVLab.Plotting.DataPlot.SetPlotSize
  IVLab.Plotting.DataPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[]):
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
        name: Init
        nameWithType: DataPlot.Init
        qualifiedName: IVLab.Plotting.DataPlot.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IVLab.Plotting.DataPlotManager
        name: DataPlotManager
        nameWithType: DataPlotManager
        qualifiedName: IVLab.Plotting.DataPlotManager
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.DataPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
        name: Init
        nameWithType: DataPlot.Init
        qualifiedName: IVLab.Plotting.DataPlot.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IVLab.Plotting.DataPlotManager
        name: DataPlotManager
        nameWithType: DataPlotManager
        qualifiedName: IVLab.Plotting.DataPlotManager
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: M:IVLab.Plotting.DataPlot.Init(IVLab.Plotting.DataPlotManager,Vector2,System.Int32[])
  IVLab.Plotting.ParallelCoordsPlot.Init*:
    name:
      CSharp:
      - id: IVLab.Plotting.ParallelCoordsPlot.Init*
        name: Init
        nameWithType: ParallelCoordsPlot.Init
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.Init
      VB:
      - id: IVLab.Plotting.ParallelCoordsPlot.Init*
        name: Init
        nameWithType: ParallelCoordsPlot.Init
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.Init
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ParallelCoordsPlot.Init
  IVLab.Plotting.DataPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes):
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
        name: UpdateDataPoint
        nameWithType: DataPlot.UpdateDataPoint
        qualifiedName: IVLab.Plotting.DataPlot.UpdateDataPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes
        name: LinkedIndices.LinkedAttributes
        nameWithType: LinkedIndices.LinkedAttributes
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.DataPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
        name: UpdateDataPoint
        nameWithType: DataPlot.UpdateDataPoint
        qualifiedName: IVLab.Plotting.DataPlot.UpdateDataPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.LinkedIndices.LinkedAttributes
        name: LinkedIndices.LinkedAttributes
        nameWithType: LinkedIndices.LinkedAttributes
        qualifiedName: IVLab.Plotting.LinkedIndices.LinkedAttributes
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: M:IVLab.Plotting.DataPlot.UpdateDataPoint(System.Int32,IVLab.Plotting.LinkedIndices.LinkedAttributes)
  IVLab.Plotting.ParallelCoordsPlot.UpdateDataPoint*:
    name:
      CSharp:
      - id: IVLab.Plotting.ParallelCoordsPlot.UpdateDataPoint*
        name: UpdateDataPoint
        nameWithType: ParallelCoordsPlot.UpdateDataPoint
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.UpdateDataPoint
      VB:
      - id: IVLab.Plotting.ParallelCoordsPlot.UpdateDataPoint*
        name: UpdateDataPoint
        nameWithType: ParallelCoordsPlot.UpdateDataPoint
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.UpdateDataPoint
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ParallelCoordsPlot.UpdateDataPoint
  IVLab.Plotting.DataPlot.RefreshPlotGraphics:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.RefreshPlotGraphics
        name: RefreshPlotGraphics
        nameWithType: DataPlot.RefreshPlotGraphics
        qualifiedName: IVLab.Plotting.DataPlot.RefreshPlotGraphics
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.DataPlot.RefreshPlotGraphics
        name: RefreshPlotGraphics
        nameWithType: DataPlot.RefreshPlotGraphics
        qualifiedName: IVLab.Plotting.DataPlot.RefreshPlotGraphics
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: M:IVLab.Plotting.DataPlot.RefreshPlotGraphics
  IVLab.Plotting.ParallelCoordsPlot.RefreshPlotGraphics*:
    name:
      CSharp:
      - id: IVLab.Plotting.ParallelCoordsPlot.RefreshPlotGraphics*
        name: RefreshPlotGraphics
        nameWithType: ParallelCoordsPlot.RefreshPlotGraphics
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.RefreshPlotGraphics
      VB:
      - id: IVLab.Plotting.ParallelCoordsPlot.RefreshPlotGraphics*
        name: RefreshPlotGraphics
        nameWithType: ParallelCoordsPlot.RefreshPlotGraphics
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.RefreshPlotGraphics
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ParallelCoordsPlot.RefreshPlotGraphics
  IVLab.Plotting.ParallelCoordsPlot.FlipAxis*:
    name:
      CSharp:
      - id: IVLab.Plotting.ParallelCoordsPlot.FlipAxis*
        name: FlipAxis
        nameWithType: ParallelCoordsPlot.FlipAxis
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.FlipAxis
      VB:
      - id: IVLab.Plotting.ParallelCoordsPlot.FlipAxis*
        name: FlipAxis
        nameWithType: ParallelCoordsPlot.FlipAxis
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.FlipAxis
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ParallelCoordsPlot.FlipAxis
  IVLab.Plotting.DataPlot.Plot:
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.Plot
        name: Plot
        nameWithType: DataPlot.Plot
        qualifiedName: IVLab.Plotting.DataPlot.Plot
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.DataPlot.Plot
        name: Plot
        nameWithType: DataPlot.Plot
        qualifiedName: IVLab.Plotting.DataPlot.Plot
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: M:IVLab.Plotting.DataPlot.Plot
  IVLab.Plotting.ParallelCoordsPlot.Plot*:
    name:
      CSharp:
      - id: IVLab.Plotting.ParallelCoordsPlot.Plot*
        name: Plot
        nameWithType: ParallelCoordsPlot.Plot
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.Plot
      VB:
      - id: IVLab.Plotting.ParallelCoordsPlot.Plot*
        name: Plot
        nameWithType: ParallelCoordsPlot.Plot
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.Plot
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ParallelCoordsPlot.Plot
  IVLab.Plotting.DataPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State):
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
        name: ClickSelection
        nameWithType: DataPlot.ClickSelection
        qualifiedName: IVLab.Plotting.DataPlot.ClickSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.SelectionMode.State
        name: SelectionMode.State
        nameWithType: SelectionMode.State
        qualifiedName: IVLab.Plotting.SelectionMode.State
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.DataPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
        name: ClickSelection
        nameWithType: DataPlot.ClickSelection
        qualifiedName: IVLab.Plotting.DataPlot.ClickSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.SelectionMode.State
        name: SelectionMode.State
        nameWithType: SelectionMode.State
        qualifiedName: IVLab.Plotting.SelectionMode.State
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: M:IVLab.Plotting.DataPlot.ClickSelection(Vector2,IVLab.Plotting.SelectionMode.State)
  IVLab.Plotting.ParallelCoordsPlot.ClickSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.ParallelCoordsPlot.ClickSelection*
        name: ClickSelection
        nameWithType: ParallelCoordsPlot.ClickSelection
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.ClickSelection
      VB:
      - id: IVLab.Plotting.ParallelCoordsPlot.ClickSelection*
        name: ClickSelection
        nameWithType: ParallelCoordsPlot.ClickSelection
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.ClickSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ParallelCoordsPlot.ClickSelection
  IVLab.Plotting.DataPlot.RectSelection(RectTransform):
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.RectSelection(RectTransform)
        name: RectSelection
        nameWithType: DataPlot.RectSelection
        qualifiedName: IVLab.Plotting.DataPlot.RectSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.DataPlot.RectSelection(RectTransform)
        name: RectSelection
        nameWithType: DataPlot.RectSelection
        qualifiedName: IVLab.Plotting.DataPlot.RectSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: M:IVLab.Plotting.DataPlot.RectSelection(RectTransform)
  IVLab.Plotting.ParallelCoordsPlot.RectSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.ParallelCoordsPlot.RectSelection*
        name: RectSelection
        nameWithType: ParallelCoordsPlot.RectSelection
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.RectSelection
      VB:
      - id: IVLab.Plotting.ParallelCoordsPlot.RectSelection*
        name: RectSelection
        nameWithType: ParallelCoordsPlot.RectSelection
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.RectSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ParallelCoordsPlot.RectSelection
  IVLab.Plotting.DataPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State):
    name:
      CSharp:
      - id: IVLab.Plotting.DataPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
        name: BrushSelection
        nameWithType: DataPlot.BrushSelection
        qualifiedName: IVLab.Plotting.DataPlot.BrushSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.SelectionMode.State
        name: SelectionMode.State
        nameWithType: SelectionMode.State
        qualifiedName: IVLab.Plotting.SelectionMode.State
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.DataPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
        name: BrushSelection
        nameWithType: DataPlot.BrushSelection
        qualifiedName: IVLab.Plotting.DataPlot.BrushSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IVLab.Plotting.SelectionMode.State
        name: SelectionMode.State
        nameWithType: SelectionMode.State
        qualifiedName: IVLab.Plotting.SelectionMode.State
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.DataPlot
    commentId: M:IVLab.Plotting.DataPlot.BrushSelection(Vector2,Vector2,IVLab.Plotting.SelectionMode.State)
  IVLab.Plotting.ParallelCoordsPlot.BrushSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.ParallelCoordsPlot.BrushSelection*
        name: BrushSelection
        nameWithType: ParallelCoordsPlot.BrushSelection
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.BrushSelection
      VB:
      - id: IVLab.Plotting.ParallelCoordsPlot.BrushSelection*
        name: BrushSelection
        nameWithType: ParallelCoordsPlot.BrushSelection
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot.BrushSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ParallelCoordsPlot.BrushSelection
  IVLab.Plotting.ParallelCoordsPlot:
    name:
      CSharp:
      - id: IVLab.Plotting.ParallelCoordsPlot
        name: ParallelCoordsPlot
        nameWithType: ParallelCoordsPlot
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot
      VB:
      - id: IVLab.Plotting.ParallelCoordsPlot
        name: ParallelCoordsPlot
        nameWithType: ParallelCoordsPlot
        qualifiedName: IVLab.Plotting.ParallelCoordsPlot
    isDefinition: true
    commentId: T:IVLab.Plotting.ParallelCoordsPlot
  Global.TMP_Dropdown:
    name:
      CSharp:
      - id: Global.TMP_Dropdown
        name: TMP_Dropdown
        nameWithType: TMP_Dropdown
        qualifiedName: TMP_Dropdown
        isExternal: true
      VB:
      - id: Global.TMP_Dropdown
        name: TMP_Dropdown
        nameWithType: TMP_Dropdown
        qualifiedName: TMP_Dropdown
        isExternal: true
    isDefinition: true
  Global.Transform:
    name:
      CSharp:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Global.Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  Global.Vector2[]:
    name:
      CSharp:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.ParticleSystem:
    name:
      CSharp:
      - id: Global.ParticleSystem
        name: ParticleSystem
        nameWithType: ParticleSystem
        qualifiedName: ParticleSystem
        isExternal: true
      VB:
      - id: Global.ParticleSystem
        name: ParticleSystem
        nameWithType: ParticleSystem
        qualifiedName: ParticleSystem
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ParticleSystem'
  Global.ParticleSystem.Particle[]:
    name:
      CSharp:
      - id: Global.ParticleSystem.Particle
        name: ParticleSystem.Particle
        nameWithType: ParticleSystem.Particle
        qualifiedName: ParticleSystem.Particle
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Global.ParticleSystem.Particle
        name: ParticleSystem.Particle
        nameWithType: ParticleSystem.Particle
        qualifiedName: ParticleSystem.Particle
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IVLab.Plotting.ScatterPlot.Init*:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.Init*
        name: Init
        nameWithType: ScatterPlot.Init
        qualifiedName: IVLab.Plotting.ScatterPlot.Init
      VB:
      - id: IVLab.Plotting.ScatterPlot.Init*
        name: Init
        nameWithType: ScatterPlot.Init
        qualifiedName: IVLab.Plotting.ScatterPlot.Init
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ScatterPlot.Init
  IVLab.Plotting.ScatterPlot.SetPlotSize*:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.SetPlotSize*
        name: SetPlotSize
        nameWithType: ScatterPlot.SetPlotSize
        qualifiedName: IVLab.Plotting.ScatterPlot.SetPlotSize
      VB:
      - id: IVLab.Plotting.ScatterPlot.SetPlotSize*
        name: SetPlotSize
        nameWithType: ScatterPlot.SetPlotSize
        qualifiedName: IVLab.Plotting.ScatterPlot.SetPlotSize
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ScatterPlot.SetPlotSize
  IVLab.Plotting.ScatterPlot.UpdateDataPoint*:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.UpdateDataPoint*
        name: UpdateDataPoint
        nameWithType: ScatterPlot.UpdateDataPoint
        qualifiedName: IVLab.Plotting.ScatterPlot.UpdateDataPoint
      VB:
      - id: IVLab.Plotting.ScatterPlot.UpdateDataPoint*
        name: UpdateDataPoint
        nameWithType: ScatterPlot.UpdateDataPoint
        qualifiedName: IVLab.Plotting.ScatterPlot.UpdateDataPoint
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ScatterPlot.UpdateDataPoint
  IVLab.Plotting.ScatterPlot.RefreshPlotGraphics*:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.RefreshPlotGraphics*
        name: RefreshPlotGraphics
        nameWithType: ScatterPlot.RefreshPlotGraphics
        qualifiedName: IVLab.Plotting.ScatterPlot.RefreshPlotGraphics
      VB:
      - id: IVLab.Plotting.ScatterPlot.RefreshPlotGraphics*
        name: RefreshPlotGraphics
        nameWithType: ScatterPlot.RefreshPlotGraphics
        qualifiedName: IVLab.Plotting.ScatterPlot.RefreshPlotGraphics
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ScatterPlot.RefreshPlotGraphics
  IVLab.Plotting.ScatterPlot.Plot*:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.Plot*
        name: Plot
        nameWithType: ScatterPlot.Plot
        qualifiedName: IVLab.Plotting.ScatterPlot.Plot
      VB:
      - id: IVLab.Plotting.ScatterPlot.Plot*
        name: Plot
        nameWithType: ScatterPlot.Plot
        qualifiedName: IVLab.Plotting.ScatterPlot.Plot
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ScatterPlot.Plot
  IVLab.Plotting.ScatterPlot.xDropdownUpdated*:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.xDropdownUpdated*
        name: xDropdownUpdated
        nameWithType: ScatterPlot.xDropdownUpdated
        qualifiedName: IVLab.Plotting.ScatterPlot.xDropdownUpdated
      VB:
      - id: IVLab.Plotting.ScatterPlot.xDropdownUpdated*
        name: xDropdownUpdated
        nameWithType: ScatterPlot.xDropdownUpdated
        qualifiedName: IVLab.Plotting.ScatterPlot.xDropdownUpdated
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ScatterPlot.xDropdownUpdated
  IVLab.Plotting.ScatterPlot.yDropdownUpdated*:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.yDropdownUpdated*
        name: yDropdownUpdated
        nameWithType: ScatterPlot.yDropdownUpdated
        qualifiedName: IVLab.Plotting.ScatterPlot.yDropdownUpdated
      VB:
      - id: IVLab.Plotting.ScatterPlot.yDropdownUpdated*
        name: yDropdownUpdated
        nameWithType: ScatterPlot.yDropdownUpdated
        qualifiedName: IVLab.Plotting.ScatterPlot.yDropdownUpdated
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ScatterPlot.yDropdownUpdated
  IVLab.Plotting.ScatterPlot.DropdownSetColumnNames*:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames*
        name: DropdownSetColumnNames
        nameWithType: ScatterPlot.DropdownSetColumnNames
        qualifiedName: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames
      VB:
      - id: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames*
        name: DropdownSetColumnNames
        nameWithType: ScatterPlot.DropdownSetColumnNames
        qualifiedName: IVLab.Plotting.ScatterPlot.DropdownSetColumnNames
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ScatterPlot.DropdownSetColumnNames
  IVLab.Plotting.ScatterPlot.ClickSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.ClickSelection*
        name: ClickSelection
        nameWithType: ScatterPlot.ClickSelection
        qualifiedName: IVLab.Plotting.ScatterPlot.ClickSelection
      VB:
      - id: IVLab.Plotting.ScatterPlot.ClickSelection*
        name: ClickSelection
        nameWithType: ScatterPlot.ClickSelection
        qualifiedName: IVLab.Plotting.ScatterPlot.ClickSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ScatterPlot.ClickSelection
  IVLab.Plotting.ScatterPlot.RectSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.RectSelection*
        name: RectSelection
        nameWithType: ScatterPlot.RectSelection
        qualifiedName: IVLab.Plotting.ScatterPlot.RectSelection
      VB:
      - id: IVLab.Plotting.ScatterPlot.RectSelection*
        name: RectSelection
        nameWithType: ScatterPlot.RectSelection
        qualifiedName: IVLab.Plotting.ScatterPlot.RectSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ScatterPlot.RectSelection
  IVLab.Plotting.ScatterPlot.BrushSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.ScatterPlot.BrushSelection*
        name: BrushSelection
        nameWithType: ScatterPlot.BrushSelection
        qualifiedName: IVLab.Plotting.ScatterPlot.BrushSelection
      VB:
      - id: IVLab.Plotting.ScatterPlot.BrushSelection*
        name: BrushSelection
        nameWithType: ScatterPlot.BrushSelection
        qualifiedName: IVLab.Plotting.ScatterPlot.BrushSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ScatterPlot.BrushSelection
  IVLab.Plotting.SelectionMode.plotsCamera:
    name:
      CSharp:
      - id: IVLab.Plotting.SelectionMode.plotsCamera
        name: plotsCamera
        nameWithType: SelectionMode.plotsCamera
        qualifiedName: IVLab.Plotting.SelectionMode.plotsCamera
      VB:
      - id: IVLab.Plotting.SelectionMode.plotsCamera
        name: plotsCamera
        nameWithType: SelectionMode.plotsCamera
        qualifiedName: IVLab.Plotting.SelectionMode.plotsCamera
    isDefinition: true
    parent: IVLab.Plotting.SelectionMode
    commentId: F:IVLab.Plotting.SelectionMode.plotsCamera
  IVLab.Plotting.SelectionMode.currentDataPlot:
    name:
      CSharp:
      - id: IVLab.Plotting.SelectionMode.currentDataPlot
        name: currentDataPlot
        nameWithType: SelectionMode.currentDataPlot
        qualifiedName: IVLab.Plotting.SelectionMode.currentDataPlot
      VB:
      - id: IVLab.Plotting.SelectionMode.currentDataPlot
        name: currentDataPlot
        nameWithType: SelectionMode.currentDataPlot
        qualifiedName: IVLab.Plotting.SelectionMode.currentDataPlot
    isDefinition: true
    parent: IVLab.Plotting.SelectionMode
    commentId: F:IVLab.Plotting.SelectionMode.currentDataPlot
  IVLab.Plotting.SelectionMode.currentPlotRect:
    name:
      CSharp:
      - id: IVLab.Plotting.SelectionMode.currentPlotRect
        name: currentPlotRect
        nameWithType: SelectionMode.currentPlotRect
        qualifiedName: IVLab.Plotting.SelectionMode.currentPlotRect
      VB:
      - id: IVLab.Plotting.SelectionMode.currentPlotRect
        name: currentPlotRect
        nameWithType: SelectionMode.currentPlotRect
        qualifiedName: IVLab.Plotting.SelectionMode.currentPlotRect
    isDefinition: true
    parent: IVLab.Plotting.SelectionMode
    commentId: F:IVLab.Plotting.SelectionMode.currentPlotRect
  IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2):
    name:
      CSharp:
      - id: IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
        name: StartSelection
        nameWithType: SelectionMode.StartSelection
        qualifiedName: IVLab.Plotting.SelectionMode.StartSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IVLab.Plotting.DataPlot
        name: DataPlot
        nameWithType: DataPlot
        qualifiedName: IVLab.Plotting.DataPlot
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
        name: StartSelection
        nameWithType: SelectionMode.StartSelection
        qualifiedName: IVLab.Plotting.SelectionMode.StartSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IVLab.Plotting.DataPlot
        name: DataPlot
        nameWithType: DataPlot
        qualifiedName: IVLab.Plotting.DataPlot
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.SelectionMode
    commentId: M:IVLab.Plotting.SelectionMode.StartSelection(IVLab.Plotting.DataPlot,Vector2)
  IVLab.Plotting.BrushSelectionMode.StartSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.BrushSelectionMode.StartSelection*
        name: StartSelection
        nameWithType: BrushSelectionMode.StartSelection
        qualifiedName: IVLab.Plotting.BrushSelectionMode.StartSelection
      VB:
      - id: IVLab.Plotting.BrushSelectionMode.StartSelection*
        name: StartSelection
        nameWithType: BrushSelectionMode.StartSelection
        qualifiedName: IVLab.Plotting.BrushSelectionMode.StartSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.BrushSelectionMode.StartSelection
  IVLab.Plotting.SelectionMode.UpdateSelection(Vector2):
    name:
      CSharp:
      - id: IVLab.Plotting.SelectionMode.UpdateSelection(Vector2)
        name: UpdateSelection
        nameWithType: SelectionMode.UpdateSelection
        qualifiedName: IVLab.Plotting.SelectionMode.UpdateSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.SelectionMode.UpdateSelection(Vector2)
        name: UpdateSelection
        nameWithType: SelectionMode.UpdateSelection
        qualifiedName: IVLab.Plotting.SelectionMode.UpdateSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.SelectionMode
    commentId: M:IVLab.Plotting.SelectionMode.UpdateSelection(Vector2)
  IVLab.Plotting.BrushSelectionMode.UpdateSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.BrushSelectionMode.UpdateSelection*
        name: UpdateSelection
        nameWithType: BrushSelectionMode.UpdateSelection
        qualifiedName: IVLab.Plotting.BrushSelectionMode.UpdateSelection
      VB:
      - id: IVLab.Plotting.BrushSelectionMode.UpdateSelection*
        name: UpdateSelection
        nameWithType: BrushSelectionMode.UpdateSelection
        qualifiedName: IVLab.Plotting.BrushSelectionMode.UpdateSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.BrushSelectionMode.UpdateSelection
  IVLab.Plotting.SelectionMode.EndSelection(Vector2):
    name:
      CSharp:
      - id: IVLab.Plotting.SelectionMode.EndSelection(Vector2)
        name: EndSelection
        nameWithType: SelectionMode.EndSelection
        qualifiedName: IVLab.Plotting.SelectionMode.EndSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: IVLab.Plotting.SelectionMode.EndSelection(Vector2)
        name: EndSelection
        nameWithType: SelectionMode.EndSelection
        qualifiedName: IVLab.Plotting.SelectionMode.EndSelection
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: IVLab.Plotting.SelectionMode
    commentId: M:IVLab.Plotting.SelectionMode.EndSelection(Vector2)
  IVLab.Plotting.BrushSelectionMode.EndSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.BrushSelectionMode.EndSelection*
        name: EndSelection
        nameWithType: BrushSelectionMode.EndSelection
        qualifiedName: IVLab.Plotting.BrushSelectionMode.EndSelection
      VB:
      - id: IVLab.Plotting.BrushSelectionMode.EndSelection*
        name: EndSelection
        nameWithType: BrushSelectionMode.EndSelection
        qualifiedName: IVLab.Plotting.BrushSelectionMode.EndSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.BrushSelectionMode.EndSelection
  IVLab.Plotting.ClickSelectionMode.StartSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.ClickSelectionMode.StartSelection*
        name: StartSelection
        nameWithType: ClickSelectionMode.StartSelection
        qualifiedName: IVLab.Plotting.ClickSelectionMode.StartSelection
      VB:
      - id: IVLab.Plotting.ClickSelectionMode.StartSelection*
        name: StartSelection
        nameWithType: ClickSelectionMode.StartSelection
        qualifiedName: IVLab.Plotting.ClickSelectionMode.StartSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ClickSelectionMode.StartSelection
  IVLab.Plotting.ClickSelectionMode.UpdateSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.ClickSelectionMode.UpdateSelection*
        name: UpdateSelection
        nameWithType: ClickSelectionMode.UpdateSelection
        qualifiedName: IVLab.Plotting.ClickSelectionMode.UpdateSelection
      VB:
      - id: IVLab.Plotting.ClickSelectionMode.UpdateSelection*
        name: UpdateSelection
        nameWithType: ClickSelectionMode.UpdateSelection
        qualifiedName: IVLab.Plotting.ClickSelectionMode.UpdateSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ClickSelectionMode.UpdateSelection
  IVLab.Plotting.ClickSelectionMode.EndSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.ClickSelectionMode.EndSelection*
        name: EndSelection
        nameWithType: ClickSelectionMode.EndSelection
        qualifiedName: IVLab.Plotting.ClickSelectionMode.EndSelection
      VB:
      - id: IVLab.Plotting.ClickSelectionMode.EndSelection*
        name: EndSelection
        nameWithType: ClickSelectionMode.EndSelection
        qualifiedName: IVLab.Plotting.ClickSelectionMode.EndSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.ClickSelectionMode.EndSelection
  IVLab.Plotting.RectSelectionMode.StartSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.RectSelectionMode.StartSelection*
        name: StartSelection
        nameWithType: RectSelectionMode.StartSelection
        qualifiedName: IVLab.Plotting.RectSelectionMode.StartSelection
      VB:
      - id: IVLab.Plotting.RectSelectionMode.StartSelection*
        name: StartSelection
        nameWithType: RectSelectionMode.StartSelection
        qualifiedName: IVLab.Plotting.RectSelectionMode.StartSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.RectSelectionMode.StartSelection
  IVLab.Plotting.RectSelectionMode.UpdateSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.RectSelectionMode.UpdateSelection*
        name: UpdateSelection
        nameWithType: RectSelectionMode.UpdateSelection
        qualifiedName: IVLab.Plotting.RectSelectionMode.UpdateSelection
      VB:
      - id: IVLab.Plotting.RectSelectionMode.UpdateSelection*
        name: UpdateSelection
        nameWithType: RectSelectionMode.UpdateSelection
        qualifiedName: IVLab.Plotting.RectSelectionMode.UpdateSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.RectSelectionMode.UpdateSelection
  IVLab.Plotting.RectSelectionMode.EndSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.RectSelectionMode.EndSelection*
        name: EndSelection
        nameWithType: RectSelectionMode.EndSelection
        qualifiedName: IVLab.Plotting.RectSelectionMode.EndSelection
      VB:
      - id: IVLab.Plotting.RectSelectionMode.EndSelection*
        name: EndSelection
        nameWithType: RectSelectionMode.EndSelection
        qualifiedName: IVLab.Plotting.RectSelectionMode.EndSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.RectSelectionMode.EndSelection
  Global.Camera:
    name:
      CSharp:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      VB:
      - id: Global.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
    isDefinition: true
    commentId: '!:Global.Camera'
  IVLab.Plotting.SelectionMode.StartSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.SelectionMode.StartSelection*
        name: StartSelection
        nameWithType: SelectionMode.StartSelection
        qualifiedName: IVLab.Plotting.SelectionMode.StartSelection
      VB:
      - id: IVLab.Plotting.SelectionMode.StartSelection*
        name: StartSelection
        nameWithType: SelectionMode.StartSelection
        qualifiedName: IVLab.Plotting.SelectionMode.StartSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.SelectionMode.StartSelection
  IVLab.Plotting.SelectionMode.UpdateSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.SelectionMode.UpdateSelection*
        name: UpdateSelection
        nameWithType: SelectionMode.UpdateSelection
        qualifiedName: IVLab.Plotting.SelectionMode.UpdateSelection
      VB:
      - id: IVLab.Plotting.SelectionMode.UpdateSelection*
        name: UpdateSelection
        nameWithType: SelectionMode.UpdateSelection
        qualifiedName: IVLab.Plotting.SelectionMode.UpdateSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.SelectionMode.UpdateSelection
  IVLab.Plotting.SelectionMode.EndSelection*:
    name:
      CSharp:
      - id: IVLab.Plotting.SelectionMode.EndSelection*
        name: EndSelection
        nameWithType: SelectionMode.EndSelection
        qualifiedName: IVLab.Plotting.SelectionMode.EndSelection
      VB:
      - id: IVLab.Plotting.SelectionMode.EndSelection*
        name: EndSelection
        nameWithType: SelectionMode.EndSelection
        qualifiedName: IVLab.Plotting.SelectionMode.EndSelection
    isDefinition: true
    commentId: Overload:IVLab.Plotting.SelectionMode.EndSelection
