{
  "api/IVLab.Plotting.BrushSelectionMode.html": {
    "href": "api/IVLab.Plotting.BrushSelectionMode.html",
    "title": "Class BrushSelectionMode | IVLab 2DPlotting",
    "keywords": "Class BrushSelectionMode A brush-like SelectionMode that asks the current DataPlot it is working on to select any data points that have been brushed over since it was last updated. Inheritance Object SelectionMode BrushSelectionMode Inherited Members SelectionMode.plotsCamera SelectionMode.currentDataPlot SelectionMode.currentPlotRect Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class BrushSelectionMode : SelectionMode Fields selectionGraphicsParent Parent object that stores selection graphics when they are not in use. Declaration protected Transform selectionGraphicsParent Field Value Type Description Transform Methods EndSelection(Vector2) Finalize the selection by updating it one last time and then deactivating the selection brush. Declaration public override void EndSelection(Vector2 mousePosition) Parameters Type Name Description Vector2 mousePosition Current mouse position in pixel coordinates (as from Input.mousePosition). Overrides SelectionMode.EndSelection(Vector2) StartSelection(DataPlot, Vector2) Set reference to the data plot this selection is now acting in, then reset, activate, and determine the starting position of the selection brush before finally calling the current data plot's method to handle brush selection interaction. Declaration public override void StartSelection(DataPlot dataPlot, Vector2 mousePosition) Parameters Type Name Description DataPlot dataPlot Data plot the selection is now acting on. Vector2 mousePosition Current mouse position in pixel coordinates (as from Input.mousePosition). Overrides SelectionMode.StartSelection(DataPlot, Vector2) UpdateSelection(Vector2) Update the current selection using the distance that the brush has traveled since it was last updated. Declaration public override void UpdateSelection(Vector2 mousePosition) Parameters Type Name Description Vector2 mousePosition Current mouse position in pixel coordinates (as from Input.mousePosition). Overrides SelectionMode.UpdateSelection(Vector2)"
  },
  "api/IVLab.Plotting.ClickSelectionMode.html": {
    "href": "api/IVLab.Plotting.ClickSelectionMode.html",
    "title": "Class ClickSelectionMode | IVLab 2DPlotting",
    "keywords": "Class ClickSelectionMode A click-based SelectionMode that asks the current DataPlot it is working on to select the nearest data point that lies within the click position. Inheritance Object SelectionMode ClickSelectionMode Inherited Members SelectionMode.plotsCamera SelectionMode.currentDataPlot SelectionMode.currentPlotRect Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class ClickSelectionMode : SelectionMode Methods EndSelection(Vector2) End the click selection. This is the same as updating the selection. Declaration public override void EndSelection(Vector2 mousePosition) Parameters Type Name Description Vector2 mousePosition Current mouse position in pixel coordinates (as from Input.mousePosition). Overrides SelectionMode.EndSelection(Vector2) StartSelection(DataPlot, Vector2) Set references to the data plot this selection is currently acting in and begin the selection. Declaration public override void StartSelection(DataPlot dataPlot, Vector2 mousePosition) Parameters Type Name Description DataPlot dataPlot Data plot the selection is now acting on. Vector2 mousePosition Current mouse position in pixel coordinates (as from Input.mousePosition). Overrides SelectionMode.StartSelection(DataPlot, Vector2) UpdateSelection(Vector2) Update the click selection by calling the current data plot's click selection method. Declaration public override void UpdateSelection(Vector2 mousePosition) Parameters Type Name Description Vector2 mousePosition Current mouse position in pixel coordinates (as from Input.mousePosition). Overrides SelectionMode.UpdateSelection(Vector2)"
  },
  "api/IVLab.Plotting.ClusterPlot.html": {
    "href": "api/IVLab.Plotting.ClusterPlot.html",
    "title": "Class ClusterPlot | IVLab 2DPlotting",
    "keywords": "Class ClusterPlot An implementation of ScatterPlot that allows data points to be clustered together so that related data can be selected all at once. Inheritance Object DataPlot ScatterPlot ClusterPlot Implements ILinkedData Inherited Members ScatterPlot.pointSize ScatterPlot.scaleToOrigin ScatterPlot.plotParticleSystemPrefab ScatterPlot.axisLabelPrefab ScatterPlot.xDropdown ScatterPlot.yDropdown ScatterPlot.dropdownCanvas ScatterPlot.plotParticlesParent ScatterPlot.axisLabelsParent ScatterPlot.xAxisLabel ScatterPlot.yAxisLabel ScatterPlot.xColumnIdx ScatterPlot.yColumnIdx ScatterPlot.pointPositions ScatterPlot.plotParticleSystem ScatterPlot.pointParticles ScatterPlot.clickedPointIdx ScatterPlot.SetPlotSize() ScatterPlot.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes) ScatterPlot.RefreshPlotGraphics() ScatterPlot.Plot() ScatterPlot.RectSelection(RectTransform) DataPlot.outerBounds DataPlot.innerBounds DataPlot.padding DataPlot.defaultColor DataPlot.highlightedColor DataPlot.maskedColor DataPlot.selectionPadding DataPlot.clickSelectionRadius DataPlot.brushSelectionRadius DataPlot.plotMask DataPlot.plotOuterRect DataPlot.plotInnerRect DataPlot.plotSelectionRect DataPlot.deleteButton DataPlot.dataTable DataPlot.linkedIndices DataPlot.plotsCanvas DataPlot.selectedIndexDictionary DataPlot.selectedDataPointIndices DataPlot.selectedDataPointMins DataPlot.selectedDataPointMaxes DataPlot.PlotMask DataPlot.PlotOuterRect DataPlot.PlotSelectionRect DataPlot.BrushRadius DataPlot.ResizePlot(Vector2) Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class ClusterPlot : ScatterPlot, ILinkedData Methods BrushSelection(Vector2, Vector2, SelectionMode.State) Declaration public override void BrushSelection(Vector2 prevBrushPosition, Vector2 brushDelta, SelectionMode.State selectionState) Parameters Type Name Description Vector2 prevBrushPosition Vector2 brushDelta SelectionMode.State selectionState Overrides ScatterPlot.BrushSelection(Vector2, Vector2, SelectionMode.State) ClickSelection(Vector2, SelectionMode.State) Declaration public override void ClickSelection(Vector2 selectionPosition, SelectionMode.State selectionState) Parameters Type Name Description Vector2 selectionPosition SelectionMode.State selectionState Overrides ScatterPlot.ClickSelection(Vector2, SelectionMode.State) DropdownSetColumnNames() Declaration protected override void DropdownSetColumnNames() Overrides ScatterPlot.DropdownSetColumnNames() Init(DataPlotManager, Vector2, Int32[]) Initialize the plot by first initializing it as a scatter plot, and then generating the list of clusters using the provided data table. Declaration public override void Init(DataPlotManager dataPlotManager, Vector2 outerBounds, int[] selectedDataPointIndices = null) Parameters Type Name Description DataPlotManager dataPlotManager Manager of the plot: contains references to the DataTable and LinkedIndices that the plot works from. Vector2 outerBounds Size to set the outer bounds of the plot. Int32 [] selectedDataPointIndices Array of data point indices the plot should display. If null , all data points will be displayed by default. Overrides ScatterPlot.Init(DataPlotManager, Vector2, Int32[]) xDropdownUpdated() Declaration protected override void xDropdownUpdated() Overrides ScatterPlot.xDropdownUpdated() yDropdownUpdated() Declaration protected override void yDropdownUpdated() Overrides ScatterPlot.yDropdownUpdated() Implements ILinkedData"
  },
  "api/IVLab.Plotting.DataManager.html": {
    "href": "api/IVLab.Plotting.DataManager.html",
    "title": "Class DataManager | IVLab 2DPlotting",
    "keywords": "Class DataManager Manages data, primarily by way of loading the DataTable used by the DataPlotManager , and by maintaining a reference to the LinkedIndices related to that data, from which Inheritance Object DataManager Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class DataManager : MonoBehaviour Properties DataTable Declaration public DataTable DataTable { get; } Property Value Type Description DataTable LinkedIndices Declaration public LinkedIndices LinkedIndices { get; } Property Value Type Description LinkedIndices"
  },
  "api/IVLab.Plotting.DataPlot.html": {
    "href": "api/IVLab.Plotting.DataPlot.html",
    "title": "Class DataPlot | IVLab 2DPlotting",
    "keywords": "Class DataPlot An abstract class that declares (and defines) variables and methods that are ubiquitous to all data plot implementations, such as plotting, updating, resizing and selection functionalities. Inheritance Object DataPlot ParallelCoordsPlot ScatterPlot Implements ILinkedData Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public abstract class DataPlot : MonoBehaviour, ILinkedData Fields brushSelectionRadius Radius of the BrushSelectionMode brush for the plot. Declaration protected float brushSelectionRadius Field Value Type Description Single clickSelectionRadius Radius at which the plot's data points can be selected when in ClickSelectionMode . Declaration protected float clickSelectionRadius Field Value Type Description Single dataTable Reference to the data table that the plot plots data from. Declaration protected DataTable dataTable Field Value Type Description DataTable defaultColor The default color of data points in the plot. Declaration protected Color32 defaultColor Field Value Type Description Color32 deleteButton Button used to delete the plot. Declaration protected GameObject deleteButton Field Value Type Description GameObject highlightedColor The color of highlighted data points in the plot. Declaration protected Color32 highlightedColor Field Value Type Description Color32 innerBounds Dimensions of the plot's inner bounding rect (i.e. the dimensions of the plot itself). Declaration protected Vector2 innerBounds Field Value Type Description Vector2 linkedIndices Reference to the linked indices data structure that contains the current state of all of the data points. Declaration protected LinkedIndices linkedIndices Field Value Type Description LinkedIndices maskedColor The color of masked data points in the plot. Declaration protected Color32 maskedColor Field Value Type Description Color32 outerBounds Declaration protected Vector2 outerBounds Field Value Type Description Vector2 padding Padding between the outer bounding rect and the inner bounding rect. Declaration protected Vector2 padding Field Value Type Description Vector2 plotInnerRect Rect transform that visually makes up the plot's inner bounds. Declaration protected RectTransform plotInnerRect Field Value Type Description RectTransform plotMask Declaration protected RectTransform plotMask Field Value Type Description RectTransform plotOuterRect Rect transform that visually makes up the plot's outer bounds. Declaration protected RectTransform plotOuterRect Field Value Type Description RectTransform plotsCanvas The canvas that all plots are children of. Declaration protected Canvas plotsCanvas Field Value Type Description Canvas plotSelectionRect Slightly enlarged version of the inner bounding rect that makes up the valid selection area of the plot. Generated by taking innerBounds + Vector2.One * selectionPadding . Declaration protected RectTransform plotSelectionRect Field Value Type Description RectTransform selectedDataPointIndices Maps \"selected\" indices (the subset of all data point indices that this plot actually plots) to their actual data point indices in the data table. Declaration protected int[] selectedDataPointIndices Field Value Type Description Int32 [] Remarks For inverse see selectedDataPointIndices . Examples For example, if localIndex was an index from local selected index space, we could convert it to data point space as follows: int dataPointIndex = selectedDataPointIndices[index]; selectedDataPointMaxes Maximum value in each column of the data table for only the selected data points the plot plots. Declaration protected float[] selectedDataPointMaxes Field Value Type Description Single [] selectedDataPointMins Minimum value in each column of the data table for only the selected data points the plot plots. Declaration protected float[] selectedDataPointMins Field Value Type Description Single [] selectedIndexDictionary Maps indices from the complete data point index space (i.e. linked index space) into the local \"selected\" index space of the plot (i.e. the subset of the linked indices that the plot plots). Declaration protected Dictionary<int, int> selectedIndexDictionary Field Value Type Description Dictionary < Int32 , Int32 > Remarks For inverse see selectedDataPointIndices . Examples For example, if index was an index from data point space, we could convert it to local space as follows: if (selectedIndexDictionary.ContainsKey(index)) { int localIndex = selectedIndexDictionary[index]; } selectionPadding Padding between the inner bounding rect and the selection rect. Allows the selection rect to be slightly larger than the plot itself, allowing for more forgiving selection interactions. Declaration protected float selectionPadding Field Value Type Description Single Properties BrushRadius Gets brushSelectionRadius . Declaration public float BrushRadius { get; } Property Value Type Description Single PlotMask Gets plotMask . Declaration public RectTransform PlotMask { get; } Property Value Type Description RectTransform PlotOuterRect Gets plotOuterRect . Declaration public RectTransform PlotOuterRect { get; } Property Value Type Description RectTransform PlotSelectionRect Gets plotSelectionRect . Declaration public RectTransform PlotSelectionRect { get; } Property Value Type Description RectTransform Methods BrushSelection(Vector2, Vector2, SelectionMode.State) Controls the plot's reaction to the BrushSelectionMode . Declaration public abstract void BrushSelection(Vector2 prevBrushPosition, Vector2 brushDelta, SelectionMode.State selectionState) Parameters Type Name Description Vector2 prevBrushPosition Previous position of the brush in Canvas space. Vector2 brushDelta Change in position from the brush' previous position to its current. SelectionMode.State selectionState Current SelectionMode.State of the selection. ClickSelection(Vector2, SelectionMode.State) Controls the plot's reaction to the ClickSelectionMode . Declaration public abstract void ClickSelection(Vector2 selectionPosition, SelectionMode.State selectionState) Parameters Type Name Description Vector2 selectionPosition Current mouse/selector position in Canvas space. SelectionMode.State selectionState Current SelectionMode.State of the selection. Init(DataPlotManager, Vector2, Int32[]) Initializes the plot. Ideally called immediately after the plot has been instantiated and before anything else. Declaration public virtual void Init(DataPlotManager dataPlotManager, Vector2 outerBounds, int[] selectedDataPointIndices = null) Parameters Type Name Description DataPlotManager dataPlotManager Manager of the plot: contains references to the DataTable and LinkedIndices that the plot works from. Vector2 outerBounds Size to set the outer bounds of the plot. Int32 [] selectedDataPointIndices Array of data point indices the plot should display. If null , all data points will be displayed by default. Plot() Plots the selected data points and refreshes the plot graphics to match. Declaration public abstract void Plot() RectSelection(RectTransform) Controls the plot's reaction to the RectSelectionMode . Declaration public abstract void RectSelection(RectTransform selectionRect) Parameters Type Name Description RectTransform selectionRect Current rect transform of the selection rect. RefreshPlotGraphics() Refreshes the plot graphics to reflect most recent changes to plot data points. Declaration public abstract void RefreshPlotGraphics() Remarks Often called after a series of UpdateDataPoint() calls. ResizePlot(Vector2) Resizes the plot and sets its new size. Declaration public void ResizePlot(Vector2 outerBounds) Parameters Type Name Description Vector2 outerBounds SetPlotSize() Sets the size of the inner, outer, and selection bounds of the plot, along with the plot mask. Declaration protected virtual void SetPlotSize() UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes) Updates a specific data point according to that data point's current linked index attributes. Declaration public abstract void UpdateDataPoint(int index, LinkedIndices.LinkedAttributes indexAttributes) Parameters Type Name Description Int32 index Index of data point that needs to be updated. LinkedIndices.LinkedAttributes indexAttributes Current attributes of the data point. Implements ILinkedData"
  },
  "api/IVLab.Plotting.DataPlotManager.html": {
    "href": "api/IVLab.Plotting.DataPlotManager.html",
    "title": "Class DataPlotManager | IVLab 2DPlotting",
    "keywords": "Class DataPlotManager Manages the visualization and control of multiple DataPlot objects simultaneously. Inheritance Object DataPlotManager Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class DataPlotManager : MonoBehaviour Properties DataManager Declaration public DataManager DataManager { get; set; } Property Value Type Description DataManager DataPlots Declaration public List<DataPlot> DataPlots { get; } Property Value Type Description List < DataPlot > Methods AddPlot(GameObject) Adds a new plot. Declaration public void AddPlot(GameObject dataPlotPrefab) Parameters Type Name Description GameObject dataPlotPrefab Prefab GameObject containing the data plot. AddPlotFromSelected(GameObject) Adds a new plot using only the currently selected data points. Declaration public void AddPlotFromSelected(GameObject dataPlotPrefab) Parameters Type Name Description GameObject dataPlotPrefab Prefab GameObject containing the data plot. DisableSelection() Disables selection so that clicking the mouse has no effect. Declaration public void DisableSelection() EnableSelection() Enables selection so that clicking the mouse once again starts a selection. Declaration public void EnableSelection() RemovePlot(DataPlot) Removes and destroys the specified plot, if it is being managed by this class. Declaration public void RemovePlot(DataPlot dataPlot) Parameters Type Name Description DataPlot dataPlot Script attached to the data plot GameObject that we wish to remove. SetCurrentSelectionMode(SelectionMode) Sets the current selection mode used by this plot manager. Declaration public void SetCurrentSelectionMode(SelectionMode selectionMode) Parameters Type Name Description SelectionMode selectionMode ToggleMasking() Toggles masking. Declaration public void ToggleMasking()"
  },
  "api/IVLab.Plotting.DataTable.html": {
    "href": "api/IVLab.Plotting.DataTable.html",
    "title": "Class DataTable | IVLab 2DPlotting",
    "keywords": "Class DataTable Column-major data table that can be initialized from a basic CSV. Inheritance Object DataTable Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class DataTable Constructors DataTable() Default constructor initializes random table with 10,000 data points. Declaration public DataTable() DataTable(Int32) Initializes a random table with a specified number of data points. Declaration public DataTable(int numDataPoints) Parameters Type Name Description Int32 numDataPoints DataTable(String) Filename constructor that attempts to initialize a table from the given csv filename. Declaration public DataTable(string filename) Parameters Type Name Description String filename Name of the csv file, excluding .csv. Properties ColumnMaxes Tracks the maximum value in each column. Declaration public float[] ColumnMaxes { get; } Property Value Type Description Single [] ColumnMins Tracks the minimum value in each column. Declaration public float[] ColumnMins { get; } Property Value Type Description Single [] ColumnNames Name of each column in the data table, excluding the first column (which should be the data point / row ID column). Declaration public string[] ColumnNames { get; } Property Value Type Description String [] Data 2x2 matrix of the numeric data stored in the data table. Declaration public float[][] Data { get; } Property Value Type Description Single [][] Remarks Data is stored in column-major order! Examples Column-major order means that if we wish to access the ij'th element of the data matrix, we must use float element_ij = data[j][i]; (instead of data[i][j] ) Height Height of the data table, also the number of rows. Declaration public int Height { get; } Property Value Type Description Int32 Remarks If data table was created from csv, this does not take into account the header row! RowIDs Each row of the data table represents a data point, and each data point has a (hopefully) unique ID. Declaration public string[] RowIDs { get; } Property Value Type Description String [] Width Width of the data table, also the number of rows. Declaration public int Width { get; } Property Value Type Description Int32 Remarks If data table was created from csv, this does not take into account the first column! Methods ColumnDataMinMax(Int32) Returns the min and max of a specified column. Declaration public (float, float) ColumnDataMinMax(int j) Parameters Type Name Description Int32 j Index of the specified column. Returns Type Description (T1, T2) < Single , Single > Empty() Whether or not the table is empty. Declaration public bool Empty() Returns Type Description Boolean InitializeRandomTable(Int32) Initializes a data table of random size populated with random numeric data. Declaration public void InitializeRandomTable(int dataPointsCount = 10000) Parameters Type Name Description Int32 dataPointsCount Number of data points to add to the random table. InitializeTableFromCSV(String) Reads a csv file and loads it into corresponding data table arrays. Declaration public void InitializeTableFromCSV(string filename) Parameters Type Name Description String filename Remarks This is a modified version of the CSVReader written here: https://bravenewmethod.com/2014/09/13/lightweight-csv-reader-for-unity/ ."
  },
  "api/IVLab.Plotting.html": {
    "href": "api/IVLab.Plotting.html",
    "title": "Namespace IVLab.Plotting | IVLab 2DPlotting",
    "keywords": "Namespace IVLab.Plotting Classes BrushSelectionMode A brush-like SelectionMode that asks the current DataPlot it is working on to select any data points that have been brushed over since it was last updated. ClickSelectionMode A click-based SelectionMode that asks the current DataPlot it is working on to select the nearest data point that lies within the click position. ClusterPlot An implementation of ScatterPlot that allows data points to be clustered together so that related data can be selected all at once. DataManager Manages data, primarily by way of loading the DataTable used by the DataPlotManager , and by maintaining a reference to the LinkedIndices related to that data, from which DataPlot An abstract class that declares (and defines) variables and methods that are ubiquitous to all data plot implementations, such as plotting, updating, resizing and selection functionalities. DataPlotManager Manages the visualization and control of multiple DataPlot objects simultaneously. DataTable Column-major data table that can be initialized from a basic CSV. LinkedData Provides definitions for any script that wants to be able to update data in sync with the index space. LinkedDataExample An example class for how one might implement LinkedData . LinkedIndices This class provides an \"index space\" where each index has additional attributes/data attached to it. LinkedIndices.LinkedAttributes This class acts as a container for attributes attached to an individual index. NiceAxisLabel Creates \"nice\" axis labels by taking the min and max values that the axis needs to display and altering them to create an even tick spacing. ParallelCoordsPlot Parallel coordinates plot DataPlot implementation that uses Unity particle systems along with line renderers to efficiently render many data points at once. RectSelectionMode A rectangular SelectionMode that generates a selection rectangle and asks the current DataPlot it is working on to select any data points that lie within it. ScatterPlot Scatter plot DataPlot implementation that uses Unity's particle system to efficiently render many data points at once. SelectionMode Abstract class which declares variables and methods ubiquitous to all possible selection modes. SplitViewController Basic control over the 2D/3D split camera view. Interfaces ILinkedData Interface for any class that contains data points which need to be updated based on the current linked index space. Enums SelectionMode.State Selection states."
  },
  "api/IVLab.Plotting.ILinkedData.html": {
    "href": "api/IVLab.Plotting.ILinkedData.html",
    "title": "Interface ILinkedData | IVLab 2DPlotting",
    "keywords": "Interface ILinkedData Interface for any class that contains data points which need to be updated based on the current linked index space. Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public interface ILinkedData Methods UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes) Declaration void UpdateDataPoint(int index, LinkedIndices.LinkedAttributes linkedAttributes) Parameters Type Name Description Int32 index LinkedIndices.LinkedAttributes linkedAttributes"
  },
  "api/IVLab.Plotting.LinkedData.html": {
    "href": "api/IVLab.Plotting.LinkedData.html",
    "title": "Class LinkedData | IVLab 2DPlotting",
    "keywords": "Class LinkedData Provides definitions for any script that wants to be able to update data in sync with the index space. Inheritance Object LinkedData LinkedDataExample Implements ILinkedData Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public abstract class LinkedData : MonoBehaviour, ILinkedData Methods UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes) Declaration public abstract void UpdateDataPoint(int index, LinkedIndices.LinkedAttributes linkedAttributes) Parameters Type Name Description Int32 index LinkedIndices.LinkedAttributes linkedAttributes Implements ILinkedData"
  },
  "api/IVLab.Plotting.LinkedDataExample.html": {
    "href": "api/IVLab.Plotting.LinkedDataExample.html",
    "title": "Class LinkedDataExample | IVLab 2DPlotting",
    "keywords": "Class LinkedDataExample An example class for how one might implement LinkedData . Inheritance Object LinkedData LinkedDataExample Implements ILinkedData Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class LinkedDataExample : LinkedData, ILinkedData Methods UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes) Declaration public override void UpdateDataPoint(int index, LinkedIndices.LinkedAttributes linkedAttributes) Parameters Type Name Description Int32 index LinkedIndices.LinkedAttributes linkedAttributes Overrides LinkedData.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes) Implements ILinkedData"
  },
  "api/IVLab.Plotting.LinkedIndices.html": {
    "href": "api/IVLab.Plotting.LinkedIndices.html",
    "title": "Class LinkedIndices | IVLab 2DPlotting",
    "keywords": "Class LinkedIndices This class provides an \"index space\" where each index has additional attributes/data attached to it. Inheritance Object LinkedIndices Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class LinkedIndices Constructors LinkedIndices(Int32) Constructor to initialize linked attributes array. Declaration public LinkedIndices(int size) Parameters Type Name Description Int32 size Number of indices. Properties Item[Int32] Allows attributes to be accessed with array accessor, e.g. linkedIndices[i]. Declaration public LinkedIndices.LinkedAttributes this[int index] { get; } Parameters Type Name Description Int32 index Property Value Type Description LinkedIndices.LinkedAttributes LinkedAttributesChanged Gets and sets IVLab.Plotting.LinkedIndices._linkedAttributesChanged . Declaration public bool LinkedAttributesChanged { get; set; } Property Value Type Description Boolean Size Gets IVLab.Plotting.LinkedIndices._size . Declaration public int Size { get; } Property Value Type Description Int32"
  },
  "api/IVLab.Plotting.LinkedIndices.LinkedAttributes.html": {
    "href": "api/IVLab.Plotting.LinkedIndices.LinkedAttributes.html",
    "title": "Class LinkedIndices.LinkedAttributes | IVLab 2DPlotting",
    "keywords": "Class LinkedIndices.LinkedAttributes This class acts as a container for attributes attached to an individual index. Inheritance Object LinkedIndices.LinkedAttributes Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class LinkedAttributes Constructors LinkedAttributes(LinkedIndices) Constructor takes a reference to the LinkedIndices object that holds the array of which this LinkedAtrribute is a part of. Declaration public LinkedAttributes(LinkedIndices linkedIndices) Parameters Type Name Description LinkedIndices linkedIndices Properties Highlighted Gets and sets IVLab.Plotting.LinkedIndices.LinkedAttributes._highlighted , automatically toggling IVLab.Plotting.LinkedIndices.LinkedAttributes._linkedAttributeChanged and IVLab.Plotting.LinkedIndices._linkedAttributesChanged to true if the value is changed. Declaration public bool Highlighted { get; set; } Property Value Type Description Boolean LinkedAttributeChanged Gets and sets IVLab.Plotting.LinkedIndices.LinkedAttributes._linkedAttributeChanged . Declaration public bool LinkedAttributeChanged { get; set; } Property Value Type Description Boolean Masked Gets and sets IVLab.Plotting.LinkedIndices.LinkedAttributes._masked , automatically toggling IVLab.Plotting.LinkedIndices.LinkedAttributes._linkedAttributeChanged and IVLab.Plotting.LinkedIndices._linkedAttributesChanged to true if the value is changed. Declaration public bool Masked { get; set; } Property Value Type Description Boolean"
  },
  "api/IVLab.Plotting.NiceAxisLabel.html": {
    "href": "api/IVLab.Plotting.NiceAxisLabel.html",
    "title": "Class NiceAxisLabel | IVLab 2DPlotting",
    "keywords": "Class NiceAxisLabel Creates \"nice\" axis labels by taking the min and max values that the axis needs to display and altering them to create an even tick spacing. Inheritance Object NiceAxisLabel Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class NiceAxisLabel : MonoBehaviour Properties Inverted Declaration public bool Inverted { get; set; } Property Value Type Description Boolean NiceMax Declaration public float NiceMax { get; } Property Value Type Description Single NiceMin Declaration public float NiceMin { get; } Property Value Type Description Single Methods GenerateNiceMinMax(Single, Single) Uses Wilkinson's algorithm (or Heckbert's if Wilkinson's fails) to generate a \"nice\" set of min, max and tick spacing values for the given data range. Declaration public (float, float) GenerateNiceMinMax(float min, float max) Parameters Type Name Description Single min Minimum value in the data range. Single max Maximum value in the data range. Returns Type Description (T1, T2) < Single , Single > Both the adjusted \"nice\" min and the \"nice\" max, in tuple form. Remarks Must be called prior to generating axis labels. GenerateXAxisLabel(Vector2, Vector2, Boolean) Sets the necessary local variables before calling IVLab.Plotting.NiceAxisLabel.GenerateAxisLabel(Vector2,System.Single,System.Boolean) in order to generate the axis labels in the x-direction. Declaration public void GenerateXAxisLabel(Vector2 sourcePos, Vector2 bounds, bool drawGridlines = false) Parameters Type Name Description Vector2 sourcePos Start position of the axis (where the minimum value is located) Vector2 bounds Bounds of the plot. Boolean drawGridlines Whether or not to draw gridlines as part of the axis labels. GenerateYAxisLabel(Vector2, Vector2, Boolean) Sets the necessary local variables before calling IVLab.Plotting.NiceAxisLabel.GenerateAxisLabel(Vector2,System.Single,System.Boolean) in order to generate the axis labels in the y-direction. Declaration public void GenerateYAxisLabel(Vector2 sourcePos, Vector2 bounds, bool drawGridlines = false) Parameters Type Name Description Vector2 sourcePos Start position of the axis (where the minimum value is located) Vector2 bounds Bounds of the plot. Boolean drawGridlines Whether or not to draw gridlines as part of the axis labels."
  },
  "api/IVLab.Plotting.ParallelCoordsPlot.html": {
    "href": "api/IVLab.Plotting.ParallelCoordsPlot.html",
    "title": "Class ParallelCoordsPlot | IVLab 2DPlotting",
    "keywords": "Class ParallelCoordsPlot Parallel coordinates plot DataPlot implementation that uses Unity particle systems along with line renderers to efficiently render many data points at once. Inheritance Object DataPlot ParallelCoordsPlot Implements ILinkedData Inherited Members DataPlot.outerBounds DataPlot.innerBounds DataPlot.padding DataPlot.defaultColor DataPlot.highlightedColor DataPlot.maskedColor DataPlot.selectionPadding DataPlot.clickSelectionRadius DataPlot.brushSelectionRadius DataPlot.plotMask DataPlot.plotOuterRect DataPlot.plotInnerRect DataPlot.plotSelectionRect DataPlot.deleteButton DataPlot.dataTable DataPlot.linkedIndices DataPlot.plotsCanvas DataPlot.selectedIndexDictionary DataPlot.selectedDataPointIndices DataPlot.selectedDataPointMins DataPlot.selectedDataPointMaxes DataPlot.PlotMask DataPlot.PlotOuterRect DataPlot.PlotSelectionRect DataPlot.BrushRadius DataPlot.ResizePlot(Vector2) DataPlot.SetPlotSize() Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class ParallelCoordsPlot : DataPlot, ILinkedData Fields defaultLineColor The default color of lines in the plot. Declaration protected Color32 defaultLineColor Field Value Type Description Color32 highlightedLineColor The color of highlighted lines in the plot. Declaration protected Color32 highlightedLineColor Field Value Type Description Color32 maskedLineColor The color of masked lines in the plot. Declaration protected Color32 maskedLineColor Field Value Type Description Color32 Methods BrushSelection(Vector2, Vector2, SelectionMode.State) Selects all the data points that the brush has passed over. Declaration public override void BrushSelection(Vector2 prevBrushPosition, Vector2 brushDelta, SelectionMode.State selectionState) Parameters Type Name Description Vector2 prevBrushPosition Previous position of the brush. Vector2 brushDelta Change in position from previous to current. SelectionMode.State selectionState State of the selection, e.g. Start/Update/End. Overrides DataPlot.BrushSelection(Vector2, Vector2, SelectionMode.State) Remarks For a parallel coords plot, a \"data point\" consists of multiple point particles, any of which could be selected. ClickSelection(Vector2, SelectionMode.State) Selects the point within the point selection radius that is closest to the mouse selection position if the selection state is \"Start\", and otherwise simply checks to see if the initially selected point is still within the point selection radius, highlighting it if it is, unhighlighting it if it is not. Declaration public override void ClickSelection(Vector2 selectionPosition, SelectionMode.State selectionState) Parameters Type Name Description Vector2 selectionPosition Current selection position. SelectionMode.State selectionState State of the selection, e.g. Start/Update/End. Overrides DataPlot.ClickSelection(Vector2, SelectionMode.State) Remarks For a parallel coords plot, a \"data point\" consists of multiple point particles, any of which could be selected. FlipAxis(Int32) Flips the j'th axis of the plot. Declaration public void FlipAxis(int j) Parameters Type Name Description Int32 j Index into the data table for the column that should be flipped. Init(DataPlotManager, Vector2, Int32[]) Initializes the parallel coords plot by initializing its particle systems, line renderers, axis labeling scripts, and axis-flipping buttons. Declaration public override void Init(DataPlotManager dataPlotManager, Vector2 outerBounds, int[] selectedDataPointIndices = null) Parameters Type Name Description DataPlotManager dataPlotManager Manager of the plot: contains references to the DataTable and LinkedIndices that the plot works from. Vector2 outerBounds Size to set the outer bounds of the plot. Int32 [] selectedDataPointIndices Array of data point indices the plot should display. If null , all data points will be displayed by default. Overrides DataPlot.Init(DataPlotManager, Vector2, Int32[]) Plot() Plots only the selected data in the data table, updating all particle systems and line renderers. Declaration public override void Plot() Overrides DataPlot.Plot() RectSelection(RectTransform) Selects all of the data points inside the given selection rectangle. Declaration public override void RectSelection(RectTransform selectionRect) Parameters Type Name Description RectTransform selectionRect Transform of the selection rectangle. Overrides DataPlot.RectSelection(RectTransform) Remarks For a parallel coords plot, a \"data point\" consists of multiple point particles, any of which could be selected. RefreshPlotGraphics() Updates the point particle systems to reflect the current state of the data point particles. Declaration public override void RefreshPlotGraphics() Overrides DataPlot.RefreshPlotGraphics() Remarks Usually called after a series of UpdateDataPoint() calls to ensure that those updates are visually reflected. UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes) Updates a specified data point (which for a parallel coords plot includes multiple point particles and their line renderer) based on its linked index attributes, only if it is already within the selected subset of points that this graph plots. Declaration public override void UpdateDataPoint(int index, LinkedIndices.LinkedAttributes indexAttributes) Parameters Type Name Description Int32 index Index of data point that needs to be updated. LinkedIndices.LinkedAttributes indexAttributes Current attributes of the data point. Overrides DataPlot.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes) Implements ILinkedData"
  },
  "api/IVLab.Plotting.RectSelectionMode.html": {
    "href": "api/IVLab.Plotting.RectSelectionMode.html",
    "title": "Class RectSelectionMode | IVLab 2DPlotting",
    "keywords": "Class RectSelectionMode A rectangular SelectionMode that generates a selection rectangle and asks the current DataPlot it is working on to select any data points that lie within it. Inheritance Object SelectionMode RectSelectionMode Inherited Members SelectionMode.plotsCamera SelectionMode.currentDataPlot SelectionMode.currentPlotRect Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class RectSelectionMode : SelectionMode Fields selectionGraphicsParent Parent object that stores selection graphics when they are not in use. Declaration protected Transform selectionGraphicsParent Field Value Type Description Transform Methods EndSelection(Vector2) Finalize the selection by updating it one last time and then deactivating the selection rectangle. Declaration public override void EndSelection(Vector2 mousePosition) Parameters Type Name Description Vector2 mousePosition Current mouse position in pixel coordinates (as from Input.mousePosition). Overrides SelectionMode.EndSelection(Vector2) StartSelection(DataPlot, Vector2) Set reference to the data plot this selection is now acting in, then reset, activate, and determine the starting position of the selection rectangle. Declaration public override void StartSelection(DataPlot dataPlot, Vector2 mousePosition) Parameters Type Name Description DataPlot dataPlot Data plot the selection is now acting on. Vector2 mousePosition Current mouse position in pixel coordinates (as from Input.mousePosition). Overrides SelectionMode.StartSelection(DataPlot, Vector2) UpdateSelection(Vector2) Update the size of the selection rectangle and let the current plot select anything within it. Declaration public override void UpdateSelection(Vector2 mousePosition) Parameters Type Name Description Vector2 mousePosition Current mouse position in pixel coordinates (as from Input.mousePosition). Overrides SelectionMode.UpdateSelection(Vector2)"
  },
  "api/IVLab.Plotting.ScatterPlot.html": {
    "href": "api/IVLab.Plotting.ScatterPlot.html",
    "title": "Class ScatterPlot | IVLab 2DPlotting",
    "keywords": "Class ScatterPlot Scatter plot DataPlot implementation that uses Unity's particle system to efficiently render many data points at once. Inheritance Object DataPlot ScatterPlot ClusterPlot Implements ILinkedData Inherited Members DataPlot.outerBounds DataPlot.innerBounds DataPlot.padding DataPlot.defaultColor DataPlot.highlightedColor DataPlot.maskedColor DataPlot.selectionPadding DataPlot.clickSelectionRadius DataPlot.brushSelectionRadius DataPlot.plotMask DataPlot.plotOuterRect DataPlot.plotInnerRect DataPlot.plotSelectionRect DataPlot.deleteButton DataPlot.dataTable DataPlot.linkedIndices DataPlot.plotsCanvas DataPlot.selectedIndexDictionary DataPlot.selectedDataPointIndices DataPlot.selectedDataPointMins DataPlot.selectedDataPointMaxes DataPlot.PlotMask DataPlot.PlotOuterRect DataPlot.PlotSelectionRect DataPlot.BrushRadius DataPlot.ResizePlot(Vector2) Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class ScatterPlot : DataPlot, ILinkedData Fields axisLabelPrefab Prefab from which axis labels can be instantiated. Declaration protected GameObject axisLabelPrefab Field Value Type Description GameObject axisLabelsParent Parent used to store axes labels in the scene hierarchy. Declaration protected Transform axisLabelsParent Field Value Type Description Transform clickedPointIdx Index into pointPositions array of the point currently selected by the click selection mode. Declaration protected int clickedPointIdx Field Value Type Description Int32 dropdownCanvas Declaration protected Canvas dropdownCanvas Field Value Type Description Canvas plotParticlesParent Declaration protected Transform plotParticlesParent Field Value Type Description Transform plotParticleSystem Particle system instance used to render data points. Declaration protected ParticleSystem plotParticleSystem Field Value Type Description ParticleSystem plotParticleSystemPrefab Declaration protected GameObject plotParticleSystemPrefab Field Value Type Description GameObject pointParticles Array of particles representing all the points on the plot. Declaration protected ParticleSystem.Particle[] pointParticles Field Value Type Description ParticleSystem.Particle [] pointPositions Array of positions of all the points on the plot. Declaration protected Vector2[] pointPositions Field Value Type Description Vector2 [] pointSize Declaration protected float pointSize Field Value Type Description Single scaleToOrigin Controls whether or not the plot is scaled so that the point (0, 0) is visible. Declaration protected bool scaleToOrigin Field Value Type Description Boolean xAxisLabel Axis label generating scripts. Declaration protected NiceAxisLabel xAxisLabel Field Value Type Description NiceAxisLabel xColumnIdx Indices into data table of currently selected columns that are being compared. Declaration protected int xColumnIdx Field Value Type Description Int32 xDropdown Dropdowns used to select which columns should be compared Declaration protected TMP_Dropdown xDropdown Field Value Type Description TMP_Dropdown yAxisLabel Axis label generating scripts. Declaration protected NiceAxisLabel yAxisLabel Field Value Type Description NiceAxisLabel yColumnIdx Indices into data table of currently selected columns that are being compared. Declaration protected int yColumnIdx Field Value Type Description Int32 yDropdown Dropdowns used to select which columns should be compared Declaration protected TMP_Dropdown yDropdown Field Value Type Description TMP_Dropdown Methods BrushSelection(Vector2, Vector2, SelectionMode.State) Selects all the data points that the brush has passed over. Declaration public override void BrushSelection(Vector2 prevBrushPosition, Vector2 brushDelta, SelectionMode.State selectionState) Parameters Type Name Description Vector2 prevBrushPosition Previous position of the brush. Vector2 brushDelta Change in position from previous to current. SelectionMode.State selectionState State of the selection, e.g. Start/Update/End. Overrides DataPlot.BrushSelection(Vector2, Vector2, SelectionMode.State) ClickSelection(Vector2, SelectionMode.State) Selects the point within the point selection radius that is closest to the mouse selection position if the selection state is \"Start\", and otherwise simply checks to see if the initially selected point is still within the point selection radius, highlighting it if it is, unhighlighting it if it is not. Declaration public override void ClickSelection(Vector2 selectionPosition, SelectionMode.State selectionState) Parameters Type Name Description Vector2 selectionPosition Current selection position. SelectionMode.State selectionState State of the selection, e.g. Start/Update/End. Overrides DataPlot.ClickSelection(Vector2, SelectionMode.State) DropdownSetColumnNames() Clears and then adds the column names from the data table to the x and y dropdown menus. Declaration protected virtual void DropdownSetColumnNames() Init(DataPlotManager, Vector2, Int32[]) Initializes the scatter plot by initializing its particle system, axis labeling scripts, and column selection dropdown menus. Declaration public override void Init(DataPlotManager dataPlotManager, Vector2 outerBounds, int[] selectedDataPointIndices = null) Parameters Type Name Description DataPlotManager dataPlotManager Manager of the plot: contains references to the DataTable and LinkedIndices that the plot works from. Vector2 outerBounds Size to set the outer bounds of the plot. Int32 [] selectedDataPointIndices Array of data point indices the plot should display. If null , all data points will be displayed by default. Overrides DataPlot.Init(DataPlotManager, Vector2, Int32[]) Plot() Plots only the selected data in the data table based on the two currently selected columns. Declaration public override void Plot() Overrides DataPlot.Plot() RectSelection(RectTransform) Selects all of the data points inside the given selection rectangle. Declaration public override void RectSelection(RectTransform selectionRect) Parameters Type Name Description RectTransform selectionRect Transform of the selection rectangle. Overrides DataPlot.RectSelection(RectTransform) RefreshPlotGraphics() Updates the point particle system to reflect the current state of the data point particles. Declaration public override void RefreshPlotGraphics() Overrides DataPlot.RefreshPlotGraphics() Remarks Usually called after a series of UpdateDataPoint() calls to ensure that those updates are visually reflected. SetPlotSize() Sets the plot size, as well as positioning the dropdown menus. Declaration protected override void SetPlotSize() Overrides DataPlot.SetPlotSize() UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes) Updates a specified data point based on its linked index attributes, only if it is already within the selected subset of points that this graph plots. Declaration public override void UpdateDataPoint(int index, LinkedIndices.LinkedAttributes indexAttributes) Parameters Type Name Description Int32 index Index of data point that needs to be updated. LinkedIndices.LinkedAttributes indexAttributes Current attributes of the data point. Overrides DataPlot.UpdateDataPoint(Int32, LinkedIndices.LinkedAttributes) xDropdownUpdated() Callback to update the currently selected x-column index whenever a new selection is made in the x-axis dropdown, and then replot the plot. Declaration protected virtual void xDropdownUpdated() Remarks Relies on the fact that the \"value\" of a dropdown is also the index of that column in the data table. yDropdownUpdated() Callback to update the currently selected y-column index whenever a new selection is made in the y-axis dropdown, and then replot the plot. Declaration protected virtual void yDropdownUpdated() Remarks Relies on the fact that the \"value\" of a dropdown is also the index of that column in the data table. Implements ILinkedData"
  },
  "api/IVLab.Plotting.SelectionMode.html": {
    "href": "api/IVLab.Plotting.SelectionMode.html",
    "title": "Class SelectionMode | IVLab 2DPlotting",
    "keywords": "Class SelectionMode Abstract class which declares variables and methods ubiquitous to all possible selection modes. Inheritance Object SelectionMode BrushSelectionMode ClickSelectionMode RectSelectionMode Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public abstract class SelectionMode : MonoBehaviour Fields currentDataPlot Data plot the selection is currently acting on. Declaration protected DataPlot currentDataPlot Field Value Type Description DataPlot currentPlotRect Rect transform of the current data plot. Declaration protected RectTransform currentPlotRect Field Value Type Description RectTransform plotsCamera Declaration protected Camera plotsCamera Field Value Type Description Camera Methods EndSelection(Vector2) Finalizes the selection based on mouse position. Declaration public abstract void EndSelection(Vector2 mousePosition) Parameters Type Name Description Vector2 mousePosition Current mouse position in pixel coordinates (as from Input.mousePosition). StartSelection(DataPlot, Vector2) Grants the selection a reference to the data plot it is acting on, and begins performing the selection. Declaration public abstract void StartSelection(DataPlot dataPlot, Vector2 mousePosition) Parameters Type Name Description DataPlot dataPlot Data plot the selection is now acting on. Vector2 mousePosition Current mouse position in pixel coordinates (as from Input.mousePosition). UpdateSelection(Vector2) Updates the selection based on mouse position. Declaration public abstract void UpdateSelection(Vector2 mousePosition) Parameters Type Name Description Vector2 mousePosition Current mouse position in pixel coordinates (as from Input.mousePosition)."
  },
  "api/IVLab.Plotting.SelectionMode.State.html": {
    "href": "api/IVLab.Plotting.SelectionMode.State.html",
    "title": "Enum SelectionMode.State | IVLab 2DPlotting",
    "keywords": "Enum SelectionMode.State Selection states. Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public enum State Fields Name Description End Selection has just ended. Could be used in EndSelection(Vector2) . Start Selection has just started. Could be used in StartSelection(DataPlot, Vector2) . Update Selection is updating. Could be used in UpdateSelection(Vector2) ."
  },
  "api/IVLab.Plotting.SplitViewController.html": {
    "href": "api/IVLab.Plotting.SplitViewController.html",
    "title": "Class SplitViewController | IVLab 2DPlotting",
    "keywords": "Class SplitViewController Basic control over the 2D/3D split camera view. Inheritance Object SplitViewController Namespace : IVLab.Plotting Assembly : cs.temp.dll.dll Syntax public class SplitViewController : MonoBehaviour"
  }
}